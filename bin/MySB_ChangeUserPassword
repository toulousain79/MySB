#!/bin/bash
# ----------------------------------
source $(dirname $0)/../inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
######################################################################
#
# Usage:	MySB_ChangeUserPassword <username> <password>
#
##################### FIRST LINE #####################################

if [ "$USAGE" == "ON" ]; then
	if [ "`screen -ls | grep MySB_CreateUser`" == "" ]; then
		if [ -z $1 ] || [ -z $2 ]; then
			ListingUsers
			for seedUser in $UsersList; do
				LIST="$LIST|$seedUser"
			done
			LIST="`echo \($LIST\) | sed -e 's/(|/(/g;'`"

			echo -e "${CBLUE}Usage:$CEND	${CYELLOW}$ScriptName$CEND ${CGREEN}<username> <password>$CEND"
			if [ ! -z $LIST ]; then
				echo -e "${CBLUE}Available users: $CEND${CYELLOW}$LIST$CEND"
			fi
			EndingScript 0 0
		fi
		
		NewUser=$1
		NewUserPassword=$2
		TYPE="MANUAL"
	fi
else
	NewUser=$1
	NewUserPassword=$2
	TYPE=$3
fi

#### System
log_daemon_msg "Change system password for user $NewUser"
echo -e "$NewUserPassword\\n$NewUserPassword" | passwd $NewUser &> /dev/null
StatusLSB

#### Samba
if [ "$IsInstalled_Samba" == "YES" ] && [ -f /etc/samba/smb.conf ]; then
	log_daemon_msg "Create samba account for $NewUser"
	echo -e "$NewUserPassword\n$NewUserPassword" | smbpasswd -s -a $NewUser &> /dev/null
	StatusLSB
fi

#### NginX	
log_daemon_msg "Change web server password for user $NewUser"
htpasswd -bs /etc/nginx/passwd/MySB $NewUser $NewUserPassword &> /dev/null
StatusLSB

#### RPC
log_daemon_msg "Change RPC password for user $NewUser"
if [ ! -f /etc/nginx/passwd/MySB_$NewUser ]; then
	touch /etc/nginx/passwd/MySB_$NewUser
fi
chmod 640 /etc/nginx/passwd/MySB_$NewUser
chown www-data:www-data /etc/nginx/passwd/MySB_$NewUser
htpasswd -bs /etc/nginx/passwd/MySB_$NewUser $NewUser $NewUserPassword &> /dev/null
StatusLSB

#### OpenVPN
# if [ "$IsInstalled_OpenVPN" == "YES" ]; then
	# log_daemon_msg "Change OpenVPN ZIP password for user $NewUser"
	# screen -dmS OpenVPN_Zip /bin/bash $MySB_InstallDir/install/OpenVPN zip "$NewUser" "$NewUserPassword" "INSTALL";
	# WaitingSTD OpenVPN_Zip
	# StatusLSB
# fi

#### Change Home User Rights
log_daemon_msg "Confirm rights for user $NewUser"
ManageDirectoriesAndFiles
StatusLSB

#### ruTorrent Stream Plugin password
if [ -f $RutorrentDir/conf/users/$UserToCreate/plugins/stream/config.php ]; then
	log_daemon_msg "Change ruTorrent Stream Plugin password for user $NewUser"
	SEARCH=$(cat $RutorrentDir/conf/users/$NewUser/plugins/stream/config.php | grep '$auth' | awk '{ print $3 }'| cut -d "'" -f 2)
	if [ -z $SEARCH ]; then
		perl -pi -e "s/$auth = '';/$auth = '$NewUser\:$NewUserPassword';/g" $RutorrentDir/conf/users/$NewUser/plugins/stream/config.php
		StatusLSB
	else
		perl -pi -e "s/$SEARCH/$NewUser\:$NewUserPassword/g" $RutorrentDir/conf/users/$NewUser/plugins/stream/config.php
		StatusLSB
	fi
fi

#### send infos by mail to user
if [ ! -z "$MainUserEmail" ]; then
	#if [ "`ps ax | grep 'MySB_CreateUser' | sed '/grep/d'`" != "" ]; then
	if [ "$ScriptName" == "MySB_CreateUser" ]; then
		Subject="MySB - Account created for $NewUser"
		Message="Account Created"
		Case="account_created"
	else
		if [ "$TYPE" == "UPGRADE" ]; then
			Subject="MySB - Upgraded to $MySB_CurrentVersion"
			Message="MySB upgraded"
			Case="upgrade"
		else
			Subject="MySB - Password changed for $NewUser"
			Message="Password changed"
			Case="account_confirmed"
			sqlite3 -cmd '.timeout 150000' $MySB_DB "UPDATE users SET users_passwd = '' WHERE users_ident = '$NewUser';"
		fi
	fi

	SendMail "$Subject" "$NewUser" "$Case" "$Message"
fi

#### START services
case "$TYPE" in
	"MANUAL"|"APPLYCONFIG")
		ManageServices start "nginx"
	;;
esac

# -----------------------------------------
source $(dirname $0)/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################