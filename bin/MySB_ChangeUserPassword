#!/bin/bash
# ----------------------------------
source $(dirname $0)/../inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
######################################################################
#
# Usage:	MySB_ChangeUserPassword <username> <password>
#
##################### FIRST LINE #####################################

#### Includes
source $MySB_InstallDir/inc/funcs_by_script/funcs_MySB_CreateUser

if [ "$USAGE" == "ON" ]; then
	if [ "`screen -ls | grep MySB_CreateUser`" == "" ]; then
		if [ -z $1 ] || [ -z $2 ]; then
			gfnListCountUsers 'all'
			for seedUser in $gsUsersList; do
				LIST="$LIST|$seedUser"
			done
			LIST="`echo \($LIST\) | sed -e 's/(|/(/g;'`"

			echo -e "${CBLUE}$ChangeUserPassword_Usage_0$CEND	${CYELLOW}$gsScriptName$CEND ${CGREEN}$ChangeUserPassword_Usage_1$CEND"
			if [ ! -z $LIST ]; then
				echo -e "${CBLUE}$Global_AvailableUsers$CEND${CYELLOW}$LIST$CEND"
			fi
			gfnEndingScript 0
		fi

		NewUser=$1
		NewUserPassword=$2
		LocSwitch="MANUAL"
	fi
else
	NewUser=$1
	NewUserPassword=$2
	LocSwitch=$3
fi

UserAccounType="`cmdMySQL 'MySB_db' "SELECT account_type FROM users WHERE users_ident='$NewUser';"`"

case "$UserAccounType" in
	"normal")
		#### System
		log_daemon_msg "$ChangeUserPassword_ChangePass [$NewUser]"
		echo -e "$NewUserPassword\\n$NewUserPassword" | passwd $NewUser &> /dev/null
		gfnStatusLSB

		#### Samba
		if [ "$gbIsInstalled_Samba" == "YES" ] && [ -f /etc/samba/smb.conf ]; then
			log_daemon_msg "$ChangeUserPassword_SambaAccount [$NewUser]"
			echo -e "$NewUserPassword\n$NewUserPassword" | smbpasswd -s -a $NewUser &> /dev/null
			gfnStatusLSB
		fi

		#### NextCloud
		if [ "$gbIsInstalled_NextCloud" == "YES" ]; then
			log_daemon_msg "$ChangeUserPassword_NextCloud [$NewUser]"
			UserExist="`cmdMySQL 'NextCloud_db' "SELECT uid FROM nc_users WHERE uid='$NewUser';"`"

			if [ -z "$UserExist" ]; then # Add the user
				gfnNextCloudAccountManage 'create' "$NewUser" "$NewUserPassword"
				cmdMySQL 'MySB_db' "UPDATE users SET init_password = '1' WHERE users_ident='$NewUser';"
			else # Update the user
				if [ "$gsScriptName" != "MySB_CreateUser" ]; then
					gfnNextCloudAccountManage 'edit' "$NewUser" "$NewUserPassword"
				fi
			fi
			unset UserExist
			gfnStatusLSB
		fi

		#### RPC
		log_daemon_msg "$ChangeUserPassword_RpcPass [$NewUser]"
		if [ ! -f /etc/nginx/passwd/MySB_$NewUser ]; then
			touch /etc/nginx/passwd/MySB_$NewUser
		fi
		chmod 640 /etc/nginx/passwd/MySB_$NewUser
		chown www-data:www-data /etc/nginx/passwd/MySB_$NewUser
		htpasswd -bs /etc/nginx/passwd/MySB_$NewUser $NewUser $NewUserPassword &> /dev/null
		gfnStatusLSB

		#### Change Home User Rights
		log_daemon_msg "$ChangeUserPassword_ConfirmRights [$NewUser]"
		gfnManageDirAndFiles 'global'
		gfnStatusLSB

		#### ruTorrent Stream Plugin password
		if [ -f $gsRutorrentDir/conf/users/$UserToCreate/plugins/stream/config.php ]; then
			log_daemon_msg "$ChangeUserPassword_StreamPlugin [$NewUser]"
			SEARCH=$(cat $gsRutorrentDir/conf/users/$NewUser/plugins/stream/config.php | grep '$auth' | awk '{ print $3 }' | cut -d "'" -f 2)
			if [ -z $SEARCH ]; then
				perl -pi -e "s/$auth = '';/$auth = '$NewUser\:$NewUserPassword';/g" $gsRutorrentDir/conf/users/$NewUser/plugins/stream/config.php
				gfnStatusLSB
			else
				perl -pi -e "s/$SEARCH/$NewUser\:$NewUserPassword/g" $gsRutorrentDir/conf/users/$NewUser/plugins/stream/config.php
				gfnStatusLSB
			fi
		fi
	;;
esac

#### NginX
log_daemon_msg "$ChangeUserPassword_WebServer [$NewUser]"
htpasswd -bs /etc/nginx/passwd/MySB $NewUser $NewUserPassword &> /dev/null
gfnStatusLSB

#### send infos by mail to user
if [ ! -z "$gsMainUserEmail" ]; then
	UserLanguage="`cmdMySQL 'MySB_db' "SELECT language FROM users WHERE users_ident = '$NewUser';"`"
	gfnLoadLanguage 'MySB_ChangeUserPassword'

	if [ "$gsScriptName" != "MySB_CreateUser" ]; then
		if [ "$LocSwitch" == "UPGRADE" ]; then
			Subject="$ChangeUserPassword_SubjectUpgraded $gsCurrentVersion"
			Message="$ChangeUserPassword_MessageUpgraded"
			Case="upgrade"
		else
			Subject="$ChangeUserPassword_SubjectPassChanged [$NewUser]"
			Message="$ChangeUserPassword_MessagePassChanged"
			Case="account_confirmed"
			cmdMySQL 'MySB_db' "UPDATE users SET users_passwd = '' WHERE users_ident='$NewUser';"
		fi
		gfnSendMail "$Subject" "$NewUser" "$Case" "$Message"
	fi
fi

#### START services
case "$LocSwitch" in
	"MANUAL"|"APPLYCONFIG")
		gfnManageServices start "nginx"
	;;
esac

#### Disable init password
cmdMySQL 'MySB_db' "UPDATE users SET init_password = '0' WHERE users_ident='$NewUser';"

#### Change Home User Rights
log_daemon_msg "$ChangeUserPassword_ConfirmRights [$NewUser]"
gfnManageDirAndFiles 'user'
gfnStatusLSB

# -----------------------------------------
source $(dirname $0)/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################