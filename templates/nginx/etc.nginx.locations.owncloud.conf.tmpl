# ownCloud compatibility
location ^~/nc {
	satisfy any;
	allow all;
	auth_basic off;
	access_log /var/log/nginx/nextcloud-access.log;
	error_log /var/log/nginx/nextcloud-error.log;
	rewrite ^/nc(.*) https://$http_host/oc$1 permanent;
}
location ^~/owncloud {
	satisfy any;
	allow all;
	auth_basic off;
	access_log /var/log/nginx/nextcloud-access.log;
	error_log /var/log/nginx/nextcloud-error.log;
	rewrite ^/owncloud(.*) https://$http_host/oc$1 permanent;
}

location ^~/oc {
	root <MySB_InstallDir>/web/apps;
	index index.php;
	access_log /var/log/nginx/owncloud-access.log;
	error_log /var/log/nginx/owncloud-error.log;

	satisfy any;
	allow all;
	auth_basic off;

	# set max upload size
	client_max_body_size 512M;
	fastcgi_buffers 64 4K;

	# Disable gzip to avoid the removal of the ETag header
	gzip off;

	# Uncomment if your server is build with the ngx_pagespeed module
	# This module is currently not supported.
	pagespeed off;

	rewrite ^/caldav(.*)$ /remote.php/caldav$1 redirect;
	rewrite ^/carddav(.*)$ /remote.php/carddav$1 redirect;
	rewrite ^/webdav(.*)$ /remote.php/webdav$1 redirect;

	error_page 403 /core/templates/403.php;
	error_page 404 /core/templates/404.php;

	location ~ robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}

	location ~ ^/(?:\.htaccess|data|config|db_structure\.xml|README){
		deny all;
	}

	# The following 2 rules are only needed with webfinger
	rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
	rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;

    location ~ /.well-known/carddav {
        return 301 $scheme://$host/remote.php/dav;
    }
    location ~ /.well-known/caldav {
        return 301 $scheme://$host/remote.php/dav;
    }

	location ~ /.well-known/acme-challenge { }

	try_files $uri $uri/ /index.php;
    # location ~ / {
        # rewrite ^ /index.php$uri;
    # }

    location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
        return 404;
    }
    location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) {
        return 404;
    }

	location ~ \.php(?:$|/) {
	#location ~ ^/(?:index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|ocs-provider/.+|core/templates/40[34])\.php(?:$|/) {
		include /etc/nginx/conf.d/php-ssl;
		#fastcgi_param front_controller_active true;
		fastcgi_intercept_errors on;
		fastcgi_request_buffering on;
	}

    location ~ ^/(?:updater|ocs-provider)(?:$|/) {
        try_files $uri $uri/ =404;
        index index.php;
    }

    # Adding the cache control header for js and css files
    # Make sure it is BELOW the PHP block
    location ~* \.(?:css|js)$ {
        try_files $uri /index.php$uri$is_args$args;
        add_header Cache-Control "public, max-age=7200";
        # Add headers to serve security related headers (It is intended to have those duplicated to the ones above)
        # Before enabling Strict-Transport-Security headers please read into this topic first.
        #add_header Strict-Transport-Security "max-age=15552000; includeSubDomains";
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;
        add_header X-Download-Options noopen;
        add_header X-Permitted-Cross-Domain-Policies none;
        # Optional: Don't log access to assets
        access_log off;
    }

    location ~* \.(?:svg|gif|png|html|ttf|woff|ico|jpg|jpeg)$ {
        try_files $uri /index.php$uri$is_args$args;
        # Optional: Don't log access to other assets
        access_log off;
    }
}