#!/bin/bash
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

#### GENERAL SETTINGS

## Bind listening socket and outgoing connections to this network interface address.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#bind = rakshasa.no
#bind = 127.0.0.1
# For rTorrent v0.8.4 and upper, use the next lign.
#network.bind_address.set = rakshasa.no
#network.bind_address.set = 127.0.0.1

## Set the address reported to the tracker.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#ip = rakshasa.no
#ip = 127.0.0.1
# For rTorrent v0.8.4 and upper, use the next lign.
#network.local_address.set = rakshasa.no
network.local_address.set = <server_ip>

## Try to open a listening port in the range a up to and including b.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#port_range = <port_range>
# For rTorrent v0.8.4 and upper, use the next lign.
network.port_range.set = <port_range>

## Open the listening port at a random position in the port range.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#port_random = no
# For rTorrent v0.8.4 and upper, use the next lign.
network.port_random.set = no

## Perform hash check on torrents that have finished downloading.
## Check hash for finished torrents. Might be useful until the bug is fixed that causes lack of diskspace not to be properly reported.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#check_hash = yes
# For rTorrent v0.8.4 and upper, use the next lign.
pieces.hash.on_completion.set = yes

## Set the default download directory. Defaults to "./".
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#directory = ~/rtorrent/incomplete
# For rTorrent v0.8.4 and upper, use the next lign.
directory.default.set = ~/rtorrent/incomplete

## Session management will be enabled and the torrent files for all open downloads will be stored in this directory.
## Only one instance of rtorrent should be used with each session directory, though at the moment no locking is done.
## An empty string will disable the session directory.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#session = ~/rtorrent/.session
# For rTorrent v0.8.4 and upper, use the next lign.
session.path.set = ~/rtorrent/.session

## Use a http proxy. Use an empty string to disable.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#http_proxy =
# For rTorrent v0.8.4 and upper, use the next lign.
network.http.proxy_address.set =

## Add a preferred filename encoding to the list.
## The encodings are attempted in the order they are inserted, if none match the torrent default is used.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#encoding_list = UTF-8
# For rTorrent v0.8.4 and upper, use the next lign.
encoding.add = utf8

## Set how rtorrent should deal with encrypted Bittorrent connections.
## By default, encryption is disabled, equivalent to specifying the option none.
## Alternatively, any number of the following options may be specified:
##		allow_incoming (allow incoming encrypted connections),
##		try_outgoing (use encryption for outgoing connections),
##		require (disable unencrypted handshakes),
##		require_RC4 (also disable plaintext transmission after the initial encrypted handshake),
##		enable_retry (if the initial outgoing connection fails, retry with encryption turned on if it was off or off if it was on),
##		prefer_plaintext (choose plaintext when peer offers a choice between plaintext transmission and RC4 encryption, otherwise RC4 will be used).
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#encryption = allow_incoming, try_outgoing, enable_retry
# For rTorrent v0.8.4 and upper, use the next lign.
# Enforce encryption
protocol.encryption.set = require, require_RC4, allow_incoming, try_outgoing, enable_retry, prefer_plaintext
# Allow encryption
#protocol.encryption.set = allow_incoming, try_outgoing, enable_retry, prefer_plaintext

## Call command every interval seconds, starting from start.
## An interval of zero calls the task once, while a start of zero calls it immediately.
## Currently command is forwarded to the option handler.
## Start and interval may optionally use a time format, dd:hh:mm:ss.
## F.ex to start a task every day at 18:00, use 18:00:00,24:00:00.
## schedule = id,start,interval,command
## commands: stop_untied =, close_untied =, remove_untied =
## stop, close or remove the torrents that are tied to filenames that have been deleted.
#
## watch a directory for new torrents, and stop those that have been deleted
schedule = watch_directory,5,5,"load_start=~/rtorrent/watch/*.torrent,d.set_custom1=~/rtorrent/complete/,d.delete_tied="
# schedule = tied_directory,5,5,start_tied=
# schedule = untied_directory,5,5,close_untied=
#
# close torrents when diskspace is low. */
schedule = low_diskspace,5,60,close_low_diskspace=10240M
#
# Periodically save session data
schedule = session_save,240,300,session_save=~/rtorrent/.session
#
## stop torrents when reaching upload ratio in percent,
## when also reaching total upload in bytes, or when
## reaching final upload ratio in percent
## example: stop at ratio 2.0 with at least 200 MB uploaded, or else ratio 20.0
#schedule = ratio,60,60,stop_on_ratio=200,200M,2000
#
## alternative calls to bind and IP that should handle dynamic IP's
#schedule = ip_tick,0,1800,ip=rakshasa
#schedule = bind_tick,0,1800,bind=rakshasa
#
## example of scheduling commands: Switch between two ip's every 5 seconds
#schedule = "ip_tick1,5,10,ip=torretta"
#schedule = "ip_tick2,10,10,ip=lampedusa"
#
## Delete id from the scheduler.
#
#schedule_remove = "ip_tick1"

## Start torrents that are tied to filenames that have been re-added.
#
#start_tied =

## Stop, close or remove the torrents that are tied to filenames that have been deleted. Clear the association with the 'U' key.
#
#stop_untied =
#close_untied =
#remove_untied =

## Load and possibly start a file, or possibly multiple files by using the wild-card "*".
## This is meant for use with schedule, though ensure that the start is non-zero.
## The loaded file will be tied to the filename provided.
#
#load = file
#load_verbose = file
#load_start = file
#load_start_verbose = file

## Load a resource file.
## Try_import does not throw torrent::input_error exception on bad input.
#
#import = file
#try_import = file

## Stop torrents when they reach the given upload ratio min_ratio in percent.
## If the optional min_upload is given, require a total upload amount of this many bytes as well.
## If the optional max_ratio is given, stop the torrent when reaching this ratio regardless of the total upload amount.
## Exclude certain torrent by pressing Shift+I in the downlist list.
## Use with the schedule option.
#
#stop_on_ratio = min_ratio
#min_upload, stop_on_ratio = min_ratio,min_upload,max_ratio

## Call a command on a download when its state changes.
## Only a subset of commands are available.
#
#on_insert = id,command
#on_erase = id,command
#on_open = id,command
#on_close = id,command
#on_start = id,command
#on_stop = id,command
#on_hash_queued = id,command
#on_hash_removed = id,command
#on_hash_done = id,command
#on_finished = id,command


#### THROTTLE SETTINGS

## Set the maximum global upload and download rates.
## Global upload and download rate in KiB. "0" for unlimited
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#upload_rate = 0
#download_rate = 0
# For rTorrent v0.8.4 and upper, use the next lign.
throttle.global_up.max_rate.set_kb = 0
throttle.global_down.max_rate.set_kb = 0

## Set the minimum and maximum number of peers to allow in each download.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#min_peers = 40
#max_peers = 100
# For rTorrent v0.8.4 and upper, use the next lign.
#throttle.min_peers.normal.set = 1
#throttle.max_peers.normal.set = 50

## Set the minimum and maximum number of peers to allow while seeding, or -1 (default) to use max_peers.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#min_peers_seed = 10
#max_peers_seed = 50
# For rTorrent v0.8.4 and upper, use the next lign.
#throttle.min_peers.seed.set = -1
#throttle.max_peers.seed.set = -1

## Set the maximum number of simultaneous uploads per download.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#max_uploads = 15
# For rTorrent v0.8.4 and upper, use the next lign.
#throttle.max_uploads.set = 10

## Change the divider used to calculate the max upload and download slots to use when the throttle is changed.
## Disable by setting 0.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#max_uploads_div =
#max_downloads_div =
# For rTorrent v0.8.4 and upper, use the next lign.
#throttle.max_uploads.div.set = 1
#throttle.max_downloads.div.set = 1

## Max upload and download slots allowed.
## Disable by setting 0.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#max_uploads_global = 5
#max_downloads_global = 10
# For rTorrent v0.8.4 and upper, use the next lign.
#throttle.max_uploads.global.set = 5
#throttle.max_downloads.global.set = 10

#### TRACKER RELATED SETTINGS

# Tracker related settings.

## Set to no to disable all tracker requests.
## Useful for disabling rtorrent with the schedule command.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#enable_trackers = yes
# For rTorrent v0.8.4 and upper, use the next lign.
trackers.enable=yes

## Dump tracker requests to filename, disable by supplying an empty string.
## Only torrents loaded while tracker_dump contains a non-empty string will be logged at the moment, although disabling it will work as expected.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#tracker_dump =
# For rTorrent v0.8.4 and upper, use the next lign.
# ????????? =


## Set the numwant field sent to the tracker, which indicates how many peers we want.
## A negative value disables this feature.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
# tracker_numwant = -1
# For rTorrent v0.8.4 and upper, use the next lign.
#trackers.numwant.set = -1

## Use UDP trackers.
## Disable if you are behind a firewall, etc, that does not allow connections to UDP trackers.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#use_udp_trackers = no
# For rTorrent v0.8.4 and upper, use the next lign.
trackers.use_udp.set = no

## Set the certificates to use in http requests.
## See Curl's CURLOPT_CAPATH and CURLOPT_CAINFO options for further information.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
# SSL certificate name
#http_cacert =
# SSL certificate path
#http_capath = /etc/ssl/certs
# For rTorrent v0.8.4 and upper, use the next lign.
network.http.capath.set = /etc/ssl/certs
network.http.cacert.set = <InstallDir>/ssl/mysb.cert
network.http.ssl_verify_peer.set = 0

#### USER-INTERFACE SETTINGS

# Display related settings.

## Create a new view.
#
#view_add = name

## Sort a view according the the criteria set by view_sort_current.
## If the optional argument is supplied, the view is not sorted if a change happened during the last seconds.
## This command is meant to be used with schedule.
#
#view_sort = name
#view_sort = name,seconds

## Set the sorting criteria for when new elements inserted or view_sort is called.
## The list can contain any number of criteria, including zero, from the following:
## name, name_reverse, stopped, started, complete, incomplete, state_changed, state_changed_reverse
#view_sort_new = name
#view_sort_current = name
#...

## Set a list of filter to apply when new new downloads are added and when view_sort is called.
## All filters must match for the download to be included.
## stopped, started, complete, incomplete,
#
#view_filter = name

## Change the key-bindings.
## qwerty|azerty|qwertz|dvorak
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#key_layout = azerty
# For rTorrent v0.8.4 and upper, use the next lign.
#keys.layout.set = azerty


#### FILE-SYSTEM SETTINGS

# File-system related settings.

## Preallocate files; reduces defragmentation on filesystems.
#
system.file_allocate.set = no

## Set the maximum size a file can have.
## Disable by passing -1.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#max_file_size = -1
# For rTorrent v0.8.4 and upper, use the next lign.
#system.file.max_size.set = -1

## Split files in a torrent larger than size into seperate files.
## Disable by passing -1.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#split_file_size = -1
# For rTorrent v0.8.4 and upper, use the next lign.
#system.file.split_size.set = -1

## Set the suffix used on split files.
## Defaults to .part.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#split_suffix = .part
# For rTorrent v0.8.4 and upper, use the next lign.
#system.file.split_suffix.set = .part


#### DOWNLOAD SETTINGS

# Settings that require a download as a target, the options need to be called through f.ex on_finished.

## Create or delete a symbolic link.
## The link path is the concatenation of path, the result of the type on the download, and suffix.
## Available types are; base_path uses the base path of the download, base_filename uses the base filename of the download, tied uses the path of the file the download is tied to, see start_tied.
#
#create_link = type,path,suffix
#delete_link = type,path,suffix


#### ADVANCED SETTINGS

# This list contains settings users shouldn't need to touch, some may even cause crashes or similar if incorrectly set.


## Configure how far ahead we ask the kernel to read when doing hash checking.
## The hash checker uses madvise(..., MADV_WILLNEED) for the requests.
## hash read-ahead controls how many MB to request the kernel to read ahead ahead
## if the value is too low the disk may not be fully utilized,
## while if too high the kernel might not be able to keep the read pages
## in memory thus end up trashing.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#hash_read_ahead = 8
# For rTorrent v0.8.4 and upper, use the next lign.
#system.hash.read_ahead.set = 8

## Interval between attempts to check the hash when the chunk is not in memory, in milliseconds.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#hash_interval = 50
# For rTorrent v0.8.4 and upper, use the next lign.
#system.hash.interval.set = 50

## Number of attempts to check the hash while using the mincore status, before forcing.
## Overworked systems might need lower values to get a decent hash checking rate.
# number of attempts to check the hash while using the mincore status, before forcing
# overworked systems might need lower values to get a decent hash checking rate
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#hash_max_tries = 3
# For rTorrent v0.8.4 and upper, use the next lign.
#system.hash.max_tries.set = 3

## Always use MS_SYNC rather than MS_ASYNC when syncing chunks.
## This may be nessesary in case of filesystem bugs like NFS in linux ~2.6.13.
#
#safe_sync = yes|no

## Number of files to simultaneously keep open.
## LibTorrent dynamically opens and closes files as necessary when mapping files to memory.
## Default is based on sysconf(_SC_OPEN_MAX).
## You probably only think you know what this option does, so don't touch it.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#max_open_files = 192
# For rTorrent v0.8.4 and upper, use the next lign.
#network.max_open_files.set = 192

## Number of network sockets to simultaneously keep open.
## This value is set to a reasonable value based on sysconf(_SC_OPEN_MAX).
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#max_open_sockets = 65023
# For rTorrent v0.8.4 and upper, use the next lign.
#network.max_open_sockets.set = 65023

## Number of sockets to simultaneously keep open.
## This value is set to 32 by default.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#max_open_http = 32
# For rTorrent v0.8.4 and upper, use the next lign.
#network.http.max_open.set = 32

## Adjust the send and receive buffer size for socket.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#send_buffer_size = 1M
#receive_buffer_size = 25K
# For rTorrent v0.8.4 and upper, use the next lign.
#network.send_buffer.size.set = 1M
#network.receive_buffer.size.set = 131072

## Set the umask for this process, which is applied to all files created by the program.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#umask = 0644
# For rTorrent v0.8.4 and upper, use the next lign.
#system.umask.set = 0644

## Changes the working directory of the process using chdir.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#working_directory = <homedir>/rtorrent
# For rTorrent v0.8.4 and upper, use the next lign.
system.cwd.set = <homedir>/rtorrent

## Controls if the session torrent is saved when a torrent finishes.
## By default on.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#session_on_completion = yes
# For rTorrent v0.8.4 and upper, use the next lign.
session.on_completion.set = yes

## Controls if a lock file is created in the session directory on startup.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#session_lock = yes
# For rTorrent v0.8.4 and upper, use the next lign.
session.use_lock.set = yes

## Change the TOS of peer connections, by default set to throughput.
## If the option is set to default then the system default TOS is used.
## A hex value may be used for non-standard settings.
#
#tos = default|lowdelay|throughput|reliability|mincost, tos = hex

## Enable logging of the peer handshake.
## This generates a large number of log messages, but may be useful to debug connection problems.
#
#handshake_log = yes


#### OTHERS

# Enable the default ratio group.
#ratio.enable=
# Change the limits, the defaults should be sufficient.
# Upload to a minimum ratio of 2.0
#ratio.min.set=200
# Upload to a maximum ratio of 4.0
#ratio.max.set=400
# Upload a minimum of 250 MB
#ratio.upload.set=250M
# When seeding ratio is reached close the torrent
#system.method.set = group.seeding.ratio.command, d.close=

# Sort the main view by ratio
# view.sort_current = main,greater=d.get_ratio=
# view.sort_new = main,less=d.get_ratio=
# view.sort = main

# Sort the seeding view by the upload rate and only show torrents with peers
# view.sort_current = seeding,greater=d.get_up_rate=
# view.filter = seeding,"and=d.get_complete=,d.get_peers_connected="
# view.sort_new = seeding,less=d.get_up_rate=
# view.sort = seeding

# Sort the leeching view by name
# view.sort_current = leeching,greater=d.get_name=
# view.sort_new = leeching,greater=d.get_name=
# view.sort = leeching

# Filter the active view by connected peers
# view.sort_current = active,less=d.get_name=
# view.sort_new = leeching,less=d.get_name=
# view.filter = active,d.get_peers_connected=
# view.sort = active

# schedule = sort_main,11,5,view.sort=main
# schedule = sort_seeding,12,5,view.sort=seeding
# schedule = sort_leeching,13,5,view.sort=leeching
# schedule = sort_active,14,5,view.sort=active


# when the torrent finishes, it executes "mv -n <base_path> /home/user/Download/"
# and then sets the destination directory to "/home/user/Download/". (0.7.7+)
system.method.set_key = event.download.finished,move_complete,"d.set_directory=$d.get_custom1=;execute=~/.rTorrent.bsh,$d.get_base_path=,$d.get_custom1=,$d.get_name=,$d.get_loaded_file="

# enable DHT support for trackerless torrents or when all trackers are down
# may be set to "disable" (completely disable DHT), "off" (do not start DHT),
# "auto" (start and stop DHT as needed), or "on" (start DHT immediately)
# the default is "off". for DHT to work, a session directory must be defined
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#dht = disable
# For rTorrent v0.8.4 and upper, use the next lign.
dht.mode.set = disable

# UDP port to use for DHT.
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#dht_port = 6881
# For rTorrent v0.8.4 and upper, use the next lign.
#dht.port.set = 6881

# Enable peer exchange (for torrents not marked private)
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#peer_exchange = no
# For rTorrent v0.8.4 and upper, use the next lign.
protocol.pex.set = no

## Set the max amount of memory space used to mapping file chunks.
## This may also be set using ulimit -m where 3/4 will be allocated to file chunks.
## # nb does not refer to physical memory
#
# For rTorrent v0.7.7 to v0.8.3, use the next lign.
#max_memory_usage = 3500M
# For rTorrent v0.8.4 and upper, use the next lign.
pieces.memory.max.set = 3500M

# preload type 0 = Off, 1 = madvise, 2 = direct paging
#pieces.preload.type.set = 1
#pieces.preload.min_size.set = 262144
#pieces.preload.min_rate.set = 5120
#pieces.sync.always_safe.set = no
#pieces.sync.timeout.set = 600
#pieces.sync.timeout_safe.set = 900

network.scgi.open_port = 127.0.0.1:<scgi_port>
#network.scgi.dont_route.set =

#session.name.set = (cat,(system.hostname),:,(system.pid))

# BlockList (see '<homedir>/blocklist/blocklists.source' and '<homedir>/blocklist/BlocklistsRTorrent.bsh')
#ipv4_filter.add_address = 1.0.0.0/2, unwanted
#ipv4_filter.load="<homedir>/blocklist/blocklist_rtorrent.txt",unwanted
#ipv4_filter.size_data=
#schedule=load_filter,0,24:00:00,"ipv4_filter.load=<homedir>/blocklist/blocklist_rtorrent.txt,unwanted"
#print = "IPv4 filter list size data:",(to_kb,(ipv4_filter.size_data))," kb."
#xmlrpc localhost ipv4_filter.dump ""


# Init ruTorrent Plugins
execute = {sh,-c,/usr/bin/php <InstallDir>/web/apps/ru/php/initplugins.php <username> &}

################ Log section
#
# https://github.com/rakshasa/rtorrent/wiki/LOG-Logging
#
# LEVELS logging
#	critical
#	error
#	warn
#	notice
#	info
#	debug
#
#log.execute = <homedir>/logs/execute.log
log.open_file = "rtorrent", <homedir>/logs/rtorrent.log
log.open_file = "tracker", <homedir>/logs/tracker.log
log.open_file = "storage", <homedir>/logs/storage.log
log.open_file = "connection", <homedir>/logs/connection.log
log.open_file = "peer", <homedir>/logs/peer.log
log.open_file = "thread", <homedir>/logs/thread.log
log.open_file = "torrent", <homedir>/logs/torrent.log
log.open_file = "dht", <homedir>/logs/dht.log
log.add_output = "info", "rtorrent"
log.add_output = "storage_notice", "storage"
log.add_output = "connection_notice", "connection"
log.add_output = "peer_notice", "peer"
log.add_output = "thread_notice", "thread"
log.add_output = "torrent_notice", "torrent"
log.add_output = "dht_notice", "dht"
log.add_output = "tracker_notice", "tracker"
