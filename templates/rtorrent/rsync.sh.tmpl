#!/bin/sh

#### VARs
# Destination(RSYNC)
DstDir=""			# Destination directory without ending '/'. (ex: /home/myuser)
DstSrv=""			# Hostname OR IP address of the destination. (ex: myserver.mydomain.com)
DstPort=""			# SSH Port (ex: 22)
DstUser=""			# SSH Username (ex: my_user)
DstPass=""			# SSH Password
# Notification (if enabled)
MailObject="MySB - Transfer to NAS completed !"

# DO NOT MODIFY
ScriptName=$(basename $0)
FilesList="$HOME/scripts/files.list"
LogFile="$HOME/scripts/$ScriptName.log"
LockFile="$HOME/scripts/$ScriptName.lock"
PID="$$"
get_base_path="$1"
get_custom1="$2"
get_name="$3"

# The current download is added to the list
echo "$get_custom1$get_name" >> $FilesList

# Rsync already launched: STOP
if [ -e $LockFile ] || [ ! -s $FilesList ]; then
	exit 0
fi

# Creating a lock file for do not launch two instances of in parallel
touch $LockFile

# Retrieving files to transfer
Listing() {
	# VARs
	ToSynchronize="$1"
	Count=`echo $ToSynchronize |awk -F "/" '{print NF-1}'`
	(( Count++ ))
	Filename="`echo $ToSynchronize | awk '{split($0,a,"/"); print a['$Count']}'`"
	LastDirectory="`echo $ToSynchronize | sed "s/\/$Filename//g;"`"
	Count=`echo $LastDirectory |awk -F "/" '{print NF-1}'`
	(( Count++ ))
	LastDirectory="`echo $LastDirectory | awk '{split($0,a,"/"); print a['$Count']}'`"
	DstDir="$DstDir/$LastDirectory/"

	# Log
	echo "##################### START #####################################"
	echo "From:		$ToSynchronize"
	echo "To:			$DstDir"
	echo "Server:		$DstUser@$DstSrv"
	echo "Date:		`/bin/date +%Y/%m/%d`"
	echo "Hour:		`/bin/date +%H:%M:%S`"
	echo "--------------------"
	echo

	# Creating sub-directory on destination
	sshpass -p $DstPass ssh -p $DstPort -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $DstUser@$DstSrv "if [ ! -d $DstDir ]; then mkdir -p $DstDir; fi"

	# Start synchroniszation with RSYNC
	rsync -av --rsh="/usr/bin/sshpass -p $DstPass ssh -p$DstPort -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" $ToSynchronize $DstUser@$DstSrv:$DstDir

	# Deleting the file from the list
	Lign="`echo $ToSynchronize | sed s,/,\\\\\\\\\\/,g`"
	sed -i "/$Lign/d" $FilesList

	echo
	echo "--------------------"
	echo "Date:		`/bin/date +%Y/%m/%d`"
	echo "Hour:		`/bin/date +%H:%M:%S`"
	echo "###################### END ######################################"

	# E-mail notification
	content="$LogFile.$PID"
	curl --data "username=$UserName&get_custom1=$ToSynchronize&get_name=$Filename&subject=$MailObject&content=$content" http://localhost:8888/rTorrent.php
}

# Execute
while read Lign; do
	Listing "$Lign" >> $LogFile.$PID
	# Move log file content
	if [ -f $LogFile.$PID ]; then
		cat $LogFile.$PID >> $LogFile
		rm -f $LogFile.$PID
	fi
done < $FilesList

# Removing the lock file
if [ -e $LockFile ]; then
	rm -f $LockFile
fi
