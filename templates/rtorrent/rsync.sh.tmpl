#!/bin/sh

#### VARs
# Destination(RSYNC)
DstDir=""			# Destination directory without ending '/'. (ex: /home/myuser)
DstSrv=""			# Hostname OR IP address of the destination. (ex: myserver.mydomain.com)
DstPort=""			# SSH Port (ex: 22)
DstUser=""			# SSH Username (ex: my_user)
DstPass=""			# SSH Password
MaxToSync=0			# Max file to synchronize from 'FilesList' per cronjob ? (ex: 0 for sync all) 
CreateSubDir=1		# Create a subdirectory for alone files (Used by some scraper)
# Notification (if enabled)
MailObjectOK="MySB - Transfer to NAS completed !"
MailObjectKO="MySB - Transfer to NAS failed !"

# DO NOT MODIFY
UserName="`whoami`"
ScriptName=$(basename $0)
FilesList="$HOME/scripts/files.list"
LogFile="$HOME/logs/$ScriptName.log"
LockFile="$HOME/scripts/$ScriptName.lock"
RsyncCipher="aes128-ctr"
PID="$$"
get_base_path="$1"
get_custom1="$2"
get_name="$3"
get_loaded_file="$4"

# You must list your categories here (subfolders added in MySB options on portal)
# Only this category will be synchronise and added to the list
# Or let it like follow for synchronised all your files
FnGet_NameEscaped="`echo $get_name | sed s,/,\\\\\\\\\\/,g`"
Tree="`echo $get_custom1$get_name | sed "s/$FnGet_NameEscaped//g;"`"
CountSlash=`echo $Tree | awk -F "/" '{print NF-1}'`
FnCategoryDir="`echo $Tree | awk '{split($0,a,"/"); print a['$CountSlash']}'`"
case "$FnCategoryDir" in
	'Category1'|'Category2')
		return
	;;
	*)
		# The current download is added to the list
		echo "$get_base_path|$get_custom1|$get_name|$get_loaded_file|$FnCategoryDir" >> $FilesList
	;;
esac

# Rsync already launched: STOP
if [ -e $LockFile ] || [ ! -s $FilesList ]; then
	exit 0
fi

# Creating a lock file for do not launch two instances of in parallel
touch $LockFile

# Retrieving files to transfer
Listing() {
	# VARs
	FnGet_Base_Bath="$1"
	FnGet_Custom1="$2"
	FnGet_Name="$3"
	FnGet_LoadedFile="$4"
	FnCategoryDir="$5"
	FnGet_NameEscaped="`echo $FnGet_Name | sed s,/,\\\\\\\\\\/,g`"
	FnLine="$FnGet_Custom1$FnGet_Name"
	ToSynchronize="`echo $FnLine | sed 's/\ /\\\ /g;'`"
	CompleteDirs="`ls -A1 ~/rtorrent/complete/`"
	Tree="`echo $FnLine | sed "s/$FnGet_NameEscaped//g;"`"

	if [ -f "$FnLine" ] && [ $CreateSubDir -eq 1 ]; then
		FnGet_NameEscaped="`echo $FnGet_NameEscaped | sed 's/\[/\\\[/g;' | sed 's/\]/\\\]/g;' | sed 's/(/\\(/g' | sed 's/)/\\)/g'`"
		TreeEscaped="`echo $FnLine | sed "s/$FnGet_NameEscaped//g;" | sed s,/,\\\\\\\\\\/,g`"
		SubDirectory="`echo ${FnLine%.*} | sed "s/$TreeEscaped//g;"`"
	fi

	if [ -z "`echo $CompleteDirs | grep "$CategoryDir"`" ]; then
		if [ ! -z "$SubDirectory" ] && [ $CreateSubDir -eq 1 ]; then
			FinalDst="$DstDir/$SubDirectory/"
		else
			FinalDst="$DstDir/"
		fi
	else
		if [ ! -z "$SubDirectory" ] && [ $CreateSubDir -eq 1 ]; then
			FinalDst="$DstDir/$CategoryDir/$SubDirectory/"
		else
			FinalDst="$DstDir/$CategoryDir/"
		fi
	fi
	FinalDstEscaped="`echo $FinalDst | sed 's/\[//g;' | sed 's/\]//g;' | sed 's/(//g' | sed 's/)//g' | sed 's/\ /./g;'`"

	# Log
	echo "#### START ####"
	echo "Script:		$0"
	echo "From:		$FnLine"
	echo "To:		$FinalDst"
	echo "Server:		$DstUser@$DstSrv"
	echo "Date:		`/bin/date +%Y/%m/%d`"
	echo "Hour:		`/bin/date +%H:%M:%S`"
	echo "--------------------"
	echo

	# Start synchroniszation with RSYNC
	# Creating sub-directory on destination
	sshpass -p $DstPass ssh -p $DstPort -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $DstUser@$DstSrv "if [ ! -d $FinalDstEscaped ]; then mkdir -p \"$FinalDstEscaped\"; fi"

	# Start synchroniszation with RSYNC
	rsync -rtvy --numeric-ids --partial --append --stats -e "/usr/bin/sshpass -p$DstPass ssh -p $DstPort -c $RsyncCipher -o Compression=no -x -T -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" "$FnLine" $DstUser@$DstSrv:"$FinalDstEscaped"

	# Deleting the file from the list
	if [ $? -eq 0 ]; then
		FnGet_LoadedFileEscaped="`echo $FnGet_LoadedFile | sed s,/,\\\\\\\\\\/,g`"
		sed -i "/$FnGet_LoadedFileEscaped/d" $FilesList
	else
		MailObjectOK="$MailObjectKO"
	fi

	echo
	echo "--------------------"
	echo "Date:		`/bin/date +%Y/%m/%d`"
	echo "Hour:		`/bin/date +%H:%M:%S`"
	echo "##### END #####"

	# E-mail notification
	content="$LogFileTemp"
	curl --data "username=$UserName&get_custom1=$ToSynchronize&get_name=$FnGet_Name&subject=$MailObjectOK&content=$content" http://localhost:8888/rTorrent.php
}

# Execute
Count=0
NumLine=1
Line="`head -n $NumLine $FilesList | tail -n 1`"
while [ ! -z "$Line" ]; do
	LogFileTemp="/tmp/$UserName-$ScriptName.log.$PID"
	get_base_path="`echo $Line | awk '{split($0,a,\"|\"); print a[1]}'`"
	get_custom1="`echo $Line | awk '{split($0,a,\"|\"); print a[2]}'`"
	get_name="`echo $Line | awk '{split($0,a,\"|\"); print a[3]}'`"
	get_loaded_file="`echo $Line | awk '{split($0,a,\"|\"); print a[4]}'`"
	CategoryDir="`echo $Line | awk '{split($0,a,\"|\"); print a[5]}'`"

	Listing "$get_base_path" "$get_custom1" "$get_name" "$get_loaded_file" "$CategoryDir" > $LogFileTemp

	# Move log file content
	if [ -f $LogFileTemp ]; then
		cat $LogFileTemp >> $LogFile
		cat $LogFileTemp >> $LockFile
		rm -f $LogFileTemp
	fi

	Count=$(($Count + 1))
	NumLine=$(($NumLine + 1))
	Line="`head -n $NumLine $FilesList | tail -n 1`"	
	if [ $Count -eq $MaxToSync ] && [ $MaxToSync -ne 0 ]; then
		unset Line
	fi
done

# Removing the lock file
if [ -e $LockFile ]; then
	rm -f $LockFile
fi
