#!/bin/bash
# -----------------------------------------
if [ -f $(dirname $0)/../inc/includes_before ]; then source $(dirname $0)/../inc/includes_before; fi
# -----------------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

if [ "$1" != "manual" ] || [ -z "$1" ]; then
	if [ "`screen -ls | grep MySB`" == "" ]; then
		echo ""
		echo -e "$MySB_MustStartWith"
		exit 1
	fi
fi

#### Advertising
echo
echo -e "$Header_Install_0"
echo

echo
echo -e "$MySB_LoseConnection"
echo

echo
echo -e "$MySB_UserAdded"
echo
echo

echo -e "$MySB_AllIsOk"
echo
QuestionGetString NO "$Global_WantToContinue" CONTINUE $Global_YES
CONTINUE="`echo $CONTINUE | tr '[:lower:]' '[:upper:]'`"
if [ "$CONTINUE" == "$Global_NO" ]; then
	echo -e "$Global_SeeYouLater"
	echo
	echo
	EndingScript 0
else
	#### Create MySB banner
	if [ "$BANNER" == "ON" ]; then
		BannerGenerator
	fi

	#### Advertising
	echo
	echo -e "$Header_Install_0"
	echo
	echo
	echo -e "$MySB_LoseConnection"
	echo	

	REBOOT=$Global_NO
	REBOOT="`echo $REBOOT | tr '[:lower:]' '[:upper:]'`"
fi

#### Count steps
CurrentSTEP=0
TotalSTEP=20
if [ "$ServerProvider" == "OVH" ] || [ "$ServerProvider" == "ONLINE" ]; then
	(( TotalSTEP++ ))
fi
if [ "$ToInstall_Cakebox" == "YES" ] || [ "$ToInstall_Manager" == "YES" ]; then # Tools
	(( TotalSTEP++ ))
fi
if [ "$ToInstall_Cakebox" == "YES" ]; then
	(( TotalSTEP++ ))
fi
if [ "$ToInstall_Manager" == "YES" ]; then
	(( TotalSTEP++ ))
fi
if [ "$ToInstall_OpenVPN" == "YES" ]; then
	TotalSTEP=$(( TotalSTEP+3 ))
fi
if [ "$ToInstall_Fail2Ban" == "YES" ]; then
	(( TotalSTEP++ ))
fi
if [ "$ToInstall_Webmin" == "YES" ]; then
	(( TotalSTEP++ ))
fi
if [ "$ToInstall_LogWatch" == "YES" ]; then
	(( TotalSTEP++ ))
fi
if [ "$ToInstall_PlexMedia" == "YES" ]; then
	(( TotalSTEP++ ))
fi
if [ "$ToInstall_DNScrypt" == "YES" ]; then
	(( TotalSTEP++ ))
fi
if [ "$ToInstall_ownCloud" == "YES" ]; then
	(( TotalSTEP++ ))
fi
case $MySB_PeerBlock in
	PeerGuardian)
		TotalSTEP=$(( TotalSTEP+2 ))
	;;
	*)
		(( TotalSTEP++ ))
	;;
esac

#
########## PREPARE - BoF ##########
#
echo -e "$MySB_Title_Preparing"

#### 0 - SSH
(( CurrentSTEP++ ))
if [ "$1" == "manual" ]; then
	clear
	echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/SSH$CEND"
	/bin/bash $MySB_InstallDir/install/SSH
else
	echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring SSH$CEND..."
	screen -dmS SSH /bin/bash $MySB_InstallDir/install/SSH 'INSTALL';
	WaitingScreen SSH
	StatusSTD
fi

#### 1 - Getting information about OVH monitoring engine
if [ "$ServerProvider" == "OVH" ] || [ "$ServerProvider" == "ONLINE" ]; then
	(( CurrentSTEP++ ))
	if [ "$1" == "manual" ]; then
		clear
		echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/Monitoring$CEND"
		read -p "$MySB_PressEnter"
		/bin/bash $MySB_InstallDir/install/Monitoring
	else
		echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_Step_ProviderInfos$CEND..."
		screen -dmS Monitoring /bin/bash $MySB_InstallDir/install/Monitoring 'INSTALL';
		WaitingScreen Monitoring
		StatusSTD
	fi
fi

#### 2 - Create basic security rules
(( CurrentSTEP++ ))
if [ "$1" == "manual" ]; then
	clear
	echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/bin/MySB_SecurityRules create$CEND"
	read -p "$MySB_PressEnter"
	/bin/bash $MySB_InstallDir/bin/MySB_SecurityRules create
else
	echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_Step_CreateSecurityRules$CEND..."
	screen -dmS MySB_SecurityRules /bin/bash $MySB_InstallDir/bin/MySB_SecurityRules 'create' 'INSTALL';
	WaitingScreen MySB_SecurityRules
	StatusSTD
fi

#### 3 - Tweaks
(( CurrentSTEP++ ))
if [ "$1" == "manual" ]; then
	clear
	echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/Tweaks$CEND"
	read -p "$MySB_PressEnter"
	/bin/bash $MySB_InstallDir/install/Tweaks
else
	echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_Step_Optimiszation$CEND..."
	screen -dmS Tweaks /bin/bash $MySB_InstallDir/install/Tweaks 'INSTALL';
	WaitingScreen Tweaks
	StatusSTD
fi

#### 4 - SourcesList
(( CurrentSTEP++ ))
if [ "$1" == "manual" ]; then
	clear
	echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/SourcesList$CEND"
	read -p "$MySB_PressEnter"
	/bin/bash $MySB_InstallDir/install/SourcesList
else
	echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_Step_SourcesDebian$CEND..."
	screen -dmS SourcesList /bin/bash $MySB_InstallDir/install/SourcesList 'INSTALL';
	WaitingScreen SourcesList
	StatusSTD
fi

#### 5 - Packages
(( CurrentSTEP++ ))
if [ "$1" == "manual" ]; then
	clear
	echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/Packages$CEND"
	read -p "$MySB_PressEnter"
	/bin/bash $MySB_InstallDir/install/Packages
else
	echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_Step_NeededPackages$CEND..."
	screen -dmS Packages /bin/bash $MySB_InstallDir/install/Packages 'INSTALL';
	WaitingScreen Packages
	StatusSTD
fi

#### 6 - DownloadAll
(( CurrentSTEP++ ))
if [ "$1" == "manual" ]; then
	clear
	echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/DownloadAll$CEND"
	read -p "$MySB_PressEnter"
	/bin/bash $MySB_InstallDir/install/DownloadAll
else
	echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_Step_DownloadAll$CEND..."
	screen -dmS DownloadAll /bin/bash $MySB_InstallDir/install/DownloadAll 'INSTALL';
	WaitingScreen DownloadAll
	StatusSTD
fi

if [ -f $MySB_InstallDir/temp/continue ]; then
	echo ""
	echo -e "$MySB_Error_Download"
	echo
	cat $MySB_InstallDir/temp/continue
	EndingScript 1
fi

#### 7 - Certificates
(( CurrentSTEP++ ))
if [ "$1" == "manual" ]; then
	clear
	echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/Certificates 'CreateCACertificate'$CEND"
	read -p "$MySB_PressEnter"
	/bin/bash $MySB_InstallDir/install/Certificates 'CreateCACertificate'
else
	echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_Step_Certificates$CEND..."
	screen -dmS Certificates /bin/bash $MySB_InstallDir/install/Certificates 'CreateCACertificate' 'NoServiceNameToGive' 'INSTALL';
	WaitingScreen Certificates
	StatusSTD
fi

#
########## PREPARE - EoF ##########
#

#
########## SECURITY - BoF ##########
#
echo
echo -e "$MySB_Title_SecurityRules"

#### 8 - RKHunter
(( CurrentSTEP++ ))
if [ "$1" == "manual" ]; then
	clear
	echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/RKHunter$CEND"
	read -p "$MySB_PressEnter"
	/bin/bash $MySB_InstallDir/install/RKHunter
else
	echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring RKhunter$CEND..."
	screen -dmS RKHunter /bin/bash $MySB_InstallDir/install/RKHunter 'INSTALL';
	WaitingScreen RKHunter
	StatusSTD
fi

#### 9 - Fail2Ban
if [ "$ToInstall_Fail2Ban" == "YES" ]; then
	(( CurrentSTEP++ ))
	if [ "$1" == "manual" ]; then
		clear
		echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/Fail2Ban$CEND"
		read -p "$MySB_PressEnter"
		/bin/bash $MySB_InstallDir/install/Fail2Ban
	else
		echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring Fail2Ban$CEND..."
		screen -dmS Fail2Ban /bin/bash $MySB_InstallDir/install/Fail2Ban 'INSTALL';
		WaitingScreen Fail2Ban
		StatusSTD
	fi
fi

#### 10 - Bind
(( CurrentSTEP++ ))
if [ "$1" == "manual" ]; then
	clear
	echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/Bind$CEND"
	read -p "$MySB_PressEnter"
	/bin/bash $MySB_InstallDir/install/Bind
else
	echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring BIND$CEND..."
	screen -dmS Bind /bin/bash $MySB_InstallDir/install/Bind 'INSTALL';
	WaitingScreen Bind
	StatusSTD
fi

if [ -f $MySB_InstallDir/temp/continue ]; then
	echo ""
	echo -e "$MySB_Error_Bind"
	echo
	cat $MySB_InstallDir/temp/continue
	EndingScript 1
fi

### 11 - DNScrypt-proxy
if [ "$ToInstall_DNScrypt" == "YES" ]; then
	(( CurrentSTEP++ ))
	if [ "$1" == "manual" ]; then
		clear
		echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/DNScrypt$CEND"
		read -p "$MySB_PressEnter"
		/bin/bash $MySB_InstallDir/install/DNScrypt
	else
		echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring DNScrypt-proxy$CEND..."
		screen -dmS DNScrypt /bin/bash $MySB_InstallDir/install/DNScrypt 'INSTALL';
		WaitingScreen DNScrypt
		StatusSTD
	fi
	
	if [ -f $MySB_InstallDir/temp/continue ]; then
		echo ""
		echo -e "$MySB_Error_DNScrypt"
		echo
		cat $MySB_InstallDir/temp/continue
		EndingScript 1
	fi	
fi

#### 12 - BlockList / PeerGuardian
InstallRtorrent() {
	(( CurrentSTEP++ ))
	if [ "$1" == "manual" ]; then
		clear
		echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/Blocklists$CEND"
		read -p "$MySB_PressEnter"
		/bin/bash $MySB_InstallDir/install/Blocklists
	else
		echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_Step_rTorrentBlocklist$CEND..."
		screen -dmS Blocklist /bin/bash $MySB_InstallDir/install/Blocklists 'INSTALL';
		WaitingScreen Blocklist
		StatusSTD
	fi
}

case $MySB_PeerBlock in
	PeerGuardian)
		(( CurrentSTEP++ ))
		if [ "$1" == "manual" ]; then
			clear
			echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/PeerGuardian$CEND"
			read -p "$MySB_PressEnter"
			/bin/bash $MySB_InstallDir/install/PeerGuardian
		else
			echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_Step_PeerGuardian$CEND..."
			screen -dmS PeerGuardian /bin/bash $MySB_InstallDir/install/PeerGuardian 'INSTALL';
			WaitingScreen PeerGuardian
			StatusSTD
		fi
		
		InstallRtorrent $1
	;;
	rTorrent)
		InstallRtorrent $1
	;;	
	*)
		(( CurrentSTEP++ ))
		echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_Step_NoBlocklist$CEND..."
		StatusSTD
	;;
esac

#
########## SECURITY - EoF ##########
#

#
########## INSTALLATION - BoF ##########
#
echo
echo -e "$MySB_Title_InstallServices"

#### 13 - PHP
(( CurrentSTEP++ ))
if [ "$1" == "manual" ]; then
	clear
	echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/PHP$CEND"
	read -p "$MySB_PressEnter"
	/bin/bash $MySB_InstallDir/install/PHP
else
	echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring PHP5$CEND..."
	screen -dmS PHP /bin/bash $MySB_InstallDir/install/PHP 'INSTALL';
	WaitingScreen PHP
	StatusSTD
fi

#### 14 - Postfix
(( CurrentSTEP++ ))
if [ "$1" == "manual" ]; then
	clear
	echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/Postfix$CEND"
	read -p "$MySB_PressEnter"
	/bin/bash $MySB_InstallDir/install/Postfix
else
	echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring Postfix$CEND..."
	screen -dmS Postfix /bin/bash $MySB_InstallDir/install/Postfix 'INSTALL';
	WaitingScreen Postfix
	StatusSTD
fi

#### 15 - Nginx
(( CurrentSTEP++ ))
if [ "$1" == "manual" ]; then
	clear
	echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/Nginx$CEND"
	read -p "$MySB_PressEnter"
	/bin/bash $MySB_InstallDir/install/Nginx
else
	echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring NginX$CEND..."
	screen -dmS Nginx /bin/bash $MySB_InstallDir/install/Nginx 'INSTALL';
	WaitingScreen Nginx
	StatusSTD
fi

#### 16 - LoadAvg
(( CurrentSTEP++ ))
if [ "$1" == "manual" ]; then
	clear
	echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/LoadAvg$CEND"
	read -p "$MySB_PressEnter"
	/bin/bash $MySB_InstallDir/install/LoadAvg
else
	echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring LoadAvg$CEND..."
	screen -dmS LoadAvg /bin/bash $MySB_InstallDir/install/LoadAvg 'INSTALL';
	WaitingScreen LoadAvg
	StatusSTD
fi

#### 17 - VSFTP
(( CurrentSTEP++ ))
if [ "$1" == "manual" ]; then
	clear
	echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/VSFTP$CEND"
	read -p "$MySB_PressEnter"
	/bin/bash $MySB_InstallDir/install/VSFTP
else
	echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring VSFTPd$CEND..."
	screen -dmS VSFTP /bin/bash $MySB_InstallDir/install/VSFTP 'INSTALL';
	WaitingScreen VSFTP
	StatusSTD
fi

#### 18 - rTorrent
(( CurrentSTEP++ ))
if [ "$1" == "manual" ]; then
	clear
	echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/rTorrent$CEND"
	read -p "$MySB_PressEnter"
	/bin/bash $MySB_InstallDir/install/rTorrent
else
	echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring rTorrent$CEND..."
	screen -dmS rTorrent /bin/bash $MySB_InstallDir/install/rTorrent 'INSTALL';
	WaitingScreen rTorrent
	StatusSTD
fi

#### 19 - ruTorrent
(( CurrentSTEP++ ))
if [ "$1" == "manual" ]; then
	clear
	echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/ruTorrent$CEND"
	read -p "$MySB_PressEnter"
	/bin/bash $MySB_InstallDir/install/ruTorrent
else
	echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_Step_ruTorrent$CEND..."
	screen -dmS ruTorrent /bin/bash $MySB_InstallDir/install/ruTorrent 'INSTALL';
	WaitingScreen ruTorrent
	StatusSTD
fi

#### 20 - Tools
if [ "$ToInstall_Cakebox" == "YES" ] || [ "$ToInstall_Manager" == "YES" ]; then
	(( CurrentSTEP++ ))
	if [ "$1" == "manual" ]; then
		clear
		echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/Tools$CEND"
		read -p "$MySB_PressEnter"
		/bin/bash $MySB_InstallDir/install/Tools
	else
		echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring Composer, Bower and NodeJS$CEND..."
		screen -dmS Tools /bin/bash $MySB_InstallDir/install/Tools 'INSTALL';
		WaitingScreen Tools
		StatusSTD
	fi
fi

#### 21 - SeedboxManager
if [ "$ToInstall_Manager" == "YES" ]; then
	(( CurrentSTEP++ ))
	if [ "$1" == "manual" ]; then
		clear
		echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/SeedboxManager$CEND"
		read -p "$MySB_PressEnter"
		/bin/bash $MySB_InstallDir/install/SeedboxManager
	else
		echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring Seedbox-Manager$CEND..."
		screen -dmS SeedboxManager /bin/bash $MySB_InstallDir/install/SeedboxManager 'INSTALL';
		WaitingScreen SeedboxManager
		StatusSTD
	fi
fi

#### 22 - CakeboxLight
if [ "$ToInstall_Cakebox" == "YES" ]; then
	(( CurrentSTEP++ ))
	if [ "$1" == "manual" ]; then
		clear
		echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/CakeboxLight$CEND"
		read -p "$MySB_PressEnter"
		/bin/bash $MySB_InstallDir/install/CakeboxLight
	else	
		echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring CakeBox-Light$CEND..."
		screen -dmS CakeboxLight /bin/bash $MySB_InstallDir/install/CakeboxLight 'INSTALL';
		WaitingScreen CakeboxLight
		StatusSTD
	fi
fi

if [ "$ToInstall_OpenVPN" == "YES" ]; then
	#### 23a - OpenVPN
	(( CurrentSTEP++ ))
	if [ "$1" == "manual" ]; then
		clear
		echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/OpenVPN \"server\"$CEND"
		read -p "$MySB_PressEnter"
		/bin/bash $MySB_InstallDir/install/OpenVPN "server"
	else
		echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring OpenVPN$CEND..."
		screen -dmS OpenVPN /bin/bash $MySB_InstallDir/install/OpenVPN 'server' 'INSTALL';
		WaitingScreen OpenVPN
		StatusSTD
	fi

	#### 23b - Samba
	(( CurrentSTEP++ ))
	if [ "$1" == "manual" ]; then
		clear
		echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/Samba$CEND"
		read -p "$MySB_PressEnter"
		/bin/bash $MySB_InstallDir/install/Samba
	else
		echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring Samba$CEND..."
		screen -dmS Samba /bin/bash $MySB_InstallDir/install/Samba 'INSTALL';
		WaitingScreen Samba
		StatusSTD
	fi

	#### 23c - NFS
	(( CurrentSTEP++ ))
	if [ "$1" == "manual" ]; then
		clear
		echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/NFS$CEND"
		read -p "$MySB_PressEnter"
		/bin/bash $MySB_InstallDir/install/NFS
	else
		echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring NFS$CEND..."
		screen -dmS NFS /bin/bash $MySB_InstallDir/install/NFS 'INSTALL';
		WaitingScreen NFS
		StatusSTD
	fi
fi

#### 24 - Logwatch
if [ "$ToInstall_LogWatch" == "YES" ]; then
	(( CurrentSTEP++ ))
	if [ "$1" == "manual" ]; then
		clear
		echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/Logwatch$CEND"
		read -p "$MySB_PressEnter"
		/bin/bash $MySB_InstallDir/install/Logwatch
	else
		echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring Logwatch$CEND..."
		screen -dmS Logwatch /bin/bash $MySB_InstallDir/install/Logwatch 'INSTALL';
		WaitingScreen Logwatch
		StatusSTD
	fi
fi

### 25 - PlexMedia
if [ "$ToInstall_PlexMedia" == "YES" ]; then
	(( CurrentSTEP++ ))
	if [ "$1" == "manual" ]; then
		clear
		echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/PlexMedia$CEND"
		read -p "$MySB_PressEnter"
		/bin/bash $MySB_InstallDir/install/PlexMedia
	else
		echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring PlexMedia$CEND..."
		screen -dmS PlexMedia /bin/bash $MySB_InstallDir/install/PlexMedia 'INSTALL';
		WaitingScreen PlexMedia
		StatusSTD
	fi
fi

### 26 - ownCloud
if [ "$ToInstall_ownCloud" == "YES" ]; then
	(( CurrentSTEP++ ))
	if [ "$1" == "manual" ]; then
		clear
		echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/ownCloud$CEND"
		read -p "$MySB_PressEnter"
		/bin/bash $MySB_InstallDir/install/ownCloud
	else
		echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring ownCloud$CEND..."
		screen -dmS ownCloud /bin/bash $MySB_InstallDir/install/ownCloud 'INSTALL';
		WaitingScreen ownCloud
		StatusSTD
	fi
fi

#### 27 - Webmin
if [ "$ToInstall_Webmin" == "YES" ]; then
	(( CurrentSTEP++ ))
	if [ "$1" == "manual" ]; then
		clear
		echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/Webmin$CEND"
		read -p "$MySB_PressEnter"
		/bin/bash $MySB_InstallDir/install/Webmin
	else
		echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring Webmin$CEND..."
		screen -dmS Webmin /bin/bash $MySB_InstallDir/install/Webmin 'INSTALL';
		WaitingScreen Webmin
		StatusSTD
	fi
fi

#### 28 - Cron
(( CurrentSTEP++ ))
if [ "$1" == "manual" ]; then
	clear
	echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/install/Cron$CEND"
	read -p "$MySB_PressEnter"
	/bin/bash $MySB_InstallDir/install/Cron
else
	echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_InstallingConfiguring Cron$CEND..."
	screen -dmS Cron /bin/bash $MySB_InstallDir/install/Cron 'INSTALL';
	WaitingScreen Cron
	StatusSTD
fi

#### 29 - MySB_CreateUser
(( CurrentSTEP++ ))
if [ "$1" == "manual" ]; then
	clear
	echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- /bin/bash $MySB_InstallDir/bin/MySB_CreateUser \"$MainUser\" \"INSTALL\"$CEND"
	read -p "$MySB_PressEnter"
	/bin/bash $MySB_InstallDir/bin/MySB_CreateUser "$MainUser" "INSTALL"
else
	echo  -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $MySB_Step_MainUser \"$MainUser\"$CEND..."
	screen -dmS MySB_CreateUser /bin/bash $MySB_InstallDir/bin/MySB_CreateUser "$MainUser" "INSTALL";
	WaitingScreen MySB_CreateUser
	StatusSTD
fi

#### 30 - Modify rights and owner for directories and files
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Global_OwnerAndRights$CEND..."
ManageDirectoriesAndFiles
StatusSTD

#### 31 - Create final security rules
(( CurrentSTEP++ ))
if [ "$1" == "manual" ]; then
	clear
	echo -e "${CGREEN}$CurrentSTEP/$TotalSTEP	- source $MySB_InstallDir/bin/MySB_SecurityRules create$CEND"
	read -p "$MySB_PressEnter"
	/bin/bash $MySB_InstallDir/bin/MySB_SecurityRules create
else
	echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Global_FinalSecurityRules$CEND..."
	screen -dmS MySB_SecurityRules /bin/bash $MySB_InstallDir/bin/MySB_SecurityRules 'create' 'INSTALL';
	WaitingScreen MySB_SecurityRules
	StatusSTD
fi

#
########## INSTALLATION - EoF ##########
#

echo
echo -e "$MySB_Message_Last"

#### 30 - Reboot after install
if [ "$1" == "manual" ]; then
	QuestionGetString NO "$MySB_RebootNow" REBOOT $Global_NO
else
	REBOOT=$Global_YES
fi

# -----------------------------------------
if [ -f $(dirname $0)/../inc/includes_after ]; then source $(dirname $0)/../inc/includes_after; fi
# -----------------------------------------
##################### LAST LINE ######################################