#!/bin/bash
# ----------------------------------
source $(dirname $0)/../inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

#### VARs
binCURL="curl -skLS --retry 3"
if [ ! -z "$1" ]; then
	LocSwitch="$1"
fi
case `getconf LONG_BIT` in
	64)	Arch="amd64";;
	*)	Arch="i386";;
esac

#### Install packages
gfnPackageBundleInstall 'netselect-apt apt-mirror debian-archive-keyring apt-transport-https'
sed -i "s/^#0 4/0 4/g;" /etc/cron.d/apt-mirror

#### Global debian repos
if [ "$LocSwitch" == "BASIC" ]; then
	gfnCreateBasicSourcesList
else
	#### DotDeb (NginX, PHP, MySQL)
	CreateDotDebRepo

	#### Detect mirrors
	if gfnCheckCommand 0 netselect-apt && $binWGET -q --spider http://google.com; then
		netselect-apt -a $Arch -n -t 500 -o $MySB_InstallDir/temp/sources.list stable > $MySB_InstallDir/files/fastest_mirrors

		# Delete bad sources
		gfnDeleteBadSources "$MySB_InstallDir/files/fastest_mirrors"

		MirrorsList="`cat $MySB_InstallDir/files/fastest_mirrors | grep 'http'`"
		Count=1
		Max=5
		echo "# Generated by 'netselect-apt' for $Arch architecture" > $MySB_InstallDir/temp/sources.list
		echo "" >> $MySB_InstallDir/temp/sources.list
		for Mirror in $MirrorsList; do
			if [ $Count -le $Max ]; then
				Mirror="`echo $Mirror | sed -e 's/^ //g;'`"

				if [ -z "`cat $MySB_InstallDir/temp/sources.list | grep "$Mirror"`" ]; then
					ReleaseGPG="`$binCURL $Mirror/dists/$gsDebianRelease/Release.gpg`"
					if [ ! -z "$ReleaseGPG" ]; then
						echo "# $Mirror" >> $MySB_InstallDir/temp/sources.list
						echo "deb $Mirror $gsDebianRelease main contrib non-free" >> $MySB_InstallDir/temp/sources.list
						#echo "deb-src $Mirror $gsDebianRelease main contrib non-free" >> $MySB_InstallDir/temp/sources.list
						echo "deb $Mirror $gsDebianRelease-updates main contrib non-free" >> $MySB_InstallDir/temp/sources.list
						#echo "deb-src $Mirror $gsDebianRelease-updates main contrib non-free" >> $MySB_InstallDir/temp/sources.list
						echo "deb $Mirror $gsDebianRelease-backports main contrib non-free" >> $MySB_InstallDir/temp/sources.list
						echo >> $MySB_InstallDir/temp/sources.list
					fi
				else
					(( Max++ ))
				fi

				(( Count++ ))
			fi
		done
		echo "# Security" >> $MySB_InstallDir/temp/sources.list
		echo "deb http://security.debian.org stable/updates main contrib non-free" >> $MySB_InstallDir/temp/sources.list
		#echo "deb-src http://security.debian.org stable/updates main contrib non-free" >> $MySB_InstallDir/temp/sources.list
		sed -i "s/stable/$gsDebianRelease/g;" $MySB_InstallDir/temp/sources.list

		if [ -f $MySB_InstallDir/temp/sources.list ]; then mv $MySB_InstallDir/temp/sources.list /etc/apt/sources.list; fi
		rm $MySB_InstallDir/temp/sources.list* &> /dev/null
	else
		gfnCreateBasicSourcesList
	fi
fi

#### Local mirrors
if gfnCheckCommand 0 apt-mirror; then
	gfnCreateLocalMirror
fi

#### Force apt-get update
if [ "$gbIsReady_MySB_Db" == "YES" ]; then
	cmdMySQL 'MySB_db' "UPDATE system SET apt_update = 1, apt_date = '`date +%Y-%m-%d\ %H:%M:%S`' WHERE id_system='1';" -v
fi

#### Upgrade the system
gfnScriptInvoke 'ScreenSTD' "$MySB_InstallDir/bin/MySB_UpgradeSystem" 'SCREEN'

#### Show new /etc/apt/sources.list
echo
cat /etc/apt/sources.list
for sRepo in $(ls -1r /etc/apt/sources.list.d/*.list); do
	echo
	cat $sRepo
done
echo

# -----------------------------------------
source $(dirname $0)/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################