#!/bin/bash
# ----------------------------------
source $(dirname $0)/../inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

if [ "$ToInstall_ownCloud" == "YES" ]; then
	if CheckCommand 0 smbclient; then
		PackagesManage install "smbclient"
	fi

	#### VARs
	ownCloudDir=$MySB_InstallDir"`Func_SQL_Command 'SELECT' 'MySB_db' 'dir' 'repositories' "name = 'ownCloud'"`"
	ownCloudVersion="`Func_SQL_Command 'SELECT' 'MySB_db' 'version' 'repositories' "name = 'ownCloud'"`"
	TimeZoneEscaped="`echo $TimeZone | sed s,/,\\\\\\\\\\/,g`"
	TimeStamp=$(date +%s)
	#MailFrom="`echo $MainUserEmail | cut -d "@" -f 1`"
	#MailDomain="`echo $MainUserEmail | cut -d "@" -f 2`"

	#### NginX configuration
	cp -vf $MySB_InstallDir/templates/nginx/etc.nginx.locations.owncloud.conf.tmpl /etc/nginx/locations/ownCloud.conf
	perl -pi -e "s/<MySB_InstallDir>/$MySB_InstallDirEscaped/g" /etc/nginx/locations/ownCloud.conf
	chmod 0644 /etc/nginx/locations/ownCloud.conf
	# To install ownCloud allows the generation of a ownCloud configuration file and obtain the valeures 'InstanceId', 'PasswordSalt' and 'Secret'.
	if [ "$1" == "INSTALL" ]; then
		cp -vf $MySB_InstallDir/templates/nginx/etc.nginx.locations.owncloud.local.tmpl /etc/nginx/locations/ownCloud.local
		perl -pi -e "s/<MySB_InstallDir>/$MySB_InstallDirEscaped/g" /etc/nginx/locations/ownCloud.local
		chmod 0644 /etc/nginx/locations/ownCloud.local
	fi

	#### PHP
	perl -pi -e "s/post_max_size = 10M/post_max_size = 20G/g" /etc/php5/fpm/php.ini
	perl -pi -e "s/upload_max_filesize = 10M/upload_max_filesize = 20G/g" /etc/php5/fpm/php.ini
	perl -pi -e "s/max_file_uploads = 20/max_file_uploads = 20000/g" /etc/php5/fpm/php.ini
	perl -pi -e "s/output_buffering = 4096/output_buffering = Off/g" /etc/php5/fpm/php.ini
	echo "apc.enable_cli=1" >> /etc/php5/cli/conf.d/20-apcu.ini
	perl -pi -e "s/^;env\[PATH\]/env\[PATH\]/g" /etc/php5/fpm/pool.d/www.conf

	#### ownCloud Core
	if [ "$1" == "UPGRADE" ] || [ ! -d $ownCloudDir ]; then
		ownCloudUrl="`Func_SQL_Command 'SELECT' 'MySB_db' 'url' 'repositories' "name = 'ownCloud'"`"
		ownCloudFile="`Func_SQL_Command 'SELECT' 'MySB_db' 'file' 'repositories' "name = 'ownCloud'"`"
		DeleteDirectory 1 "$ownCloudDir"
		# if [ -d $ownCloudDir ]; then
			# rm -vrf $ownCloudDir
		# fi
		if [ ! -f $MySB_InstallDir/files/$ownCloudFile ]; then
			wget --no-check-certificate $ownCloudUrl -O $MySB_InstallDir/files/$ownCloudFile
		fi
		unzip $MySB_InstallDir/files/$ownCloudFile -d $MySB_InstallDir/temp/
		SubDirownCloud="`unzip -l $MySB_InstallDir/files/$ownCloudFile | awk '{ print $4 }' | cut -d '/' -f 1 | uniq | sed '1,3d;$d'`"
		if [ -d $MySB_InstallDir/temp/$SubDirownCloud ]; then
			mv -v $MySB_InstallDir/temp/$SubDirownCloud $ownCloudDir
		fi
	fi

	#### CRON
	crontab -u www-data -l > /tmp/crontab.tmp
	sed -i '/ownCloud/d' /tmp/crontab.tmp
	echo "*/15  *  *  *  * php -f $ownCloudDir/cron.php > /dev/null 2>&1 # ownCloud" | tee -a /tmp/crontab.tmp
	crontab -u www-data /tmp/crontab.tmp
	rm -f /tmp/crontab.tmp

	#### MySQL
	IfEmpty="`ls -a /var/lib/mysql/ownCloud_db/ 2> /dev/null | sed -e "/\.$/d" | wc -l`"
	if [ $IfEmpty -eq 1 ]; then
		/usr/bin/mysql --defaults-extra-file=/root/.config.cnf --database=ownCloud_db < $MySB_InstallDir/templates/Dump_MySQL_ownCloud_db_2015-09-17.sql
		/usr/bin/mysql --defaults-extra-file=/root/.config.cnf --database=ownCloud_db -e "UPDATE oc_preferences SET configvalue = '$TimeZone' WHERE configkey = 'timezone'";
	fi

	#### Create directories & change rights
	ManageDirectoriesAndFiles

	#### START services
	ManageServices start "php5-fpm nginx cron"

	#### ownCloud config file
	if [ "$1" == "INSTALL" ] && [ -d $ownCloudDir ]; then
		cp -vf $MySB_InstallDir/templates/owncloud/owncloud.config.php.tmpl $ownCloudDir/config/config.php
		perl -pi -e "s/<server_name>/$HostNameFQDN/g" $ownCloudDir/config/config.php
		perl -pi -e "s/<PORT_HTTPS>/$Port_HTTPS/g" $ownCloudDir/config/config.php
		perl -pi -e "s/<PORT_HTTP>/$Port_HTTP/g" $ownCloudDir/config/config.php
		perl -pi -e "s/<Version>/$ownCloudVersion/g" $ownCloudDir/config/config.php
		perl -pi -e "s/<MySB_DB_User>/MySB_user/g" $ownCloudDir/config/config.php
		perl -pi -e "s/<MySB_DB_Pass>/$MySQL_MysbPassword/g" $ownCloudDir/config/config.php
		perl -pi -e "s/<TimeZone>/$TimeZoneEscaped/g" $ownCloudDir/config/config.php
		perl -pi -e "s/<mail_from_address>/$MainUserEmail/g" $ownCloudDir/config/config.php
		#perl -pi -e "s/<mail_domain>/$MailDomain/g" $ownCloudDir/config/config.php
		sed -i "s/'default_language' => 'en'/'default_language' => '$EnvLang'/g;" $ownCloudDir/config/config.php
		chown www-data:www-data $ownCloudDir/config/config.php
		chmod 0640 $ownCloudDir/config/config.php

		source /etc/MySB/config_db
		curl --user $MySB_User:$MySB_Password --data "adminlogin=admin&adminpass=admin&directory=/home/owncloud&dbtype=mysql&dbuser=MySB_user&dbpass=$MySQL_MysbPassword&dbname=ownCloud_db&dbhost=localhost" "http://127.0.0.1:$Port_HTTP/owncloud/" &> /dev/null
		sleep 5
		if [ -f /etc/nginx/locations/ownCloud.local ]; then
			rm -vf /etc/nginx/locations/ownCloud.local
		fi
		perl -pi -e "s/'installed' => false/'installed' => true/g" $ownCloudDir/config/config.php
	fi

	#### External Storage (mount.json)
	if [ ! -f /home/owncloud/mount.json ]; then
		IdStorage=$(Func_SQL_Command 'SELECT' 'ownCloud_db' 'numeric_id' 'oc_storages' "id = 'local::/home/\$user/'")
		cp -vf $MySB_InstallDir/templates/owncloud/home.owncloud.mount.json.tmpl /home/owncloud/mount.json
		perl -pi -e "s/<IdStorage>/$IdStorage/g" /home/owncloud/mount.json
	fi

	#### ownCloud commands
	su -s /bin/sh www-data -c "/usr/bin/php $ownCloudDir/occ upgrade"
	su -s /bin/sh www-data -c "/usr/bin/php $ownCloudDir/occ files:scan --all"
	su -s /bin/sh www-data -c "/usr/bin/php $ownCloudDir/occ maintenance:mimetype:update-db"
	su -s /bin/sh www-data -c "/usr/bin/php $ownCloudDir/occ maintenance:mimetype:update-js"
	su -s /bin/sh www-data -c "/usr/bin/php $ownCloudDir/occ maintenance:repair"
	su -s /bin/sh www-data -c "/usr/bin/php $ownCloudDir/occ versions:cleanup"
	su -s /bin/sh www-data -c "/usr/bin/php $ownCloudDir/occ app:enable files_external"

	#### Manage Admin user
	if [ "$1" == "INSTALL" ] && [ -d $ownCloudDir ]; then
		OC_PASS=$MySQL_MysbPassword
		export OC_PASS
		su -s /bin/sh www-data -c "/usr/bin/php $ownCloudDir/occ user:resetpassword --password-from-env admin"
	fi

	if [ "$1" == "UPGRADE" ] && [ -d $ownCloudDir ]; then
		#### Create all existing MySB users
		ListingUsers
		for seedUser in $UsersList; do
			UserExist="`Func_SQL_Command 'SELECT' 'ownCloud_db' 'uid' 'oc_users' "uid='$seedUser'"`"

			if [ -z $UserExist ]; then
				FnUserMail="`Func_SQL_Command 'SELECT' 'MySB_db' 'users_email' 'users' "users_ident = '$seedUser'"`"
				OC_PASS="`GenPassword 8`"
				export OC_PASS
				su -s /bin/sh www-data -c "/usr/bin/php $ownCloudDir/occ user:add --password-from-env --display-name=\"$seedUser\" --group=\"MySB_users\" $seedUser" &> /dev/null
				Func_ownCloud_DB "CreateUser" "$seedUser" "$FnUserMail" "$EnvLang"
				Func_SQL_Command 'UPDATE' 'MySB_db' 'users' "init_password = '1'" "users_ident = '$seedUser'"
			fi
			unset UserExist
		done
	fi

	#### Logrotate
	LogRotate 'owncloud'

	if CheckCommand 0 $ownCloudDir/occ; then
		Func_SQL_Command 'UPDATE' 'MySB_db' 'services' "to_install = '0', is_installed = '1'" "serv_name = 'ownCloud'"
	fi
fi

# -----------------------------------------
source $(dirname $0)/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################