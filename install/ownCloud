#!/bin/bash
# ----------------------------------
source $(dirname $0)/../inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

#### Switch (INSTALL/UPGRADE/INIT)
if [ ! -z "$1" ]; then
	Switch="$1"
fi

#### Installation / Upgrade ?
if [ "$ToInstall_ownCloud" == "YES" ] && [ "$Switch" != "INIT" ]; then
	if ! CheckCommand 0 smbclient; then
		PackagesManage install "smbclient"
	fi

	#### VARs
	source /etc/MySB/config_db
	ownCloudDir=$MySB_InstallDir"`Func_SQL_Command 'SELECT' 'MySB_db' 'dir' 'repositories' "name = 'ownCloud'"`"
	ownCloudOldFile="`Func_SQL_Command 'SELECT' 'MySB_db' 'old_file' 'repositories' "name = 'ownCloud'"`"
	ownCloudUrl="`Func_SQL_Command 'SELECT' 'MySB_db' 'url' 'repositories' "name = 'ownCloud'"`"
	ownCloudFile="`Func_SQL_Command 'SELECT' 'MySB_db' 'file' 'repositories' "name = 'ownCloud'"`"
	MailFrom="`echo $MainUserEmail | cut -d "@" -f 1`"
	MailDomain="`echo $MainUserEmail | cut -d "@" -f 2`"
	TimeZoneEscaped="`echo $TimeZone | sed s,/,\\\\\\\\\\/,g`"
	TimeStamp=$(date +%s)

	#### STOP services
	ManageServices stop "php5-fpm nginx"	

	#### PHP
	perl -pi -e "s/post_max_size = 10M/post_max_size = 20G/g" /etc/php5/fpm/php.ini
	perl -pi -e "s/upload_max_filesize = 10M/upload_max_filesize = 20G/g" /etc/php5/fpm/php.ini
	perl -pi -e "s/max_file_uploads = 20/max_file_uploads = 20000/g" /etc/php5/fpm/php.ini
	perl -pi -e "s/output_buffering = 4096/output_buffering = Off/g" /etc/php5/fpm/php.ini
	echo "apc.enable_cli=1" >> /etc/php5/cli/conf.d/20-apcu.ini
	perl -pi -e "s/^;env\[PATH\]/env\[PATH\]/g" /etc/php5/fpm/pool.d/www.conf

	#### NginX configuration
	cp -vf $MySB_InstallDir/templates/nginx/etc.nginx.locations.owncloud.conf.tmpl /etc/nginx/locations/ownCloud.conf
	perl -pi -e "s/<MySB_InstallDir>/$MySB_InstallDirEscaped/g" /etc/nginx/locations/ownCloud.conf
	chmod 0644 /etc/nginx/locations/ownCloud.conf
	# To install ownCloud allows the generation of a ownCloud configuration file and obtain the valeures 'InstanceId', 'PasswordSalt' and 'Secret'.
	cp -vf $MySB_InstallDir/templates/nginx/etc.nginx.locations.owncloud.local.tmpl /etc/nginx/locations/ownCloud.local
	perl -pi -e "s/<MySB_InstallDir>/$MySB_InstallDirEscaped/g" /etc/nginx/locations/ownCloud.local
	chmod 0644 /etc/nginx/locations/ownCloud.local

	#### ownCloud Core, is it a new install ?
	# Maybe ownCloud would be downloaded by 'DownloadAll' script ?
	# We can can check that by the presence of the old archive file.
	# Old archive exist ? So we force an upgrade and keep the current onfig file.
	if [ -f $MySB_InstallDir/files/$ownCloudOldFile ]; then
		# Backup the config file if needed
		if [ -f $ownCloudDir/config/config.php ]; then
			mv -v $ownCloudDir/config/config.php $MySB_InstallDir/temp/owncloud_config.php
		fi
		rm -vf $MySB_InstallDir/files/$ownCloudOldFile
		if [ -f $MySB_InstallDir/files/$ownCloudFile ]; then
			DeleteDirectory 1 "$ownCloudDir"
		fi
		# Maybe need to launch a script on next reboot ?
		Func_SQL_Command 'UPDATE' 'MySB_db' 'repositories' "on_boot = '1', script = '$0'" "name = '$RepoName'" '-echo'
	fi

	if [ ! -d $ownCloudDir ]; then
		if [ ! -f $MySB_InstallDir/files/$ownCloudFile ]; then
			wget --no-check-certificate $ownCloudUrl -O $MySB_InstallDir/files/$ownCloudFile
		fi
		unzip $MySB_InstallDir/files/$ownCloudFile -d $MySB_InstallDir/temp/
		SubDirownCloud="`unzip -l $MySB_InstallDir/files/$ownCloudFile | awk '{ print $4 }' | cut -d '/' -f 1 | uniq | sed '1,3d;$d'`"
		if [ -d $MySB_InstallDir/temp/$SubDirownCloud ]; then
			mv -v $MySB_InstallDir/temp/$SubDirownCloud $ownCloudDir
		fi
	fi
	# Restore the old config file
	if [ -f $MySB_InstallDir/temp/owncloud_config.php ]; then
		mv -v $MySB_InstallDir/temp/owncloud_config.php $ownCloudDir/config/config.php
	fi

	#### CRON
	crontab -u www-data -l > /tmp/crontab.tmp
	sed -i '/ownCloud/d' /tmp/crontab.tmp
	echo "*/15  *  *  *  * php -f $ownCloudDir/cron.php > /dev/null 2>&1 # ownCloud" | tee -a /tmp/crontab.tmp
	crontab -u www-data /tmp/crontab.tmp
	rm -f /tmp/crontab.tmp

	#### Create directories & change rights
	ManageDirectoriesAndFiles

	#### START services
	ManageServices start "php5-fpm nginx"
	
	#### 'ownCloud.local' exist ? So we do the first install
	if [ -f /etc/nginx/locations/ownCloud.local ] && [ ! -f $ownCloudDir/config/config.php ]; then
		curl --user $MySB_User:$MySB_Password --data "adminlogin=admin&adminpass=$MySQL_MysbPassword&directory=/home/owncloud&dbtype=mysql&dbuser=MySB_user&dbpass=$MySQL_MysbPassword&dbname=ownCloud_db&dbhost=localhost" "http://127.0.0.1:$Port_HTTP/owncloud/"
		rm -vf /etc/nginx/locations/ownCloud.local
		Func_SQL_Command 'UPDATE' 'MySB_db' 'repositories' "on_boot = '1', script = '$0'" "name = 'ownCloud'" '-echo'
	fi

	#### Update database with new values
	# oc_appconfig
	IfExist="`Func_SQL_Command 'SELECT' 'ownCloud_db' 'configvalue' 'oc_appconfig' "configvalue='yes' AND configkey='shareapi_allow_mail_notification'"`"
	if [ -z $IfExist ]; then
		Func_SQL_Command 'INSERT' 'ownCloud_db' 'oc_appconfig' 'appid,configkey,configvalue' "'core','shareapi_allow_mail_notification','yes'" '-echo'
	fi
	IfExist="`Func_SQL_Command 'SELECT' 'ownCloud_db' 'configvalue' 'oc_appconfig' "configvalue='yes' AND configkey='shareapi_allow_public_notification'"`"
	if [ -z $IfExist ]; then
		Func_SQL_Command 'INSERT' 'ownCloud_db' 'oc_appconfig' 'appid,configkey,configvalue' "'core','shareapi_allow_public_notification','yes'" '-echo'
	fi
	IfExist="`Func_SQL_Command 'SELECT' 'ownCloud_db' 'configvalue' 'oc_appconfig' "configvalue='yes' AND configkey='shareapi_default_expire_date'"`"
	if [ -z $IfExist ]; then
		Func_SQL_Command 'INSERT' 'ownCloud_db' 'oc_appconfig' 'appid,configkey,configvalue' "'core','shareapi_default_expire_date','yes'" '-echo'
	fi
	# oc_preferences
	IfExist="`Func_SQL_Command 'SELECT' 'ownCloud_db' 'configvalue' 'oc_preferences' "configvalue='$MainUserEmail' AND userid='admin'"`"
	if [ -z $IfExist ]; then
		Func_SQL_Command 'INSERT' 'ownCloud_db' 'oc_preferences' 'userid,appid,configkey,configvalue' "'admin','settings','email','$MainUserEmail'" '-echo'
	fi
	IfExist="`Func_SQL_Command 'SELECT' 'ownCloud_db' 'gid' 'oc_groups' "gid='MySB_users'"`"
	if [ -z $IfExist ]; then
		Func_SQL_Command 'INSERT' 'ownCloud_db' 'oc_groups' 'gid' "'MySB_users'" '-echo'
	fi
	Func_SQL_Command 'UPDATE' 'ownCloud_db' 'oc_preferences' "configvalue = '$TimeZone'" "configkey = 'timezone'" '-echo'
	# oc_storages
	Func_SQL_Command 'DELETE' 'ownCloud_db' 'oc_storages' "1" '-echo'
	Func_SQL_Command 'INSERT' 'ownCloud_db' 'oc_storages' 'id' "'local::/home/\$user/'" '-echo'

	#### Check old config file
	if [ -d $ownCloudDir ] && [ -f $ownCloudDir/config/config.php ]; then
		InstanceId="`cat $ownCloudDir/config/config.php | grep 'instanceid' | awk '{ print $3 }'| cut -d "'" -f 2`"
		InstanceId="`echo $InstanceId | sed s,/,\\\\\\\\\\/,g`"
		echo "InstanceId: "$InstanceId 
		PasswordSalt="`cat $ownCloudDir/config/config.php | grep 'passwordsalt' | awk '{ print $3 }'| cut -d "'" -f 2`"
		PasswordSalt="`echo $PasswordSalt | sed s,/,\\\\\\\\\\/,g`"
		echo "PasswordSalt: "$PasswordSalt
		Secret="`cat $ownCloudDir/config/config.php | grep 'secret' | awk '{ print $3 }'| cut -d "'" -f 2`"
		Secret="`echo $Secret | sed s,/,\\\\\\\\\\/,g`"
		echo "Secret: "$Secret
	fi

	#### New config file
	if [ -d $ownCloudDir/config ]; then
		# Get the new version
		Version="`cat $ownCloudDir/config/config.php | grep 'version' | awk '{ print $3 }'| cut -d "'" -f 2`"
		Func_SQL_Command 'UPDATE' 'MySB_db' 'repositories' "version = '$Version'" "name = 'ownCloud'" '-echo'
		echo "Version: "$Version

		cp -vf $MySB_InstallDir/templates/owncloud/owncloud.config.php.tmpl $ownCloudDir/config/config.php
		perl -pi -e "s/<server_name>/$HostNameFQDN/g" $ownCloudDir/config/config.php
		perl -pi -e "s/<PORT_HTTPS>/$Port_HTTPS/g" $ownCloudDir/config/config.php
		perl -pi -e "s/<MySB_DB_Pass>/$MySQL_MysbPassword/g" $ownCloudDir/config/config.php
		perl -pi -e "s/<TimeZone>/$TimeZoneEscaped/g" $ownCloudDir/config/config.php
		perl -pi -e "s/<mail_domain>/$MailDomain/g" $ownCloudDir/config/config.php
		perl -pi -e "s/<mail_from_address>/$MailFrom/g" $ownCloudDir/config/config.php
		perl -pi -e "s/'en'/'$EnvLang'/g" $ownCloudDir/config/config.php
		perl -pi -e "s/<InstanceId>/$InstanceId/g" $ownCloudDir/config/config.php
		perl -pi -e "s/<PasswordSalt>/$PasswordSalt/g" $ownCloudDir/config/config.php
		perl -pi -e "s/<Secret>/$Secret/g" $ownCloudDir/config/config.php
		perl -pi -e "s/<Version>/$Version/g" $ownCloudDir/config/config.php
		chown www-data:www-data $ownCloudDir/config/config.php
		chmod 0640 $ownCloudDir/config/config.php
	fi

	#### External Storage (mount.json)
	if [ ! -f /home/owncloud/mount.json ]; then
		IdStorage=$(Func_SQL_Command 'SELECT' 'ownCloud_db' 'numeric_id' 'oc_storages' "id = 'local::/home/\$user'")
		cp -vf $MySB_InstallDir/templates/owncloud/home.owncloud.mount.json.tmpl /home/owncloud/mount.json
		perl -pi -e "s/<IdStorage>/$IdStorage/g" /home/owncloud/mount.json
	fi

	#### Logrotate
	LogRotate 'owncloud'

	if CheckCommand 0 $ownCloudDir/occ; then
		# ownCloud is installed
		Func_SQL_Command 'UPDATE' 'MySB_db' 'services' "to_install = '0', is_installed = '1'" "serv_name = 'ownCloud'" '-echo'
		# Force upgrade script on next boot if needed
		OnBoot="`Func_SQL_Command 'SELECT' 'MySB_db' 'on_boot' 'repositories' \"on_boot = '1' AND name = 'ownCloud'\"`"
		if [ ! -z "$OnBoot" ]; then
			Func_SQL_Command 'UPDATE' 'MySB_db' 'repositories' "script = '$0'" "name = 'ownCloud'" '-echo'
		fi
	fi
fi

#### Upgrade on boot
if [ "$IsInstalled_ownCloud" == "YES" ] && [ "$Switch" == "INIT" ]; then
	OnBoot="`Func_SQL_Command 'SELECT' 'MySB_db' 'on_boot' 'repositories' \"on_boot = '1' AND name = 'ownCloud'\"`"

	if [ "$OnBoot" -eq 1 ]; then
		#### ownCloud upgrade
		su -s /bin/sh www-data -c "/usr/bin/php $ownCloudDir/occ upgrade"
		su -s /bin/sh www-data -c "/usr/bin/php $ownCloudDir/occ maintenance:repair"
		su -s /bin/sh www-data -c "/usr/bin/php $ownCloudDir/occ app:enable files_external"
		su -s /bin/sh www-data -c "/usr/bin/php $ownCloudDir/occ background:cron"
		su -s /bin/sh www-data -c "/usr/bin/php $ownCloudDir/occ files:scan --all"
		su -s /bin/sh www-data -c "/usr/bin/php $ownCloudDir/occ maintenance:mimetype:update-db"
		su -s /bin/sh www-data -c "/usr/bin/php $ownCloudDir/occ maintenance:mimetype:update-js"

		#### Create all existing MySB users
		ListingUsers
		for seedUser in $UsersList; do
			UserExist="`Func_SQL_Command 'SELECT' 'ownCloud_db' 'uid' 'oc_users' "uid='$seedUser'"`"

			if [ -z $UserExist ]; then
				FnUserMail="`Func_SQL_Command 'SELECT' 'MySB_db' 'users_email' 'users' "users_ident = '$seedUser'"`"
				OC_PASS="`GenPassword 8`"
				export OC_PASS
				TimeStamp=$(date +%s)
				su -s /bin/sh www-data -c "/usr/bin/php $ownCloudDir/occ user:add --password-from-env --display-name=\"$seedUser\" --group=\"MySB_users\" $seedUser" &> /dev/null
				Func_SQL_Command 'INSERT' 'ownCloud_db' 'oc_preferences' "userid,appid,configkey,configvalue" "'admin','files_external','/Home_$seedUser','$TimeStamp'"
				Func_SQL_Command 'INSERT' 'ownCloud_db' 'oc_preferences' "userid,appid,configkey,configvalue" "'$seedUser','core','lang','$EnvLang'"
				Func_SQL_Command 'INSERT' 'ownCloud_db' 'oc_preferences' "userid,appid,configkey,configvalue" "'$seedUser','settings','email','$EnvLang'"
				Func_SQL_Command 'INSERT' 'ownCloud_db' 'oc_storages' "id" "'local::/home/$seedUser/'"
				Func_SQL_Command 'UPDATE' 'MySB_db' 'users' "init_password = '1'" "users_ident = '$seedUser'" '-echo'
			fi
			unset UserExist
		done

		Func_SQL_Command 'UPDATE' 'MySB_db' 'repositories' "on_boot = '0', script = ''" "name = '$Name'"
	fi
fi

# -----------------------------------------
source $(dirname $0)/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################