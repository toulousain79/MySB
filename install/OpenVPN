#!/bin/bash
# ----------------------------------
source $(dirname $0)/../inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################
#
# Usage:	OpenVPN$CEND {server|client <username>|zip <username> <user_passwaord>}
#
##################### FIRST LINE #####################################

#### Var
COMMAND=$1
USERNAME=$2
USERPASSWORD=$3
CLIENTNAME="${USERNAME}_$HostNameFQDN"
TAKEY="ta_$HostNameFQDN.key"
CACRT="ca_$HostNameFQDN.crt"
CAKEY="ca_$HostNameFQDN.key"
CRT="$HostNameFQDN.crt"
CSR="$HostNameFQDN.csr"
KEY="$HostNameFQDN.key"
DH="dh1024_$HostNameFQDN.pem"
NetTunWithRedirectGW="10.0.0"
NetTunWithoutRedirectGW="10.0.1"
NetTapWithoutRedirectGW="10.0.2"

CreateServer() {
	if [ -f /etc/openvpn/$CACRT ]; then
		echo -e "${CYELLOW}OpenVPN certificate already exist. Do you want to create it again ?$CEND"
		echo -e "${CYELLOW}I you create new certificate, you must create again certificates for all users.$CEND"
		echo -e "${CYELLOW}Do you understand ?$CEND"
		QuestionGetString NO  "$Global_WantToContinue" CONTINUE NO
		if [ "$CONTINUE" == "NO" ]; then
			echo -e "$Global_SeeYouLater"
			echo
			echo
			EndingScript 0
		fi
	fi

	#### Create Dev TUN
	if [ "`ls -la /dev/net/tun > /dev/null && echo $?`" != "0" ]; then
		if [ ! -d /dev/net ]; then mkdir -p /dev/net; fi
		mknod /dev/net/tun c 10 200
		chmod 600 /dev/net/tun
		cat /dev/net/tun
	fi

	#### install package
	if ! CheckCommand 0 openvpn; then
		PackagesManage install "openvpn"
	fi

	#### STOP services
	ManageServices stop "openvpn"

	#### Files and Directory
	if [ ! -d /var/log/openvpn ]; then mkdir -p /var/log/openvpn; fi
	if [ ! -d /etc/openvpn/clients ]; then mkdir -p /etc/openvpn/clients; fi
	if [ ! -d /etc/openvpn/clients_config_dir ]; then mkdir -p /etc/openvpn/clients_config_dir; fi
	if [ ! -f /var/log/openvpn.log ]; then touch /var/log/openvpn/openvpn.log; fi
	if [ ! -f /var/log/openvpn/openvpn-status.log ]; then touch /var/log/openvpn/openvpn-status.log; fi
	if [ ! -d $MySB_InstallDir/web/openvpn ]; then mkdir -p $MySB_InstallDir/web/openvpn; fi
	if [ ! -d /etc/openvpn/easy-rsa ]; then
		mkdir -p /etc/openvpn/easy-rsa
		cp -vr /usr/share/doc/openvpn/examples/easy-rsa/2.0/* /etc/openvpn/easy-rsa/
		chown -R $USER /etc/openvpn/easy-rsa/
	fi

	#### Initialize
	cd /etc/openvpn/easy-rsa/
	. ./vars
	export KEY_COUNTRY="US"
	export KEY_PROVINCE="CA"
	export KEY_CITY="SanFrancisco"
	export KEY_ORG="Fort-Funston"
	export KEY_EMAIL="MySB@$HostNameFQDN"
	export KEY_CN="MySB OpenVPN Server"
	export KEY_NAME="MySB OpenVPN Server"
	export KEY_OU="MySB OpenVPN Server"

	#### Create server
	./clean-all
	./build-dh
	./pkitool --initca
	./pkitool --server $HostNameFQDN
	/usr/sbin/openvpn --genkey --secret keys/ta.key

	#### Move created files
	cp -vf keys/dh1024.pem /etc/openvpn/$DH
	cp -vf keys/ca.crt /etc/openvpn/$CACRT
	cp -vf keys/ca.key /etc/openvpn/$CAKEY
	cp -vf keys/ta.key /etc/openvpn/$TAKEY
	mv -v keys/$CRT /etc/openvpn/
	mv -v keys/$KEY /etc/openvpn/

	#### Config file Server TUN - With Redirect Gateway
	# start with a clean config file for a new user
	cp -vf $MySB_InstallDir/templates/openvpn/openvpn.server.conf.tmpl /etc/openvpn/Server_TUN_WithGW.conf
	# adapt this file
	sed -i "s/<PORT>/$Port_OpenVPN_WithGW/g" /etc/openvpn/Server_TUN_WithGW.conf
	sed -i "s/<PROTO>/$OpenVPN_Proto/g" /etc/openvpn/Server_TUN_WithGW.conf
	sed -i "s/<TAKEY>/$TAKEY/g" /etc/openvpn/Server_TUN_WithGW.conf
	sed -i "s/<CA>/$CACRT/g" /etc/openvpn/Server_TUN_WithGW.conf
	sed -i "s/<CERT>/$CRT/g" /etc/openvpn/Server_TUN_WithGW.conf
	sed -i "s/<KEY>/$KEY/g" /etc/openvpn/Server_TUN_WithGW.conf
	sed -i "s/<DH>/$DH/g" /etc/openvpn/Server_TUN_WithGW.conf
	# and clean it (delete comments, delete unused option, delete blank line)
	sed -i '/#/d' /etc/openvpn/Server_TUN_WithGW.conf
	sed -i '/^;/d' /etc/openvpn/Server_TUN_WithGW.conf
	sed -i '/^$/d' /etc/openvpn/Server_TUN_WithGW.conf

	#### Config file Server TUN - Without Redirect Gateway
	cp -vf /etc/openvpn/Server_TUN_WithGW.conf /etc/openvpn/Server_TUN_WithoutGW.conf
	sed -i "s/$Port_OpenVPN_WithGW/$Port_OpenVPN_WithoutGW/g" /etc/openvpn/Server_TUN_WithoutGW.conf
	sed -i "s/$NetTunWithRedirectGW/$NetTunWithoutRedirectGW/g" /etc/openvpn/Server_TUN_WithoutGW.conf
	sed -i '/dhcp-option DNS/d' /etc/openvpn/Server_TUN_WithoutGW.conf
	sed -i '/redirect-gateway/d' /etc/openvpn/Server_TUN_WithoutGW.conf

	#### TAP
	# dummy interface
	#echo "alias netdev-dummy0 dummy" | tee -a /etc/modprobe.d/aliases.conf
	#modprobe dummy numdummies=0	
	#ScriptInvoke 'source' "$MySB_InstallDir/scripts/OpenVPN-Bridge.bsh" 'start'

	#### Config file Server TAP - Without Redirect Gateway
	cp -vf $MySB_InstallDir/templates/openvpn/openvpn.server.conf.tmpl /etc/openvpn/Server_TAP_WithoutGW.conf
	# adapt this file
	sed -i '/server 10.0.0.0 255.255.255.0/d' /etc/openvpn/Server_TAP_WithoutGW.conf
	sed -i '/redirect-gateway/d' /etc/openvpn/Server_TAP_WithoutGW.conf
	sed -i "s/^;server-bridge/server-bridge/g" /etc/openvpn/Server_TAP_WithoutGW.conf
	sed -i "s/^user nobody/;user nobody/g" /etc/openvpn/Server_TAP_WithoutGW.conf
	sed -i "s/^group daemon/;group daemon/g" /etc/openvpn/Server_TAP_WithoutGW.conf
	sed -i "s/^;up/up/g" /etc/openvpn/Server_TAP_WithoutGW.conf
	sed -i "s/^;down/down/g" /etc/openvpn/Server_TAP_WithoutGW.conf
	sed -i "s/<MySB_InstallDir>/$MySB_InstallDirEscaped/g" /etc/openvpn/Server_TAP_WithoutGW.conf
	sed -i "s/<PORT>/$Port_OpenVPN_TAP_WithoutGW/g" /etc/openvpn/Server_TAP_WithoutGW.conf
	sed -i "s/<PROTO>/$OpenVPN_Proto/g" /etc/openvpn/Server_TAP_WithoutGW.conf
	sed -i "s/<TAKEY>/$TAKEY/g" /etc/openvpn/Server_TAP_WithoutGW.conf
	sed -i "s/<CA>/$CACRT/g" /etc/openvpn/Server_TAP_WithoutGW.conf
	sed -i "s/<CERT>/$CRT/g" /etc/openvpn/Server_TAP_WithoutGW.conf
	sed -i "s/<KEY>/$KEY/g" /etc/openvpn/Server_TAP_WithoutGW.conf
	sed -i "s/<DH>/$DH/g" /etc/openvpn/Server_TAP_WithoutGW.conf
	sed -i "s/dev tun/dev tap0/g" /etc/openvpn/Server_TAP_WithoutGW.conf
	sed -i "s/$NetTunWithRedirectGW/$NetTapWithoutRedirectGW/g" /etc/openvpn/Server_TAP_WithoutGW.conf
	# and clean it (delete comments, delete unused option, delete blank line)
	sed -i '/#/d' /etc/openvpn/Server_TAP_WithoutGW.conf
	sed -i '/^;/d' /etc/openvpn/Server_TAP_WithoutGW.conf
	sed -i '/^$/d' /etc/openvpn/Server_TAP_WithoutGW.conf

	if CheckCommand 0 openvpn; then
		Func_SQL_Command 'UPDATE' 'MySB_db' 'services' "to_install = '0', is_installed = '1'" "serv_name = 'OpenVPN'" '-echo'
	fi

	#### START services
	if [ "$2" != "INSTALL" ]; then
		ManageServices start "openvpn"
	fi
}

CreateClient() {
	#### Initialize
	cd /etc/openvpn/easy-rsa/
	. ./vars
	export KEY_COUNTRY="US"
	export KEY_PROVINCE="CA"
	export KEY_CITY="SanFrancisco"
	export KEY_ORG="Fort-Funston"
	export KEY_EMAIL="MySB@$HostNameFQDN"
	export KEY_CN="MySB OpenVPN Client - $USERNAME"
	export KEY_NAME="MySB OpenVPN Client - $USERNAME"
	export KEY_OU="MySB OpenVPN Client - $USERNAME"

	#### Create client
	./pkitool $CLIENTNAME
	cd keys/

	#### Configuration file with separate files - TUN - With Redirect Gateway
	# start with a clean config file for a new user
	cp -vf $MySB_InstallDir/templates/openvpn/openvpn.client.conf.tmpl /etc/openvpn/clients/${CLIENTNAME}_TUN_WithGW.ovpn
	# adapt this file
	sed -i "s/<PROTO>/$OpenVPN_Proto/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_WithGW.ovpn
	sed -i "s/<SrvIpAddress>/$SrvIpAddress/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_WithGW.ovpn	
	sed -i "s/<PORT>/$Port_OpenVPN_WithGW/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_WithGW.ovpn
	sed -i "s/;ca ca.crt/ca $CACRT/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_WithGW.ovpn
	sed -i "s/;cert client.crt/cert $CLIENTNAME.crt/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_WithGW.ovpn
	sed -i "s/;key client.key/key $CLIENTNAME.key/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_WithGW.ovpn
	sed -i "s/;tls-auth ta.key 1/tls-auth $TAKEY 1/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_WithGW.ovpn
	# and clean it (delete comments, delete unused option, delete blank line)
	sed -i '/#/d' /etc/openvpn/clients/${CLIENTNAME}_TUN_WithGW.ovpn
	sed -i '/^;/d' /etc/openvpn/clients/${CLIENTNAME}_TUN_WithGW.ovpn
	sed -i '/^$/d' /etc/openvpn/clients/${CLIENTNAME}_TUN_WithGW.ovpn

	#### Configuration file with separate files - TUN - Without Redirect Gateway
	cp -vf /etc/openvpn/clients/${CLIENTNAME}_TUN_WithGW.ovpn /etc/openvpn/clients/${CLIENTNAME}_TUN_WithoutGW.ovpn
	sed -i "s/$Port_OpenVPN_WithGW/$Port_OpenVPN_WithoutGW/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_WithoutGW.ovpn
	sed -i "s/$NetTunWithRedirectGW/$NetTunWithoutRedirectGW/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_WithoutGW.ovpn

	#### Single configuration file (all in one) - TUN - With Redirect Gateway
	# start with a clean config file for a new user
	cp -vf $MySB_InstallDir/templates/openvpn/openvpn.client.conf.tmpl /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn
	# adapt this file
	sed -i "s/<PROTO>/$OpenVPN_Proto/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn
	sed -i "s/<SrvIpAddress>/$SrvIpAddress/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn	
	sed -i "s/<PORT>/$Port_OpenVPN_WithGW/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn
	# and clean it (delete comments, delete unused option, delete blank line)
	sed -i '/#/d' /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn
	sed -i '/^;/d' /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn
	sed -i '/^$/d' /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn
	# add certificate info in file config
	echo "" >> /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn
	echo "<ca>" >> /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn
	cat /etc/openvpn/$CACRT >> /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn
	echo "</ca>" >> /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn
	echo "<cert>" >> /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn
	sed -n '/-----BEGIN CERTIFICATE-----/,/-----END CERTIFICATE-----/p' $CLIENTNAME.crt >> /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn
	echo "</cert>" >> /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn
	echo "<key>" >> /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn	
	cat $CLIENTNAME.key >> /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn
	echo "</key>" >> /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn	
	echo "key-direction 1" >> /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn
	echo "<tls-auth>" >> /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn
	sed -n '/-----BEGIN OpenVPN Static key V1-----/,/-----END OpenVPN Static key V1-----/p' /etc/openvpn/$TAKEY >> /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn
	echo "</tls-auth>" >> /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn

	#### Single configuration file (all in one) - TUN - Without Redirect Gateway
	cp -vf /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithoutGW.ovpn
	sed -i "s/$Port_OpenVPN_WithGW/$Port_OpenVPN_WithoutGW/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithoutGW.ovpn

	#### Single configuration file (all in one) - TAP - Without Redirect Gateway
	cp -vf /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn /etc/openvpn/clients/${CLIENTNAME}_TAP_Single_WithoutGW.ovpn
	sed -i "s/$Port_OpenVPN_WithGW/$Port_OpenVPN_TAP_WithoutGW/g" /etc/openvpn/clients/${CLIENTNAME}_TAP_Single_WithoutGW.ovpn
	sed -i "s/dev tun/dev tap/g" /etc/openvpn/clients/${CLIENTNAME}_TAP_Single_WithoutGW.ovpn
	sed -i '/mtu-disc yes/d' /etc/openvpn/clients/${CLIENTNAME}_TAP_Single_WithoutGW.ovpn

	#### Move created files
	mv -v $CLIENTNAME.crt /etc/openvpn/clients/
	mv -v $CLIENTNAME.csr /etc/openvpn/clients/
	mv -v $CLIENTNAME.key /etc/openvpn/clients/
	chmod 400 /etc/openvpn/clients/*

	#### START services
	ManageServices start "openvpn"
}

ZipClientFiles() {
	CLIENTNAME="${USERNAME}_$HostNameFQDN"
	if [ -f $MySB_InstallDir/web/openvpn/openvpn_$USERNAME.zip ]; then
		rm -vf $MySB_InstallDir/web/openvpn/openvpn_$USERNAME.zip
	fi

	perl -pi -e "s/^mtu-disc yes/;mtu-disc yes/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn
	perl -pi -e "s/^mtu-disc yes/;mtu-disc yes/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithoutGW.ovpn
	perl -pi -e "s/^mtu-disc yes/;mtu-disc yes/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_WithGW.ovpn
	perl -pi -e "s/^mtu-disc yes/;mtu-disc yes/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_WithoutGW.ovpn
	perl -pi -e "s/^mtu-disc yes/;mtu-disc yes/g" /etc/openvpn/clients/${CLIENTNAME}_TAP_Single_WithoutGW.ovpn

	zip -P "$USERPASSWORD" -j $MySB_InstallDir/web/openvpn/openvpn_$USERNAME.zip\
		/etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn\
		/etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithoutGW.ovpn\
		/etc/openvpn/clients/${CLIENTNAME}_TUN_WithGW.ovpn\
		/etc/openvpn/clients/${CLIENTNAME}_TUN_WithoutGW.ovpn\
		/etc/openvpn/clients/${CLIENTNAME}_TAP_Single_WithoutGW.ovpn\
		/etc/openvpn/$CACRT\
		/etc/openvpn/clients/$CLIENTNAME.crt\
		/etc/openvpn/clients/$CLIENTNAME.key\
		/etc/openvpn/$TAKEY

	chmod 0660 $MySB_InstallDir/web/openvpn/*.zip
	chown root:www-data $MySB_InstallDir/web/openvpn/*.zip
}

RefreshProto() {
	#### Server files
	ServiceRestart=0
	if [ -f /etc/openvpn/Server_TUN_WithGW.conf ]; then
		log_daemon_msg "Change protocol to $OpenVPN_Proto for \"Server_TUN_WithGW.conf\""
		SEARCH=$(cat /etc/openvpn/Server_TUN_WithGW.conf | grep "proto" | awk '{ print $2 }')
		if [ "$SEARCH" != "$OpenVPN_Proto" ]; then
			ServiceRestart=1
		fi
		perl -pi -e "s/^proto $SEARCH/proto $OpenVPN_Proto/g" /etc/openvpn/Server_TUN_WithGW.conf
		unset SEARCH
		StatusLSB
	fi
	if [ -f /etc/openvpn/Server_TUN_WithoutGW.conf ]; then
		log_daemon_msg "Change protocol to $OpenVPN_Proto for \"Server_TUN_WithoutGW.conf\""
		SEARCH=$(cat /etc/openvpn/Server_TUN_WithoutGW.conf | grep "proto" | awk '{ print $2 }')
		if [ "$SEARCH" != "$OpenVPN_Proto" ]; then
			ServiceRestart=1
		fi
		perl -pi -e "s/^proto $SEARCH/proto $OpenVPN_Proto/g" /etc/openvpn/Server_TUN_WithoutGW.conf
		unset SEARCH
		StatusLSB
	fi
	if [ -f /etc/openvpn/Server_TAP_WithoutGW.conf ]; then
		log_daemon_msg "Change protocol to $OpenVPN_Proto for \"Server_TAP_WithoutGW.conf\""
		SEARCH=$(cat /etc/openvpn/Server_TAP_WithoutGW.conf | grep "proto" | awk '{ print $2 }')
		if [ "$SEARCH" != "$OpenVPN_Proto" ]; then
			ServiceRestart=1
		fi
		perl -pi -e "s/^proto $SEARCH/proto $OpenVPN_Proto/g" /etc/openvpn/Server_TAP_WithoutGW.conf
		unset SEARCH
		StatusLSB
	fi

	#### Clients files
	ListingUsers
	for SeedboxUser in $UsersList; do
		CLIENTNAME="${SeedboxUser}_$HostNameFQDN"
		if [ -f /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn ]; then
			log_daemon_msg "Change protocol to $OpenVPN_Proto for \"${CLIENTNAME}_TUN_Single_WithGW.ovpn\""
			SEARCH=$(cat /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn | grep "proto" | awk '{ print $2 }')
			perl -pi -e "s/^proto $SEARCH/proto $OpenVPN_Proto/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithGW.ovpn
			unset SEARCH
			StatusLSB
		fi
		if [ -f /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithoutGW.ovpn ]; then
			log_daemon_msg "Change protocol to $OpenVPN_Proto for \"${CLIENTNAME}_TUN_Single_WithoutGW.ovpn\""
			SEARCH=$(cat /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithoutGW.ovpn | grep "proto" | awk '{ print $2 }')
			perl -pi -e "s/^proto $SEARCH/proto $OpenVPN_Proto/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_Single_WithoutGW.ovpn
			unset SEARCH
			StatusLSB
		fi
		if [ -f /etc/openvpn/clients/${CLIENTNAME}_TUN_WithGW.ovpn ]; then
			log_daemon_msg "Change protocol to $OpenVPN_Proto for \"${CLIENTNAME}_TUN_WithGW.ovpn\""
			SEARCH=$(cat /etc/openvpn/clients/${CLIENTNAME}_TUN_WithGW.ovpn | grep "proto" | awk '{ print $2 }')
			perl -pi -e "s/^proto $SEARCH/proto $OpenVPN_Proto/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_WithGW.ovpn
			unset SEARCH
			StatusLSB
		fi
		if [ -f /etc/openvpn/clients/${CLIENTNAME}_TUN_WithoutGW.ovpn ]; then
			log_daemon_msg "Change protocol to $OpenVPN_Proto for \"${CLIENTNAME}_TUN_WithoutGW.ovpn\""
			SEARCH=$(cat /etc/openvpn/clients/${CLIENTNAME}_TUN_WithoutGW.ovpn | grep "proto" | awk '{ print $2 }')
			perl -pi -e "s/^proto $SEARCH/proto $OpenVPN_Proto/g" /etc/openvpn/clients/${CLIENTNAME}_TUN_WithoutGW.ovpn
			unset SEARCH
			StatusLSB
		fi
		if [ -f /etc/openvpn/clients/${CLIENTNAME}_TAP_Single_WithoutGW.ovpn ]; then
			log_daemon_msg "Change protocol to $OpenVPN_Proto for \"${CLIENTNAME}_TAP_Single_WithoutGW.ovpn\""
			SEARCH=$(cat /etc/openvpn/clients/${CLIENTNAME}_TAP_Single_WithoutGW.ovpn | grep "proto" | awk '{ print $2 }')
			perl -pi -e "s/^proto $SEARCH/proto $OpenVPN_Proto/g" /etc/openvpn/clients/${CLIENTNAME}_TAP_Single_WithoutGW.ovpn
			unset SEARCH
			StatusLSB
		fi
		unset CLIENTNAME
		
		if [ -f $MySB_InstallDir/web/openvpn/openvpn_$SeedboxUser.zip ]; then
			rm -f $MySB_InstallDir/web/openvpn/openvpn_$SeedboxUser.zip
		fi
	done

	#### START services
	if [ "$ServiceRestart" -eq 1 ]; then
		ManageServices start "openvpn"
	fi
}

DeleteUserFiles() {
	mv -v /etc/openvpn/clients/$CLIENTNAME.crt /etc/openvpn/easy-rsa/keys/
	mv -v /etc/openvpn/clients/$CLIENTNAME.csr /etc/openvpn/easy-rsa/keys/
	mv -v /etc/openvpn/clients/$CLIENTNAME.key /etc/openvpn/easy-rsa/keys/
	chmod 0660 /etc/openvpn/easy-rsa/keys/$CLIENTNAME.*

	cd /etc/openvpn/easy-rsa/
	. ./vars
	./revoke-full $CLIENTNAME
	rm -fv /etc/openvpn/easy-rsa/keys/$CLIENTNAME.*

	#### START services
	ManageServices start "openvpn"
}

case "$COMMAND" in
	"server")
		if [ "$ToInstall_OpenVPN" == "YES" ]; then
			#### Creating server config
			CreateServer
		fi
	;;
	"client")
		if [ "$IsInstalled_OpenVPN" == "YES" ]; then
			#### Creating user config
			if [ ! -z $USERNAME ]; then
				CreateClient
			fi
		fi
	;;
	"zip")
		if [ "$IsInstalled_OpenVPN" == "YES" ]; then
			#### ZIP user config files
			if [ ! -z $USERNAME ] && [ ! -z $USERPASSWORD ]; then
				ZipClientFiles
			fi
		fi
	;;
	"delete")
		if [ "$IsInstalled_OpenVPN" == "YES" ]; then
			#### Delete user files
			if [ ! -z $USERNAME ]; then
				DeleteUserFiles
			fi
		fi
	;;
	"refresh")
		if [ "$IsInstalled_OpenVPN" == "YES" ]; then
			#### Refresh Protocol
			RefreshProto
		fi
	;;
	*)
		echo -e "${CBLUE}Usage:$CEND	${CYELLOW}bash $0$CEND ${CGREEN}{server|client <username>|zip <username> <user_password>|refresh}$CEND"
		EndingScript 0
	;;
esac

# -----------------------------------------
source $(dirname $0)/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################