#!/bin/bash
# ----------------------------------
source $(dirname $0)/../inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

#### STOP services
ManageServices stop "cron"
ListingUsers
for seedUser in $UsersList; do
	service rtorrent-$seedUser status &> /dev/null
	if [ $? -eq 0 ]; then
		service rtorrent-$seedUser stop
	fi
done

#### ruTorrent + Official Plugins
echo
echo "########## ruTorrent + Official Plugins"
echo
RutorrentUrl="`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT url FROM repositories WHERE name = 'ruTorrent'\"`"
RutorrentPluginsUrl="`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT url FROM repositories WHERE name = 'ruTorrents Official Plugins'\"`"
if [ -d $RutorrentDir ]; then
	svn up $RutorrentDir
	svn switch $RutorrentPluginsUrl $RutorrentPluginsDir
else
	svn co $RutorrentUrl $RutorrentDir
	svn switch $RutorrentPluginsUrl $RutorrentPluginsDir
fi

#### Plugin Chat
echo
echo "########## Plugin Chat"
echo
PluginChatDir=$MySB_InstallDir"`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT dir FROM repositories WHERE name = 'ruTorrent Plugin Chat'\"`"
PluginChatUrl="`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT url FROM repositories WHERE name = 'ruTorrent Plugin Chat'\"`"
if [ -d $PluginChatDir ]; then
	svn up $PluginChatDir
else
	svn co $PluginChatUrl $PluginChatDir
fi

#### Plugin Logoff
PluginLogoffDir=$MySB_InstallDir"`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT dir FROM repositories WHERE name = 'ruTorrent Plugin Chat'\"`"
PluginLogoffUrl="`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT url FROM repositories WHERE name = 'ruTorrent Plugin Chat'\"`"
echo
echo "########## Plugin Logoff"
echo
if [ -d $PluginLogoffDir ]; then
	svn up $PluginLogoffDir
else
	svn co $PluginLogoffUrl $PluginLogoffDir
fi

#### Plugin tAdd-Labels
echo
echo "########## Plugin tAdd-Labels"
echo
if [ "$1" == "REFRESH" ]; then
	PluginLbllDir=$MySB_InstallDir"`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT dir FROM repositories WHERE name = 'ruTorrent Plugin tAdd-Labels'\"`"
	PluginLbllUrl="`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT url FROM repositories WHERE name = 'ruTorrent Plugin tAdd-Labels'\"`"
	PluginLbllFile="`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT file FROM repositories WHERE name = 'ruTorrent Plugin tAdd-Labels'\"`"	
	if [ -d $PluginLbllDir ]; then
		rm -vrf $PluginLbllDir
	fi
	if [ ! -f $MySB_InstallDir/files/$PluginLbllFile ]; then
		wget --no-check-certificate $PluginLbllUrl -O $MySB_InstallDir/files/$PluginLbllFile
	fi
	tar -zxvf $MySB_InstallDir/files/$PluginLbllFile -C $MySB_InstallDir/temp/	
	SubDirLbll="`tar -ztf $MySB_InstallDir/files/$PluginLbllFile | cut -d '/' -f 1 | uniq`"
	if [ -d $MySB_InstallDir/temp/$SubDirLbll ]; then
		mv $MySB_InstallDir/temp/$SubDirLbll $PluginLbllDir
	fi
fi

#### Plugin Filemanager
echo
echo "########## Plugin Filemanager"
echo
PluginFilemanagerDir=$MySB_InstallDir"`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT dir FROM repositories WHERE name = 'ruTorrent Plugin FileManager'\"`"
PluginFilemanagerUrl="`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT url FROM repositories WHERE name = 'ruTorrent Plugin FileManager'\"`"
if [ -d $PluginFilemanagerDir ]; then
	svn up $PluginFilemanagerDir
else
	svn co $PluginFilemanagerUrl $PluginFilemanagerDir
fi

#### Plugin NFO
echo
echo "########## Plugin NFO"
echo
if [ "$1" == "REFRESH" ]; then
	PluginNfoDir=$MySB_InstallDir"`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT dir FROM repositories WHERE name = 'ruTorrent Plugin NFO'\"`"
	PluginNfoUrl="`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT url FROM repositories WHERE name = 'ruTorrent Plugin NFO'\"`"
	PluginNfoFile="`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT file FROM repositories WHERE name = 'ruTorrent Plugin NFO'\"`"
	if [ -d $PluginNfoDir ]; then
		rm -vrf $PluginNfoDir
	fi
	if [ ! -f $MySB_InstallDir/files/$PluginNfoFile ]; then
		wget --no-check-certificate $PluginNfoUrl -O $MySB_InstallDir/files/$PluginNfoFile
	fi
	tar -zxvf $MySB_InstallDir/files/$PluginNfoFile -C $MySB_InstallDir/temp/	
	SubDirNfo="`tar -ztf $MySB_InstallDir/files/$PluginNfoFile | cut -d '/' -f 1 | uniq`"
	if [ -d $MySB_InstallDir/temp/$SubDirNfo ]; then
		mv $MySB_InstallDir/temp/$SubDirNfo $PluginNfoDir
	fi
fi

#### Plugin Ratiocolor
echo
echo "########## Plugin Ratiocolor"
echo
PluginRatiocolorDir=$MySB_InstallDir"`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT dir FROM repositories WHERE name = 'ruTorrent Plugin RatioColor'\"`"
PluginRatiocolorUrl="`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT url FROM repositories WHERE name = 'ruTorrent Plugin RatioColor'\"`"
if [ -d $PluginRatiocolorDir ]; then
	cd $PluginRatiocolorDir
	git stash
	git pull
else
	git clone $PluginRatiocolorUrl $PluginRatiocolorDir
fi
perl -pi -e "s/changeWhat = \"cell-background\";/changeWhat = \"font\";/g" $PluginRatiocolorDir/init.js

#### Plugin FileUpload
echo
echo "########## Plugin FileUpload"
echo
PluginFileuploadDir=$MySB_InstallDir"`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT dir FROM repositories WHERE name = 'ruTorrent Plugin FileUpload'\"`"
PluginFileuploadUrl="`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT url FROM repositories WHERE name = 'ruTorrent Plugin FileUpload'\"`"
if [ -d $PluginFileuploadDir ]; then
	svn up $PluginFileuploadDir
else
	svn co $PluginFileuploadUrl $PluginFileuploadDir
fi

#### Plugin Fileshare
echo
echo "########## Plugin Fileshare"
echo
PluginFileshareDir=$MySB_InstallDir"`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT dir FROM repositories WHERE name = 'ruTorrent Plugin FileShare'\"`"
PluginFileshareUrl="`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT url FROM repositories WHERE name = 'ruTorrent Plugin FileShare'\"`"
if [ -d $PluginFileshareDir ]; then
	svn up $PluginFileshareDir
else
	svn co $PluginFileshareUrl $PluginFileshareDir
fi
# if [ -f $PluginFileshareDir/share.php ] && [ ! -h $MySB_InstallDir/web/fileshare.php ]; then
	# ln -s $PluginFileshareDir/share.php $MySB_InstallDir/web/fileshare.php
# fi

perl -pi -e "s/$limits\['duration'\] = 1;/$limits\['duration'\] = 0;/g" $PluginFileshareDir/conf.php
perl -pi -e "s/$limits\['links'\] = 1;/$limits\['links'\] = 0;/g" $PluginFileshareDir/conf.php
perl -pi -e "s/http:\/\/robits.org\/rutorrent\/share.php/https:\/\/$HostNameFQDN:$Port_HTTPS\/fileshare.php/g" $PluginFileshareDir/conf.php

#### Plugin Stream
echo
echo "########## Plugin Stream"
echo
PluginStreamDir=$MySB_InstallDir"`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT dir FROM repositories WHERE name = 'ruTorrent Plugin Stream'\"`"
PluginStreamUrl="`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT url FROM repositories WHERE name = 'ruTorrent Plugin Stream'\"`"
PluginStreamFile="`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT file FROM repositories WHERE name = 'ruTorrent Plugin Stream'\"`"
if [ "$1" == "REFRESH" ]; then 
	if [ -d $PluginStreamDir ]; then
		rm -vrf $PluginStreamDir
	fi
	if [ ! -f $MySB_InstallDir/files/$PluginStreamFile ]; then
		wget --no-check-certificate $PluginStreamUrl -O $MySB_InstallDir/files/$PluginStreamFile
	fi
	tar -zxvf $MySB_InstallDir/files/$PluginStreamFile -C $MySB_InstallDir/temp/	
	SubDirStream="`tar -ztf $MySB_InstallDir/files/$PluginStreamFile | cut -d '/' -f 1 | uniq`"
	if [ -d $MySB_InstallDir/temp/$SubDirStream ]; then
		mv $MySB_InstallDir/temp/$SubDirStream $PluginStreamDir
	fi
fi
perl -pi -e "s/define\('USE_NGINX', false\);/define\('USE_NGINX', true\);/g" $PluginStreamDir/config.php
perl -pi -e "s/define\('SCHEME', http\);/define\('SCHEME', https\);/g" $PluginStreamDir/config.php
#if [ -f $PluginStreamDir/stream.php ] && [ ! -h $MySB_InstallDir/web/stream.php ]; then
#	ln -s $PluginStreamDir/stream.php $MySB_InstallDir/web/stream.php
#fi

#### Plugin Mediastream
echo
echo "########## Plugin Mediastream"
echo
PluginMediastreamDir=$MySB_InstallDir"`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT dir FROM repositories WHERE name = 'ruTorrent Plugin MediaStream'\"`"
PluginMediastreamUrl="`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT url FROM repositories WHERE name = 'ruTorrent Plugin MediaStream'\"`"
if [ -d $PluginMediastreamDir ]; then
	svn up $PluginMediastreamDir
else
	svn co $PluginMediastreamUrl $PluginMediastreamDir
fi
echo "<?php \$streampath = \"https://$HostNameFQDN:$Port_HTTPS/view.php\"; ?>" > $PluginMediastreamDir/conf.php
# if [ -f $PluginMediastreamDir/view.php ] && [ ! -h $MySB_InstallDir/web/view.php ]; then
	# ln -s $PluginMediastreamDir/view.php $MySB_InstallDir/web/view.php
# fi

#### Theme
echo
echo "########## Plugin Theme"
echo
if [ "`cat $RutorrentDir/css/style.css | grep 'for Oblivion'`" == "" ]; then
	echo "" | tee -a $RutorrentDir/css/style.css
	echo "/* for Oblivion */" | tee -a $RutorrentDir/css/style.css
	echo ".meter-value-start-color { background-color: #E05400 }" | tee -a $RutorrentDir/css/style.css
	echo ".meter-value-end-color { background-color: #8FBC00 }" | tee -a $RutorrentDir/css/style.css
	echo "::-webkit-scrollbar {width:12px;height:12px;padding:0px;margin:0px;}" | tee -a $RutorrentDir/css/style.css
fi
perl -pi -e "s/\$defaultTheme \= \"\"\;/\$defaultTheme \= \"Oblivion\"\;/g" $RutorrentPluginsDir/theme/conf.php

#### ruTorrent favicons trackers
echo
echo "########## ruTorrent favicons trackers"
echo
if [ ! -f $RutorrentPluginsDir/tracklabels/trackers/gks.gs.png ]; then
	wget http://www.ratbox.nl/md/favicons-trackers/gks.gs.png -O $RutorrentPluginsDir/tracklabels/trackers/gks.gs.png
fi
if [ ! -f $RutorrentPluginsDir/tracklabels/trackers/mteam.fr.png ]; then
	wget http://www.ratbox.nl/md/favicons-trackers/mteam.fr.png -O $RutorrentPluginsDir/tracklabels/trackers/mteam.fr.png
fi
if [ ! -f $RutorrentPluginsDir/tracklabels/trackers/montorrent.com.png ]; then
	wget http://www.ratbox.nl/md/favicons-trackers/montorrent.com.png -O $RutorrentPluginsDir/tracklabels/trackers/montorrent.com.png
fi
if [ ! -f $RutorrentPluginsDir/tracklabels/trackers/lakameraobscura.com.png ]; then
	wget http://www.ratbox.nl/md/favicons-trackers/lakameraobscura.com.png -O $RutorrentPluginsDir/tracklabels/trackers/lakameraobscura.com.png
fi

#### PlowShare4
echo
echo "########## PlowShare4"
echo
PluginPlowshareDir=$MySB_InstallDir"`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT dir FROM repositories WHERE name = 'Plowshare4'\"`"
PluginPlowshareUrl="`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT url FROM repositories WHERE name = 'Plowshare4'\"`"
PluginPlowshareFile="`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT file FROM repositories WHERE name = 'Plowshare4'\"`"
PluginPlowshareType="`sqlite3 -cmd '.timeout 150000' $MySB_DB \"SELECT type FROM repositories WHERE name = 'Plowshare4'\"`"
case "$PluginPlowshareType" in
	"GIT")
		if [ -d $PluginPlowshareDir ]; then
			cd $PluginPlowshareDir/
			git stash
			git pull
		else
			git clone $PluginPlowshareUrl $PluginPlowshareDir
			cd $PluginPlowshareDir
		fi
	;;
	*)
		if [ "$1" == "REFRESH" ]; then
			if [ -d $PluginPlowshareDir ]; then
				rm -vrf $PluginPlowshareDir
			fi
		fi
		if [ ! -f $MySB_InstallDir/files/$PluginPlowshareFile ]; then
			wget --no-check-certificate $PluginPlowshareUrl -O $MySB_InstallDir/files/$PluginPlowshareFile
		fi
		tar -zxvf $MySB_InstallDir/files/$PluginPlowshareFile -C $MySB_InstallDir/temp/
		SubDirPlowshare="`tar -ztf $MySB_InstallDir/files/$PluginPlowshareFile | cut -d '/' -f 1 | uniq`"
		if [ -d $MySB_InstallDir/temp/$SubDirPlowshare ]; then
			mv $MySB_InstallDir/temp/$SubDirPlowshare $PluginPlowshareDir
		fi
	;;
esac

cd $PluginPlowshareDir
make clean
make install

#### Create directories & change rights
echo
log_daemon_msg "Change owners and rights for files and directories"
ManageDirectoriesAndFiles
StatusLSB

#### Get Tracker Certificates
log_daemon_msg "Check and get all trackers certs"
ScriptInvoke 'screen' "$MySB_InstallDir/scripts/GetTrackersCert.bsh" 'REFRESH'
StatusLSB

#### START services
Switch="$1"
if [ "$Switch" != "UPGRADE" ]; then
	ManageServices start "cron"

	for seedUser in $UsersList; do
		if [ -f /etc/init.d/rtorrent-$seedUser ]; then
			service rtorrent-$seedUser status &> /dev/null
			if [ $? -gt 0 ]; then
				service rtorrent-$seedUser restart
			fi
		fi
	done
fi

# -----------------------------------------
source $(dirname $0)/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################