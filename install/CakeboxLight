#!/bin/bash
# ----------------------------------
source $(dirname $0)/../inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

if [ "$USAGE" == "ON" ]; then
	if [ "`screen -ls | grep SeedboxManager`" == "" ]; then
		if [ "$IsInstalled_Cakebox" == "NO" ]; then
			echo
			echo -e "${CYELLOW}CakeBox Light is not installed!$CEND"
			QuestionGetString NO  "Install CakeBox Light? " ToInstall_Cakebox $ToInstall_Cakebox

			Func_SQL_Command 'UPDATE' 'MySB_db' 'services' "to_install = '$(echo $ToInstall_Cakebox | sed 's/NO/0/g;' | sed 's/YES/1/g;')'" "serv_name = 'CakeBox-Light'" '-echo'
		fi
	fi
fi

if [ "$ToInstall_Cakebox" == "YES" ]; then
	#### App
	CakeboxUrl="`Func_SQL_Command 'SELECT' 'MySB_db' 'url' 'repositories' "name = 'Cakebox-Light'"`"
	CakeboxFile="`Func_SQL_Command 'SELECT' 'MySB_db' 'file' 'repositories' "name = 'Cakebox-Light'"`"
	CakeboxVersion="`Func_SQL_Command 'SELECT' 'MySB_db' 'version' 'repositories' "name = 'Cakebox-Light'"`"
	echo
	echo "########## Cakebox-Light"
	echo "Directory : "$CakeboxDir
	echo "Version : "$CakeboxVersion
	echo "File : "$CakeboxFile
	echo "URL : "$CakeboxUrl
	echo
	if [ -d $CakeboxDir ]; then
		cd $CakeboxDir/
		git fetch --tags
		git checkout -b $(git describe --tags $(git rev-list --tags --max-count=1))
		composer self-update
		composer update
		bower update --allow-root --config.interactive=false
	else
		if [ -f $MySB_InstallDir/files/$CakeboxFile ]; then
			unzip $MySB_InstallDir/files/$CakeboxFile -d $MySB_InstallDir/temp/
			SubDir="`unzip -l $MySB_InstallDir/files/$CakeboxFile | awk '{ print $4 }' | cut -d '/' -f 1 | uniq | sed '1,3d;$d'`"
			if [ -d $MySB_InstallDir/temp/$SubDir ]; then
				mv -v $MySB_InstallDir/temp/$SubDir $CakeboxDir
			fi
			if [ -d $CakeboxDir ]; then
				cd $CakeboxDir/
				git fetch --tags
				git checkout -b $(git describe --tags $(git rev-list --tags --max-count=1))
				composer self-update
				composer update
				bower update --allow-root --config.interactive=false
			fi
		else
			git clone $CakeboxUrl $CakeboxDir
			cd $CakeboxDir
			LASTEST=$(git describe --abbrev=0 --tags)
			git checkout tags/$LASTEST
			composer install
			bower update --allow-root --config.interactive=false
		fi
	fi

	#### ruTorrent Plugin Link Cakebox
	PluginCakeboxDir=$MySB_InstallDir"`Func_SQL_Command 'SELECT' 'MySB_db' 'dir' 'repositories' "name = 'ruTorrent Plugin Link Cakebox'"`"
	PluginCakeboxUrl="`Func_SQL_Command 'SELECT' 'MySB_db' 'url' 'repositories' "name = 'ruTorrent Plugin Link Cakebox'"`"
	PluginCakeboxVersion="`Func_SQL_Command 'SELECT' 'MySB_db' 'version' 'repositories' "name = 'ruTorrent Plugin Link Cakebox'"`"
	PluginCakeboxFile="`Func_SQL_Command 'SELECT' 'MySB_db' 'file' 'repositories' "name = 'ruTorrent Plugin Link Cakebox'"`"
	echo
	echo "########## ruTorrent Plugin Link Cakebox"
	echo "Directory : "$PluginCakeboxDir
	echo "Version : "$PluginCakeboxVersion
	echo "File : "$PluginCakeboxFile
	echo "URL : "$PluginCakeboxUrl
	echo
	if [ -d $PluginCakeboxDir ]; then
		if [ -f $PluginCakeboxDir/conf.php ]; then rm -v $PluginCakeboxDir/conf.php; fi
		GitCheckout $PluginCakeboxDir
	else
		if [ -f $MySB_InstallDir/files/$PluginCakeboxFile ]; then
			unzip $MySB_InstallDir/files/$PluginCakeboxFile -d $MySB_InstallDir/temp/
			SubDir="`unzip -l $MySB_InstallDir/files/$PluginCakeboxFile | awk '{ print $4 }' | cut -d '/' -f 1 | uniq | sed '1,3d;$d'`"
			if [ -d $MySB_InstallDir/temp/$SubDir ]; then
				mv -v $MySB_InstallDir/temp/$SubDir $PluginCakeboxDir
			fi
			if [ -d $PluginCakeboxDir ]; then
				if [ -f $PluginCakeboxDir/conf.php ]; then rm -v $PluginCakeboxDir/conf.php; fi
				GitCheckout $PluginCakeboxDir
			fi
		else
			git clone $PluginCakeboxUrl $PluginCakeboxDir
			cd $PluginCakeboxDir/
			git checkout -b $(git describe --tags $(git rev-list --tags --max-count=1))
		fi
	fi
	chown -R www-data:www-data $PluginCakeboxDir
	sed -i "s/'http:\/\/'.\$host;/'https:\/\/$HostNameFQDN:$Port_HTTPS\/cb\/';/g;" $PluginCakeboxDir/conf.php
	sed -i "s/torrents/rtorrent/g;" $PluginCakeboxDir/conf.php

	#### NginX (alias with proxy)
	CakeboxDirEscaped=`echo $CakeboxDir | sed s,/,\\\\\\\\\\/,g`
	# Site-Enabled
	if [ -h /etc/nginx/sites-enabled/cakebox ]; then rm -vf /etc/nginx/sites-enabled/cakebox; fi
	cp -vf $MySB_InstallDir/templates/nginx/etc.nginx.site-enabled.cakebox.tmpl /etc/nginx/sites-available/cakebox
	perl -pi -e "s/<server_name>/$HostNameFQDN/g" /etc/nginx/sites-available/cakebox
	perl -pi -e "s/<cakebox_rootdir>/$CakeboxDirEscaped/g" /etc/nginx/sites-available/cakebox
	chmod 0644 /etc/nginx/sites-available/cakebox
	if [ ! -h /etc/nginx/sites-enabled/cakebox ]; then ln -sv /etc/nginx/sites-available/cakebox /etc/nginx/sites-enabled/cakebox; fi
	# Location
	cp -vf $MySB_InstallDir/templates/nginx/etc.nginx.locations.cakebox.conf.tmpl /etc/nginx/locations/Cakebox-Light.conf
	chmod 0644 /etc/nginx/locations/Cakebox-Light.conf
	# Proxy
	cp -vf $MySB_InstallDir/templates/nginx/etc.nginx.proxy.cakebox.conf.tmpl /etc/nginx/proxy/Cakebox-Light.conf
	chmod 0644 /etc/nginx/proxy/Cakebox-Light.conf

	ListingUsers
	for seedUser in $UsersList; do
		cp -vf $MySB_InstallDir/templates/nginx/etc.nginx.rpc.user.cakebox.tmpl /etc/nginx/rpc/$seedUser.cakebox
		perl -pi -e "s/<username>/$seedUser/g" /etc/nginx/rpc/$seedUser.cakebox
	done

	#### Delete unused files and directories
	DeleteDirectory 1 "$CakeboxDir/webconf-example"
	DeleteDirectory 1 "$CakeboxDir/scripts"

	#### Some modifications
	if [ -f $CakeboxDir/public/app/directive/webplayer.js ]; then
		NumLign=$(sed -n "/$location.host()/=" $CakeboxDir/public/app/directive/webplayer.js)
		sed -i "$NumLign"d"" $CakeboxDir/public/app/directive/webplayer.js
		sed -i ""$NumLign"i\                        scope.url = \$location.protocol() + \"://\" + \$location.host() + ':$Port_HTTPS' + data.url;" $CakeboxDir/public/app/directive/webplayer.js
	fi
	if [ -f $CakeboxDir/public/app/controller/AppCtrl.js ]; then
		NumLign=$(sed -n "/$location.host()/=" $CakeboxDir/public/app/controller/AppCtrl.js)
		sed -i "$NumLign"d"" $CakeboxDir/public/app/controller/AppCtrl.js
		sed -i ""$NumLign"i\            return \$location.protocol() + \"://\" + \$location.host() + \":$Port_HTTPS\" + data.access;" $CakeboxDir/public/app/controller/AppCtrl.js
	fi
	if [ -f $CakeboxDir/app/controllers/player.php ]; then
		NumLign=$(sed -n "/VLC Web Player/=" $CakeboxDir/app/controllers/player.php)
		sed -i "$NumLign"d"" $CakeboxDir/app/controllers/player.php
		perl -pi -e "s/divx/vlc/g" $CakeboxDir/app/controllers/player.php
		perl -pi -e "s/DivX Web Player/VLC Web Player/g" $CakeboxDir/app/controllers/player.php
	fi

	#### Create directories & change rights
	ManageDirectoriesAndFiles 'global'

	Func_SQL_Command 'UPDATE' 'MySB_db' 'services' "to_install = '0', is_installed = '1'" "serv_name = 'CakeBox-Light'" '-echo'

	#### START services
	ManageServices start "nginx"
fi

# -----------------------------------------
source $(dirname $0)/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################