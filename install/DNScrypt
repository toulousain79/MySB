#!/bin/bash
# ----------------------------------
source $(dirname $0)/../inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

if [ "$USAGE" == "ON" ]; then
	if [ "$gbIsInstalled_DNScrypt" == "NO" ]; then
		echo
		echo -e "${CYELLOW}DNScrypt-proxy is not installed!$CEND"
		gfnQuestionGetString NO "Install DNScrypt-proxy? " gbToInstall_DNScrypt $Global_YES
		gbToInstall_DNScrypt="`echo $gbToInstall_DNScrypt | tr '[:lower:]' '[:upper:]'`"

		cmdMySQL 'MySB_db' "UPDATE services SET is_installed = '$(echo $gbToInstall_DNScrypt | sed "s/$Global_NO/0/g;" | sed "s/$Global_YES/1/g;")' WHERE serv_name='DNScrypt-proxy';"

		if [ "$gbToInstall_DNScrypt" != "YES" ]; then
			gfnEndingScript 0
		fi
	fi
fi

if [ "$gbToInstall_DNScrypt" == "YES" ]; then
	# Check packages to install
	gfnPackageBundleInstall 'ldnsutils libldns-dev rng-tools haveged'

	# STOP services
	pkill -f dnscrypt-proxy
	rm -f /var/run/dnscrypt-proxy/*

	# RNG-Tools
	nNumLine=$(cat /etc/default/rng-tools | grep '#HRNGDEVICE=/dev/null' -n -m 1 | cut -d ':' -f 1)
	(( nNumLine++ ))
	sed -i ""$nNumLine"i\HRNGDEVICE=/dev/urandom" /etc/default/rng-tools

	# Switch to bind
	gfnSwitchDNS "bind"

	if [ "$gsSwitch" == "INSTALL" ]; then
		#### Add dnscrypt user
		if [ -z "`cat /etc/passwd | grep dnscrypt`" ]; then
			useradd --system -d "/usr/local/share/dnscrypt-proxy" -c "DNScrypt-proxy user" -s /bin/nologin dnscrypt
			install -o dnscrypt -m 750 -d "/usr/local/share/dnscrypt-proxy"
		fi
	fi

	# LIBsodium
	gfnGetRepoValues 'Libsodium' && gfnRepoManageByType
	cd $gsRepoDir/
	make clean
	chmod +x autogen.sh
	./autogen.sh
	./configure --enable-minimal
	make -j$gsProcessors
	make check
	make install
	ldconfig

	# Minisign
	gfnGetRepoValues 'Minisign' && gfnRepoManageByType
	cd $gsRepoDir/
	mkdir build
	cd build
	cmake ..
	make
	make install

	# DNScrypt
	gfnGetRepoValues 'DNScrypt-proxy' && gfnRepoManageByType
	cd $gsRepoDir/
	make clean
	chmod +x autogen.sh
	./autogen.sh
	./configure
	make -j$gsProcessors
	make check
	make install

	#### DNScrypt-proxy - /etc/init.d/dnscrypt-proxy
	install -v -o root -g root -m 0755 $MySB_InstallDir/templates/init/etc.init.d.dnscrypt-proxy.tmpl /etc/init.d/dnscrypt-proxy

	# Mark as installed
	if gfnCheckCommand 0 dnscrypt-proxy; then
		cmdMySQL 'MySB_db' "UPDATE services SET to_install='0',is_installed='1' WHERE serv_name='DNScrypt-proxy';" -v
	fi

	#### Logrotate
	gfnLogRotate 'dnscrypt-proxy'

	#### Opening ports for PeerGuardian
	if gfnCheckCommand 0 pgld; then
		# Perform a small update to add resolvers in database for PeerGuardian
		service dnscrypt-proxy update
		cmdMySQL 'MySB_db' "UPDATE system SET dnscrypt='0' WHERE id_system='1';" -v
		gfnScriptInvoke 'source' "$MySB_InstallDir/bin/MySB_SecurityRules" 'create'
	fi
	cmdMySQL 'MySB_db' "UPDATE system SET dnscrypt='1' WHERE id_system='1';" -v

	#### START services & Update resolvers infos in db
	service dnscrypt-proxy full-update
	sleep 5
	if gfnCheckCommand 0 pgld; then
		gfnManageServices stop "dnscrypt-proxy"
		gfnScriptInvoke 'source' "$MySB_InstallDir/bin/MySB_SecurityRules" 'create'
	else
		gfnManageServices stop "dnscrypt-proxy"
		sleep 5
		gfnManageServices start "dnscrypt-proxy"
		sleep 5
	fi
	ping -c5 github.com

	#### Check procese
	service dnscrypt-proxy status-details

	#### Check if service is OK and running
	if [ "$gsSwitch" != "UPGRADE" ]; then
		#Wait a moment for DNScrypt to start
		sleep 5
		if ! gfnGetPid dnscrypt-proxy; then
			service dnscrypt-proxy status | tee -a $MySB_InstallDir/temp/continue
		fi
	fi
fi

# -----------------------------------------
source $(dirname $0)/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################