#!/bin/bash
# -----------------------------------------
MySB_CurrentVersion="v2.1"
MySB_InstallDir="/usr/share/MySB"
# -----------------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

#### Start Log
clear
echo "------------------------------------------------------------" > /tmp/`basename $0`.log
echo "START Err: "`date` "-" `basename $0` >> /tmp/`basename $0`.log
echo "------------------------------------------------------------" >> /tmp/`basename $0`.log
exec 2>> /tmp/`basename $0`.log

#### VARs
CSI="\033["
CEND="${CSI}0m"
CBLACK="${CSI}0;30m"
CRED="${CSI}1;31m"
CGREEN="${CSI}1;32m"
CYELLOW="${CSI}1;33m"
CBLUE="${CSI}1;34m"
Continue=0

if [ "`dpkg --status aptitude | grep Status:`" == "Status: install ok installed" ]; then
	AptCommand="aptitude -q"
else
	AptCommand="apt-get"
fi

#### Must be root
if [[ $EUID -ne 0 ]]; then
	echo -e "${CRED}This script must be run as root.$CEND"
	exit 1
fi

#### Functions
OvhReplaceKernel() {
	if [ "`dpkg --status aptitude | grep Status:`" == "Status: install ok installed" ]; then
		KernelFind="`aptitude -q search linux-image | grep -v 'rt-' | grep -v 'dummy' | grep -v 'dbg' | awk '{ print $2 }' | grep '[.]'`"
	else
		KernelFind="`apt-cache search search linux-image | grep -v 'rt-' | grep -v 'dummy' | grep -v 'dbg' | grep 'image' |  awk '{ print $1 }' | grep '[.]'`"
	fi

	echo
	if [ ! -z "$KernelFind" ]; then
		echo -e "${CYELLOW}Latest Debian kernel	: $CEND${CGREEN}$KernelFind$CEND"
		echo
		if [ ! -z "$KernelFind" ]; then
			$AptCommand -y --assume-yes -o Acquire::Check-Valid-Until=false update
			$AptCommand -y --assume-yes -V -o Dpkg::Options::="--force-confold" upgrade
			$AptCommand -y --assume-yes install $KernelFind
			mv /etc/grub.d/06_OVHkernel /etc/grub.d/99_OVHkernel
			update-grub
			echo
			echo -e "${CBLUE}You need to reboot your server before install MySB.'$CEND"
			echo -e "${CBLUE}After the reboot, you can start again '$0'.'$CEND"
			echo
			echo -e -n "${CYELLOW}Do you want to reboot now ?$CEND "

			read answer
			case ${answer:0:1} in
				y|Y|yes|YES)
					echo -e "${CYELLOW}OK, let's go !$CEND"
					CountDown 3
					reboot
					exit 0
				;;
				n|N|no|NO)
					Continue=1
				;;
			esac
		else
			echo
			echo -e "${CRED}I can't find the last kernel for your server, please install it yourself.$CEND"
			Continue=1
		fi
	else
		echo -e "${CYELLOW}Latest Debian kernel	: $CEND${CRED}??$CEND"
		Continue=1
	fi
}

#### Check if internet
ping -c2 -w2 github.com >> /tmp/`basename $0`.log
if [ $? -gt 0 ]; then
	Continue=1
	echo -e "${CYELLOW}Internet	: $CEND${CRED}KO$CEND"
else
	echo -e "${CYELLOW}Internet	: $CEND${CGREEN}OK$CEND"
fi

#### Must be Debian >= 7 (Wheezy) x86_64
if type -P lsb_release > /dev/null; then
	OS_Id="`lsb_release -is`"
	OS_Ver="`lsb_release -rs | cut -d '.' -f 1`"
else
	OS_Id="`cat /etc/issue | sed '2,2d;$d' | awk '{ print $1 }'`"
	OS_Ver="`cat /etc/issue | sed '2,2d;$d' | awk '{ print $3 }'`"
fi
OS_Arch="`getconf LONG_BIT`"
PVE_Kernel="`uname -r | grep 'pve'`"
OVH_Kernel="`uname -r | grep 'xxxx'`"

#### Check if Debian
if [ "$OS_Id" != "Debian" ]; then
	OS_Id="`cat /etc/issue | grep 'Debian' | awk '{ print $1 }'`"
	
	if [ "$OS_Id" != "Debian" ]; then
		OS_Id="`cat /etc/issue.net | awk '{ print $1 }'`"
	
		if [ "$OS_Id" != "Debian" ]; then
			if [ ! -f /etc/debian_version ]; then
				Continue=1
				echo -e "${CYELLOW}Distributor ID	: $CEND${CRED}$OS_Id$CEND"
			else
				echo -e "${CYELLOW}Distributor ID	: $CEND${CGREEN}??$CEND"
			fi
		else
			echo -e "${CYELLOW}Distributor ID	: $CEND${CGREEN}$OS_Id$CEND"
		fi	
	else
		echo -e "${CYELLOW}Distributor ID	: $CEND${CGREEN}$OS_Id$CEND"
	fi
else
	echo -e "${CYELLOW}Distributor ID	: $CEND${CGREEN}$OS_Id$CEND"

	if [ $OS_Ver -lt 7 ]; then
		if [ -f /etc/debian_version ]; then
			OS_Ver="`cat /etc/debian_version | cut -d '.' -f 1`"
			if [ $OS_Ver -lt 7 ]; then
				Continue=1
				echo -e "${CYELLOW}Release		: $CEND${CRED}$OS_Ver$CEND"
			else
				echo -e "${CYELLOW}Release		: $CEND${CGREEN}$OS_Ver$CEND"
			fi
		else
			Continue=1
			echo -e "${CYELLOW}Release		: $CEND${CRED}??$CEND"
		fi
	else
		echo -e "${CYELLOW}Release		: $CEND${CGREEN}$OS_Ver$CEND"
	fi
fi

#### Check if Debian
echo -e "${CYELLOW}Architecture	: $CEND${CGREEN}$OS_Arch$CEND"

#### Check kernel if PVE kernel
if [ ! -z "$PVE_Kernel" ]; then
	Continue=1
	echo -e "${CYELLOW}PVE kernel	: $CEND${CRED}Yes$CEND"
else
	echo -e "${CYELLOW}PVE kernel	: $CEND${CGREEN}No$CEND"
fi

#### Check kernel if OVH kernel
if [ ! -z "$OVH_Kernel" ]; then
	echo -e "${CYELLOW}OVH kernel	: $CEND${CRED}Yes$CEND"
else
	echo -e "${CYELLOW}OVH kernel	: $CEND${CGREEN}No$CEND"
fi
if [ ! -z "$OVH_Kernel" ]; then
	echo
	echo -e "${CRED}Your server use a custom kernel (maybe installed by OVH).$CEND"
	echo -e "${CRED}This kernel does not support networking modules required by Iptables, PeerGuardian and OpenVPN.$CEND"
	echo -e "${CRED}If you want install MySB, you must install a Debian standard kernel.$CEND"
	echo
	echo -e "${CYELLOW}You have 2 options:$CEND "
	echo -e "${CYELLOW}	- Either we try to install a standard Debian kernel (not guaranteed outcome).$CEND "
	echo -e "${CYELLOW}	- Either you do a fresh install of your server using the OVH Manager interface as follows:$CEND "
	echo -e "${CYELLOW}		1) When choosing the OS, check \"Custom install\"$CEND "
	echo -e "${CYELLOW}		2) Then on the options page (hostname, SSH key), check \"Use of kernel distribution\"$CEND "
	echo -e "${CYELLOW}		3) Continue and confirm the installation of your system$CEND "
	echo -e "${CYELLOW}		4) From there you can proceed with installing MySB$CEND "
	echo
	echo -e "${CBLUE}Type$CEND ${CGREEN}YES$CEND ${CBLUE}for try to install a standard Debian kernel.$CEND"
	echo -e "${CBLUE}Type$CEND ${CGREEN}NO$CEND ${CBLUE}for stop the script now and proceed to an new install yourself.$CEND"
	echo
	echo -e -n "${CBLUE}What do you want to do ?$CEND "
	read answer
	case ${answer:0:1} in
		y|Y|yes|YES)
			echo -e "${CYELLOW}OK, let's go !$CEND"
			CountDown 3
			OvhReplaceKernel
			
		;;
		n|N|no|NO)
			Continue=1
		;;
	esac
fi

if [ $Continue -gt 0 ]; then
	echo
	echo -e "${CRED}MySB script is designed only for Debian 7 Wheezy or superior (32 or 64bits).$CEND"
	echo -e "${CRED}Systems with a kernel PVE is no longer supported.$CEND"
	echo -e "${CRED}End a valid internet access is required.$CEND"
	echo -e "${CRED}A default Debian kernel is also required.$CEND"
	echo -e "${CRED}Aborting !$CEND"
	exit 1
fi

if type -P screen > /dev/null; then
	COMMAND="`screen -ls | grep MySB 2>/dev/null`"
else
	COMMAND=""
fi

BannerInstall() {
	clear
	#### Banner
	echo -e "${CGREEN}############################################################$CEND"
	echo -e "${CGREEN}#$CEND"
	echo -e "${CGREEN}#$CEND 			${CYELLOW}MySB$CEND ${CRED}$MySB_CurrentVersion$CEND"
	echo -e "${CGREEN}#$CEND"
	echo -e "${CGREEN}############################################################$CEND"
	echo

	#### Advertising
	echo -e "${CRED}############################################################$CEND"
	echo -e "${CRED}#$CEND ${CYELLOW}At the end of the installation, you will receive an email.$CEND"
	echo -e "${CRED}#$CEND ${CYELLOW}It list informations about your account.$CEND"
	echo -e "${CRED}# IMPORTANT:$CEND ${CYELLOW}Remember to also check the SPAM folder...$CEND"
	echo -e "${CRED}############################################################$CEND"
	echo
}

CountDown() {
	for ((i = $1; i >= 0; i -= 1)); do
		echo -n " $i"
		sleep 1
	done
	echo
}

if [ "$COMMAND" == "" ]; then
	if [ -s $MySB_InstallDir/version ]; then # Upgrade ?
		echo -e -n "${CRED}MySB is already installed, aborting!$CEND"
		echo -e -n "${CBLUE}To upgrade MySB, thank you use the following command.'$CEND"
		echo -e -n "${CGREEN}	MySB_UpgradeMe'$CEND"
		source $(dirname $0)/../inc/includes_after
		exit 1
	else # Install ?
		BannerInstall
		echo -e "${CYELLOW}All is ok to start MySB installation.$CEND"
		echo
		echo -e "${CYELLOW}	1) I will do an update (verbosely)$CEND"
		echo -e "${CYELLOW}	2) I will do an upgrade (verbosely)$CEND"
		echo -e "${CYELLOW}	3) I will install some needed pakages (verbosely)$CEND"
		echo -e "${CYELLOW}	4) You have to answer to few questions$CEND"
		echo -e "${CYELLOW}	5) I will install MySB completly (silently)$CEND"
		echo
		echo -e "${CYELLOW}The installation may take 30 to 60 minutes around.$CEND"
		echo -e "${CYELLOW}This will depend on your server configuration and choice of services to install.$CEND"
		echo
		echo -e -n "${CYELLOW}Are you ready to install MySB ? (yes/no)$CEND "

		read answer
		case ${answer:0:1} in
			y|Y|yes|YES)
				echo -e "${CYELLOW}OK, let's go !$CEND"
				CountDown 3
			;;
			n|N|no|NO)
				echo -e "${CYELLOW}OK, see you later...$CEND"
				exit 0
			;;
		esac

		#
		BannerInstall
		echo
		echo -e -n "${CBLUE}Where do you want to install MySB ? (Hit enter for default choice) [/etc/MySB]$CEND "
		read MySB_InstallDir
		if [ -z "$MySB_InstallDir" ]; then
			MySB_InstallDir="/etc/MySB"
		fi
		IfEmpty="`ls -a $MySB_InstallDir 2> /dev/null | sed -e "/\.$/d" | wc -l`"

		while [ -z "$MySB_InstallDir" ] || [ -d $MySB_InstallDir ] || [ $IfEmpty -ne 0 ]; do
			echo -e -n "${CYELLOW}The selected folder [$MySB_InstallDir] is not empty, choose another one:$CEND "
			read MySB_InstallDir

			if [ -z "$MySB_InstallDir" ]; then
				MySB_InstallDir="/usr/share/MySB"
			fi
			MySB_InstallDir=${MySB_InstallDir%/}
			if [ -d $MySB_InstallDir ]; then
				IfEmpty="`ls -a $MySB_InstallDir 2> /dev/null | sed -e "/\.$/d" | wc -l`"
			else
				IfEmpty=0
			fi
		done

		# First we do an update
		BannerInstall
		echo -e -n "${CBLUE}Updating Debian source lists$CEND... "
		CountDown 3
		$AptCommand -y --assume-yes -o Acquire::Check-Valid-Until=false update
		if [ $? -gt 0 ]; then
			if [ -f /etc/MySB/config ]; then rm -f /etc/MySB/config; fi
			echo -e "${CRED}Looks like something was wrong during the update, aborting !$CEND"
			exit 1
		fi

		# Next we do an upgrade
		BannerInstall
		echo -e -n "${CBLUE}Upgrading the system$CEND... "
		CountDown 3
		$AptCommand -y --assume-yes -V -o Dpkg::Options::="--force-confold" upgrade
		if [ $? -gt 0 ]; then
			echo -e "${CRED}Looks like something was wrong during the upgrade, aborting !$CEND"
			exit 1
		fi

		# Now we can install required packages
		BannerInstall
		echo -e -n "${CBLUE}Installing some needed packages$CEND... "
		CountDown 3
		TOOLS="git-core dos2unix lsb-release screen ccze gnupg figlet mlocate sqlite3 dnsutils netselect-apt"
		$AptCommand -y --assume-yes install $TOOLS
		if [ $? -gt 0 ]; then
			echo -e "${CRED}Looks like something was wrong during the install of needed packages, aborting !$CEND"
			exit 1
		fi

		#### download files from Git
		BannerInstall
		echo -e -n "${CBLUE}Downloading files from GitHub into $MySB_InstallDir$CEND... "
		git clone --progress -b $MySB_CurrentVersion https://github.com/toulousain79/MySB.git $MySB_InstallDir >> /tmp/`basename $0`.log
		if [ $? -gt 0 ]; then
			echo -e "${CRED}Looks like something was wrong with git clone, aborting !$CEND"
			exit 1
		else
			#### Load variables and functions
			echo -e "${CGREEN}Done !$CEND"

			if [ ! -z "$MySB_InstallDir" ]; then
				if [ ! -d /etc/MySB/ ]; then mkdir /etc/MySB/; fi
				echo "MySB_InstallDir=\"$MySB_InstallDir\"" > /etc/MySB/config
			else
				echo -e "${CRED}I can't write the config file \"/etc/MySB/config\", aborting !$CEND"
				exit 1
			fi

			echo -e -n "${CBLUE}Loading variables and functions$CEND..."
			source $MySB_InstallDir/inc/vars
			source $MySB_InstallDir/inc/funcs
			source /lib/lsb/init-functions
			echo -e "${CGREEN}Done !$CEND"

			#### Create directories
			echo -e -n "${CBLUE}Creating directories$CEND..."
			ManageDirectoriesAndFiles &> /dev/null
			echo -e "${CGREEN}Done !$CEND"

			#### Create database
			echo -e -n "${CBLUE}Creating databases$CEND..."
			/bin/bash $MySB_InstallDir/install/SQLite 'INSTALL' >> /tmp/`basename $0`.log
			if [ $? -gt 0 ]; then
				echo -e -n "${CRED}Failed !$CEND"
				echo ""
				echo ""
				echo -e "${CRED}Looks like something is wrong when creating the databases, aborting !$CEND"
				if [ -f /etc/MySB/config ]; then rm -f /etc/MySB/config; fi
				if [ -f $MySB_InstallDir/inc/includes_after ]; then source $MySB_InstallDir/inc/includes_after; fi
				exit 0
			else
				sqlite3 -cmd '.timeout 150000' -echo $MySB_DB "UPDATE system SET mysb_version = '$MySB_CurrentVersion' WHERE id_system = '1';" >> /tmp/`basename $0`.log
				source $MySB_InstallDir/inc/vars
				source $MySB_InstallDir/inc/funcs
				if [ $? -gt 0 ]; then
					echo -e -n "${CRED}Failed !$CEND"
					echo ""
					echo ""
					echo -e "${CRED}Looks like something is wrong when creating the database, aborting !$CEND"
					if [ -f /etc/MySB/config ]; then rm -f /etc/MySB/config; fi
					if [ -f $MySB_InstallDir/inc/includes_after ]; then source $MySB_InstallDir/inc/includes_after; fi
					exit 0
				else
					echo -e "${CGREEN}Done !$CEND"
				fi
			fi

			echo -e "${CBLUE}Please, answer to some questions$CEND..."
			sleep 2

			#### Some questions
			/bin/bash $MySB_InstallDir/install/Questions $$ 'INSTALL'
			echo
			echo

			if [ -f $MySB_InstallDir/DEV ]; then
				QuestionGetString NO  "How do you want to start the installation ? Type 'manual' or 'auto' ?" DevInstallMode "manual"
			fi

			if [ "$DevInstallMode" == "manual" ]; then
				/bin/bash $MySB_InstallDir/install/MySB.bsh "manual"
			else
				echo -e "${CBLUE}Starting SCREEN session...$CEND"

				screen -wipe >> /tmp/`basename $0`.log
				screen -dmS MySB_bsh /bin/bash $MySB_InstallDir/install/MySB.bsh;

				echo -e -n "${CRED}Please wait $CEND"
				CountDown 5

				screen -r MySB_bsh
			fi
		fi
	fi
else
	echo ""
	echo ""
	echo -e "${CRED}MySB is already started with SCREEN, aborting !$CEND"
	if [ -f /etc/MySB/config ]; then rm -f /etc/MySB/config; fi
	if [ -f $MySB_InstallDir/inc/includes_after ]; then source $MySB_InstallDir/inc/includes_after; fi
	exit 0
fi

# -----------------------------------------
if [ -f $MySB_InstallDir/inc/includes_after ]; then source $MySB_InstallDir/inc/includes_after; fi
# -----------------------------------------
##################### LAST LINE ######################################