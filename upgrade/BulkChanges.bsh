#!/bin/bash
# -----------------------------------------
source $(dirname $0)/../inc/includes_before
# -----------------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

case "$1" in
	"BEFORE")
		####################################
		#### To call for every upgrade - BoF
		# Get new vars after MySQL.bsh script
		source $MySB_InstallDir/inc/vars

		# Create missing directories and change rights
		gfnManageDirAndFiles 'global'

		# Switching DNS
		gfnSwitchDNS "bind"

		# Forcing NTP update
		ping -c4 0.fr.pool.ntp.org
		/usr/sbin/ntpdate -u 0.fr.pool.ntp.org

		# MySQL
		if [ -f /tmp/MySQL.bsh.log ]; then
			cat /tmp/MySQL.bsh.log >> $MySB_InstallDir/logs/BulkChanges.bsh.log
		fi

		# VARs & Functions
		if [ -z $funcs_Install ]; then
			source $MySB_InstallDir/inc/funcs_by_script/funcs_Install
		fi
		if [ -z $funcs_SourcesList ]; then
			source $MySB_InstallDir/inc/funcs_by_script/funcs_SourcesList
		fi
		#### To call for every upgrade - EoF
		####################################

		echo "gsRootDir=\"$MySB_InstallDir\"" >> /etc/MySB/config

		#### Add public IP address
		cmdMySQL 'MySB_db' "UPDATE system SET ipv4_ext='$gsSrvIpAddressExt' WHERE id_system='1';"

		#### OpenVPN
		perl -pi -e "s/$gsSrvIpAddress/$gsSrvIpAddressExt/g" /etc/openvpn/clients/*.ovpn

		#### Stop services
		gfnManageServices stop 'nginx php5-fpm mysql rsyslog'

		#### Webmin
		sed -i '/preroot=/d' /etc/webmin/miniserv.conf
		echo "preroot=authentic-theme" >> /etc/webmin/miniserv.conf
		sed -i '/theme=/d' /etc/webmin/config
		echo "theme=authentic-theme" >> /etc/webmin/config

		#### Nginx v1.10.2 DotDeb
		if [ -f /etc/apt/sources.list.d/dotdeb_php56.list ]; then
			cat /etc/apt/sources.list.d/dotdeb_php56.list >> /etc/apt/sources.list.d/dotdeb.list
			rm -f/etc/apt/sources.list.d/dotdeb_php56.list
		fi
		gfnAptKeyManage '7BD9BF62'
		killall -9 nginx
		rm -f /var/run/nginx.pid

		#### APT-Mirror Cron
		sed -i "s/^#0 4/0 4/g;" /etc/cron.d/apt-mirror

		#### Remove all tracker certificate
		rm -vf $MySB_InstallDir/ssl/trackers/*.pem

		#### RSysLog
		if [ -f /etc/rsyslog.d/iptables.conf ]; then rm -vf /etc/rsyslog.d/iptables.conf; fi
		echo "if (\$msg contains '[MySB] ' or \$msg contains 'IN=') then /var/log/iptables.log" | tee -a /etc/rsyslog.d/iptables.conf
		echo "& ~" | tee -a /etc/rsyslog.d/iptables.conf
		gfnLogRotate 'iptables'

		#### Create init script for MySB_SecurityRules_Init
		install -g root -o root -m 0755 $MySB_InstallDir/templates/init/etc.init.d.MySB_SecurityRules_Init.tmpl /etc/init.d/MySB_SecurityRules_Init
		update-rc.d MySB_SecurityRules_Init defaults

		#### Rename web apps
		# Cakebox
		if [ -d $MySB_InstallDir/web/cakebox-light ]; then mv -v $MySB_InstallDir/web/cakebox-light $MySB_InstallDir/web/apps/cb; fi
		# LoadAvg
		if [ -d $MySB_InstallDir/web/loadavg ]; then mv -v $MySB_InstallDir/web/loadavg $MySB_InstallDir/web/apps/la; fi
		# ruTorrent
		if [ -d $MySB_InstallDir/web/rutorrent ]; then mv -v $MySB_InstallDir/web/rutorrent $MySB_InstallDir/web/apps/ru; fi
		# Seedbox-Manager
		if [ -d $MySB_InstallDir/web/seedbox-manager ]; then rm -rfv $MySB_InstallDir/web/seedbox-manager; fi
		if [ -d $MySB_InstallDir/web/apps/sm ]; then rm -rfv $MySB_InstallDir/web/apps/sm; fi
		if [ -f $MySB_InstallDir/web/apps/sm ]; then rm -fv /etc/nginx/locations/Seedbox-Manager.conf; fi

		#### Crontab cleaning
		crontab -l > /tmp/crontab.tmp
		sed -i '/ownCloud/d' /tmp/crontab.tmp
		sed -i '/UpdateGeoIP.bsh/d' /tmp/crontab.tmp
		sed -i '/dnscrypt-proxy/d' /tmp/crontab.tmp
		crontab /tmp/crontab.tmp
		rm -vf /tmp/crontab.tmp

		#### TMPFS
		# PHP
		sed -i '/PHP TMPFS/d' /etc/fstab
		sed -i '/\/var\/lib\/php5\/sessions/d' /etc/fstab
		echo "# TMPFS - PHP" >> /etc/fstab
		echo "tmpfs   /mnt/tmpFS/php tmpfs defaults,nosuid,noatime,mode=1777,size=32M 0 0" >> /etc/fstab
		# MySQL
		sed -i '/TMPFS - MySQL/d' /etc/fstab
		sed -i '/mysql/d' /etc/fstab
		echo "# TMPFS - MySQL" >> /etc/fstab
		echo "tmpfs   /mnt/tmpFS/mysql      tmpfs   defaults,nosuid,noatime,mode=1777,size=32M 0 0" >> /etc/fstab
		# NginX PageSpeed
		sed -i '/Nginx PageSpeed/d' /etc/fstab
		echo "# TMPFS - Nginx PageSpeed" >> /etc/fstab
		echo "tmpfs   /mnt/tmpFS/pagespeed      tmpfs   defaults,nosuid,noatime,mode=1777,size=32M 0 0" >> /etc/fstab
		cat /etc/fstab
		#### Start services
		rm /etc/php5/mods-available/htscanner.ini
		gfnManageServices start 'php5-fpm mysql rsyslog'

		#### Bash
		if [ -f /root/.bash_profile ]; then rm -vf /root/.bash_profile; fi
		if [ ! -f /root/.bash_profile ]; then
			(
			cat <<'EOF'
if [ -f /etc/bash_completion ]; then
	. /etc/bash_completion
fi
if [ -f "$HOME/.bashrc" ]; then
	. "$HOME/.bashrc"
fi

EOF
			) | tee -a /root/.bash_profile
		fi

		#### Remove old Let's Encrypt source directory
		[ -d /usr/local/src/letsencrypt ] && gfnDeleteDirectory 1 "/usr/local/src/letsencrypt"

		#### Install some new packages
		# For DNScrypt
		deluser --system dnscrypt
		delgroup --system dnscrypt
		useradd --system -d "/usr/local/share/dnscrypt-proxy" -c "DNScrypt-proxy user" -s /bin/nologin dnscrypt
		install -o dnscrypt -m 750 -d "/usr/local/share/dnscrypt-proxy"
		cmdMySQL 'MySB_db' "UPDATE system SET dnscrypt='0' WHERE id_system='1';" -v

		#### Remove old Fail2Ban version
		gfnDeleteDirectory 1 "/etc/fail2ban"
		gfnPackagesManage purge 'fail2ban'

		#### /etc/MySB/config.php
		source /etc/MySB/config_db
		cp -vf $MySB_InstallDir/templates/mysb/etc.mysb.config.php.tmpl /etc/MySB/config.php
		perl -pi -e "s/<MySB_InstallDir>/$gsInstallDirEscaped/g" /etc/MySB/config.php
		if [ ! -z "$MySQL_MysbPassword" ]; then
			perl -pi -e "s/<MySQL_MysbPassword>/$MySQL_MysbPassword/g" /etc/MySB/config.php
		fi

		#### Upgrade ownCloud v9.1.3 to ownCloud v9.1.4 then to NextCLoud v10.0.4 before NextCloud v11.0.2
		# ownCloud directory
		if [ -d $MySB_InstallDir/web/apps/oc ]; then
			gsNextCloudDir="$MySB_InstallDir/web/apps/oc"
		elif [ -d $MySB_InstallDir/web/apps/owncloud ]; then
			gsNextCloudDir="$MySB_InstallDir/web/apps/owncloud"
		elif [ -d $MySB_InstallDir/web/owncloud ]; then
			gsNextCloudDir="$MySB_InstallDir/web/owncloud"
		elif [ -d $MySB_InstallDir/web/oc ]; then
			gsNextCloudDir="$MySB_InstallDir/web/oc"
		fi
		ownCloudDir="$gsNextCloudDir"

		# Upgrade step 1/6 - Last relaese of ownCloud
		gfnManageDirAndFiles 'global'
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ maintenance:mode --off"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:set dbpassword --value=$MySQL_MysbPassword"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:get version"
		ownCloudFile="owncloud_v9.1.4.zip"
		ownCloudUrl="https://download.owncloud.org/community/owncloud-9.1.4.zip"
		Version="9.1.4.2"
		PasswordSalt="`su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:get passwordsalt"`"
		Secret="`su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:get secret"`"
		MailFrom="`su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:get mail_from_address"`"
		MailDomain="`su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:get mail_domain"`"
		echo
		echo "########## ownCloud"
		echo "Directory : $gsNextCloudDir"
		echo "Version : $Version"
		echo "File : $ownCloudFile"
		echo "URL : $ownCloudUrl"
		echo
		if [ ! -f $MySB_InstallDir/temp/$ownCloudFile ]; then
			curl -skLS --retry 3 -o "$MySB_InstallDir/temp/$ownCloudFile" "$ownCloudUrl"
		fi
		if [ -f $MySB_InstallDir/temp/$ownCloudFile ] && [ -d $gsNextCloudDir ]; then
			if [ -f $gsNextCloudDir/config/config.php ]; then
				mv -v $gsNextCloudDir/config/config.php $MySB_InstallDir/temp/owncloud_config.php
			fi
			if [ -d $gsNextCloudDir/apps2 ]; then mv -v $gsNextCloudDir/apps2 $MySB_InstallDir/temp/owncloud_apps2; fi
			if [ -f $MySB_InstallDir/temp/$ownCloudFile ]; then gfnDeleteDirectory 1 "$gsNextCloudDir"; fi
			if [ ! -d $gsNextCloudDir ]; then
				unzip $MySB_InstallDir/temp/$ownCloudFile -d $MySB_InstallDir/temp/
				SubDir="`unzip -l $MySB_InstallDir/temp/$ownCloudFile | awk '{ print $4 }' | cut -d '/' -f 1 | uniq | sed '1,3d;$d'`"
				if [ -d $MySB_InstallDir/temp/$SubDir ]; then mv -v $MySB_InstallDir/temp/$SubDir $gsNextCloudDir; fi
			fi
		fi
		# Restore configs & apps2
		if [ -f $MySB_InstallDir/temp/owncloud_config.php ]; then mv -v $MySB_InstallDir/temp/owncloud_config.php $gsNextCloudDir/config/config.php; fi
		if [ -d $MySB_InstallDir/temp/owncloud_apps2 ]; then
			if [ -d $gsNextCloudDir/apps2 ]; then rm -rfv $gsNextCloudDir/apps2; fi
			mv -v $MySB_InstallDir/temp/owncloud_apps2 $gsNextCloudDir/apps2
		fi
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ upgrade -v"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ maintenance:repair"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ maintenance:mimetype:update-db"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ maintenance:mimetype:update-js"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ app:enable files_external"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ app:enable notifications"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ background:cron"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ files:scan --all"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ files:cleanup"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:get version"
		cat $gsNextCloudDir/config/config.php

		# Upgrade step 2/6 - Rename MySQL database
		if [ -f /var/lib/mysql/ownCloud_db/db.opt ]; then
			mysql -u root -p$MySQL_RootPassword --verbose <<-EOF
			CREATE DATABASE NextCloud_db CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;
			GRANT ALL ON NextCloud_db.* to 'MySB_user'@'localhost' IDENTIFIED BY '$MySQL_MysbPassword';
			FLUSH PRIVILEGES;
			EOF

			mysql -u root -p$MySQL_RootPassword ownCloud_db -sNe 'SHOW TABLES;' | \
			while read sOldTable; do
				sNewTable="`echo $sOldTable | sed -e 's/oc_/nc_/g;'`"
				mysql -u root -p$MySQL_RootPassword -sNe "RENAME TABLE ownCloud_db.$sOldTable to NextCloud_db.$sNewTable;" -v
			done
			mysqldump --defaults-extra-file=/root/.config.cnf -R ownCloud_db > $MySB_InstallDir/temp/ownCloud_db.sql
			mysql -u root -p$MySQL_RootPassword NextCloud_db < $MySB_InstallDir/temp/ownCloud_db.sql

			mysql -u root -p$MySQL_RootPassword --verbose <<-EOF
			REVOKE ALL PRIVILEGES ON ownCloud_db.* FROM 'MySB_user'@'localhost';
			DROP DATABASE IF EXISTS ownCloud_db;
			FLUSH PRIVILEGES;
			EOF

			mysqldump --defaults-extra-file=/root/.config.cnf -R NextCloud_db > $MySB_InstallDir/temp/NextCloud_db.sql
			perl -pi -e "s/oc_/nc_/g" $MySB_InstallDir/temp/NextCloud_db.sql
			perl -pi -e "s/owncloud\//nc\//g" $MySB_InstallDir/temp/NextCloud_db.sql
			perl -pi -e "s/\/oc/\/nc/g" $MySB_InstallDir/temp/NextCloud_db.sql
			perl -pi -e "s/\/home\/nc/\/home\/nextcloud/g" $MySB_InstallDir/temp/NextCloud_db.sql
			mysql -u root -p$MySQL_RootPassword NextCloud_db < $MySB_InstallDir/temp/NextCloud_db.sql
		fi

		# Upgrade step 3/6 - Move /home/owncloud/ to /home/nextcloud/ AND ownCloud.log, ownCloud.bsh.log
		[ -f /etc/nginx/locations/ownCloud.conf ] && rm -vf /etc/nginx/locations/ownCloud.conf
		[ -d /home/nextcloud ] && rm -rfv /home/nextcloud
		gfnManageDirAndFiles 'global'
		rsync -av /home/owncloud/ /home/nextcloud/
		[ -d /home/owncloud ] && rm -rfv /home/owncloud
		[ -f /home/nextcloud/owncloud.log ] && mv -v /home/nextcloud/owncloud.log /home/nextcloud/nextcloud.log
		[ -f /home/nextcloud/owncloud.log.1 ] && mv -v /home/nextcloud/owncloud.log.1 /home/nextcloud/nextcloud.log.1
		[ -f /home/nextcloud/owncloud.log.2 ] && mv -v /home/nextcloud/owncloud.log.2 /home/nextcloud/nextcloud.log.2
		[ -f /home/nextcloud/owncloud.log.3 ] && mv -v /home/nextcloud/owncloud.log.3 /home/nextcloud/nextcloud.log.3
		[ -f /home/nextcloud/owncloud.log.4 ] && mv -v /home/nextcloud/owncloud.log.4 /home/nextcloud/nextcloud.log.4
		[ -f $MySB_InstallDir/logs/ownCloud.log ] && mv -v $MySB_InstallDir/logs/ownCloud.log $MySB_InstallDir/logs/NextCloud.log
		[ -f $MySB_InstallDir/logs/ownCloud.bsh.log ] && mv -v $MySB_InstallDir/logs/ownCloud.bsh.log $MySB_InstallDir/logs/NextCloud.bsh.log
		[ -f $MySB_InstallDir/logs/archives/ownCloud.log.1 ] && mv -v $MySB_InstallDir/logs/archives/ownCloud.log.1 $MySB_InstallDir/logs/archives/NextCloud.log.1
		[ -f $MySB_InstallDir/logs/archives/ownCloud.log.2 ] && mv -v $MySB_InstallDir/logs/archives/ownCloud.log.2 $MySB_InstallDir/logs/archives/NextCloud.log.2
		[ -f $MySB_InstallDir/logs/archives/ownCloud.log.3 ] && mv -v $MySB_InstallDir/logs/archives/ownCloud.log.3 $MySB_InstallDir/logs/archives/NextCloud.log.3
		[ -f $MySB_InstallDir/logs/archives/ownCloud.log.4 ] && mv -v $MySB_InstallDir/logs/archives/ownCloud.log.4 $MySB_InstallDir/logs/archives/NextCloud.log.4
		[ -f $MySB_InstallDir/logs/archives/ownCloud.bsh.log.1 ] && mv -v $MySB_InstallDir/logs/archives/ownCloud.bsh.log.1 $MySB_InstallDir/logs/archives/NextCloud.bsh.log.1
		[ -f $MySB_InstallDir/logs/archives/ownCloud.bsh.log.2 ] && mv -v $MySB_InstallDir/logs/archives/ownCloud.bsh.log.2 $MySB_InstallDir/logs/archives/NextCloud.bsh.log.2
		[ -f $MySB_InstallDir/logs/archives/ownCloud.bsh.log.3 ] && mv -v $MySB_InstallDir/logs/archives/ownCloud.bsh.log.3 $MySB_InstallDir/logs/archives/NextCloud.bsh.log.3
		[ -f $MySB_InstallDir/logs/archives/ownCloud.bsh.log.4 ] && mv -v $MySB_InstallDir/logs/archives/ownCloud.bsh.log.4 $MySB_InstallDir/logs/archives/NextCloud.bsh.log.4
		[ -f /var/log/nginx/owncloud-access.log ] && mv -v /var/log/nginx/owncloud-access.log /var/log/nginx/owncloud-access.log
		[ -f /var/log/nginx/owncloud-access.log.1 ] && mv -v /var/log/nginx/owncloud-access.log.1 /var/log/nginx/owncloud-access.log.1
		[ -f /var/log/nginx/owncloud-access.log.2 ] && mv -v /var/log/nginx/owncloud-access.log.2 /var/log/nginx/owncloud-access.log.2
		[ -f /var/log/nginx/owncloud-access.log.3 ] && mv -v /var/log/nginx/owncloud-access.log.3 /var/log/nginx/owncloud-access.log.3
		[ -f /var/log/nginx/owncloud-access.log.4 ] && mv -v /var/log/nginx/owncloud-access.log.4 /var/log/nginx/owncloud-access.log.4
		[ -f /var/log/nginx/owncloud-access.log.5 ] && mv -v /var/log/nginx/owncloud-access.log.5 /var/log/nginx/owncloud-access.log.5
		[ -f /var/log/nginx/owncloud-access.log.6 ] && mv -v /var/log/nginx/owncloud-access.log.6 /var/log/nginx/owncloud-access.log.6
		[ -f /var/log/nginx/owncloud-access.log.7 ] && mv -v /var/log/nginx/owncloud-access.log.7 /var/log/nginx/owncloud-access.log.7
		[ -f /var/log/nginx/owncloud-error.log ] && mv -v /var/log/nginx/owncloud-error.log /var/log/nginx/owncloud-error.log
		[ -f /var/log/nginx/owncloud-error.log.1 ] && mv -v /var/log/nginx/owncloud-error.log.1 /var/log/nginx/owncloud-error.log.1
		[ -f /var/log/nginx/owncloud-error.log.2 ] && mv -v /var/log/nginx/owncloud-error.log.2 /var/log/nginx/owncloud-error.log.2
		[ -f /var/log/nginx/owncloud-error.log.3 ] && mv -v /var/log/nginx/owncloud-error.log.3 /var/log/nginx/owncloud-error.log.3
		[ -f /var/log/nginx/owncloud-error.log.4 ] && mv -v /var/log/nginx/owncloud-error.log.4 /var/log/nginx/owncloud-error.log.4
		[ -f /var/log/nginx/owncloud-error.log.5 ] && mv -v /var/log/nginx/owncloud-error.log.5 /var/log/nginx/owncloud-error.log.5
		[ -f /var/log/nginx/owncloud-error.log.6 ] && mv -v /var/log/nginx/owncloud-error.log.6 /var/log/nginx/owncloud-error.log.6
		[ -f /var/log/nginx/owncloud-error.log.7 ] && mv -v /var/log/nginx/owncloud-error.log.7 /var/log/nginx/owncloud-error.log.7

		# Upgrade step 4/6 - Prepare config file for migration
		source $MySB_InstallDir/inc/vars
		source /etc/MySB/config_db
		mv -vf $ownCloudDir $gsNextCloudDir
		install -g www-data -o www-data -m 0640 $MySB_InstallDir/templates/nextcloud/nextcloud.config.php.tmpl $gsNextCloudDir/config/config.php
		perl -pi -e "s/<version>/$Version/g" $gsNextCloudDir/config/config.php
		perl -pi -e "s/<db_password>/$MySQL_MysbPassword/g" $gsNextCloudDir/config/config.php
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:set secret --value=$Secret"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:set passwordsalt --value=$PasswordSalt"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:set mail_from_address --value=$MailFrom"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:set mail_domain --value=$MailDomain"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:set trusted_domains 1 --value=$gsHostNameFqdn:$gsPort_HTTPS"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:set default_language --value=$EnvLang"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:set skeletondirectory --value=$gsNextCloudDir/core/skeleton"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:set lost_password_link --value=https://$gsHostNameFqdn:$gsPort_HTTPS/?user/change-password.html"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:set overwritehost --value=$gsHostNameFqdn:$gsPort_HTTPS"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:set overwrite.cli.url --value=https://127.0.0.1:$gsPort_HTTPS/nc"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:set logtimezone --value=$gsTimeZone"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:set assetdirectory --value=$gsNextCloudDir"

		# Upgrade step 5/6 - First release of NextCloud for the migration
		NextCloudVersion="10.0.4"
		NextCloudFile="nextcloud_v$NextCloudVersion.zip"
		NextCloudUrl="https://download.nextcloud.com/server/releases/nextcloud-$NextCloudVersion.zip"
		echo
		echo "########## NextCloud"
		echo "Directory : $gsNextCloudDir"
		echo "Version : $NextCloudVersion"
		echo "File : $NextCloudFile"
		echo "URL : $NextCloudUrl"
		echo
		if [ ! -f $MySB_InstallDir/temp/$NextCloudFile ]; then
			curl -skLS --retry 3 -o "$MySB_InstallDir/temp/$NextCloudFile" "$NextCloudUrl"
		fi
		if [ -f $MySB_InstallDir/temp/$NextCloudFile ] && [ -d $gsNextCloudDir ]; then
			if [ -f $gsNextCloudDir/config/config.php ]; then
				mv -v $gsNextCloudDir/config/config.php $MySB_InstallDir/temp/owncloud_config.php
			fi
			if [ -d $gsNextCloudDir/apps2 ]; then mv -v $gsNextCloudDir/apps2 $MySB_InstallDir/temp/owncloud_apps2; fi
			if [ -f $MySB_InstallDir/temp/$NextCloudFile ]; then gfnDeleteDirectory 1 "$gsNextCloudDir"; fi
			if [ ! -d $gsNextCloudDir ]; then
				unzip $MySB_InstallDir/temp/$NextCloudFile -d $MySB_InstallDir/temp/
				SubDirNextCloud="`unzip -l $MySB_InstallDir/temp/$NextCloudFile | awk '{ print $4 }' | cut -d '/' -f 1 | uniq | sed '1,3d;$d'`"
				if [ -d $MySB_InstallDir/temp/$SubDirNextCloud ]; then mv -v $MySB_InstallDir/temp/$SubDirNextCloud $gsNextCloudDir; fi
			fi
		fi
		# Restore configs & apps2
		if [ -f $MySB_InstallDir/temp/owncloud_config.php ]; then mv -v $MySB_InstallDir/temp/owncloud_config.php $gsNextCloudDir/config/config.php; fi
		if [ -d $MySB_InstallDir/temp/owncloud_apps2 ]; then
			if [ -d $gsNextCloudDir/apps2 ]; then rm -rfv $gsNextCloudDir/apps2; fi
			mv -v $MySB_InstallDir/temp/owncloud_apps2 $gsNextCloudDir/apps2
		fi
		gfnManageDirAndFiles 'global'
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ upgrade -v"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ maintenance:repair"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ maintenance:mimetype:update-db"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ maintenance:mimetype:update-js"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ app:enable files_external"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ app:enable notifications"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ background:cron"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ files:scan --all"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ files:cleanup"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:get version"
		cat $gsNextCloudDir/config/config.php

		# Upgrade step 6/6 - First release of NextCloud for the migration
		NextCloudVersion="11.0.3"
		NextCloudFile="nextcloud_v$NextCloudVersion.zip"
		NextCloudUrl="https://download.nextcloud.com/server/releases/nextcloud-$NextCloudVersion.zip"
		echo
		echo "########## NextCloud"
		echo "Directory : $gsNextCloudDir"
		echo "Version : $NextCloudVersion"
		echo "File : $NextCloudFile"
		echo "URL : $NextCloudUrl"
		echo
		if [ ! -f $MySB_InstallDir/temp/$NextCloudFile ]; then
			curl -skLS --retry 3 -o "$MySB_InstallDir/temp/$NextCloudFile" "$NextCloudUrl"
		fi
		if [ -f $MySB_InstallDir/temp/$NextCloudFile ] && [ -d $gsNextCloudDir ]; then
			if [ -f $gsNextCloudDir/config/config.php ]; then
				mv -v $gsNextCloudDir/config/config.php $MySB_InstallDir/temp/owncloud_config.php
			fi
			if [ -d $gsNextCloudDir/apps2 ]; then mv -v $gsNextCloudDir/apps2 $MySB_InstallDir/temp/owncloud_apps2; fi
			if [ -f $MySB_InstallDir/temp/$NextCloudFile ]; then gfnDeleteDirectory 1 "$gsNextCloudDir"; fi
			if [ ! -d $gsNextCloudDir ]; then
				unzip $MySB_InstallDir/temp/$NextCloudFile -d $MySB_InstallDir/temp/
				SubDirNextCloud="`unzip -l $MySB_InstallDir/temp/$NextCloudFile | awk '{ print $4 }' | cut -d '/' -f 1 | uniq | sed '1,3d;$d'`"
				if [ -d $MySB_InstallDir/temp/$SubDirNextCloud ]; then mv -v $MySB_InstallDir/temp/$SubDirNextCloud $gsNextCloudDir; fi
			fi
		fi
		# Restore configs & apps2
		if [ -f $MySB_InstallDir/temp/owncloud_config.php ]; then mv -v $MySB_InstallDir/temp/owncloud_config.php $gsNextCloudDir/config/config.php; fi
		if [ -d $MySB_InstallDir/temp/owncloud_apps2 ]; then
			if [ -d $gsNextCloudDir/apps2 ]; then rm -rfv $gsNextCloudDir/apps2; fi
			mv -v $MySB_InstallDir/temp/owncloud_apps2 $gsNextCloudDir/apps2
		fi
		gfnManageDirAndFiles 'global'
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ upgrade -v"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ maintenance:repair"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ maintenance:mimetype:update-db"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ maintenance:mimetype:update-js"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ app:enable files_external"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ app:enable notifications"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ background:cron"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ files:scan --all"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ files:cleanup"
		su -s /bin/sh www-data -c "/usr/bin/php $gsNextCloudDir/occ config:system:get version"
		cat $gsNextCloudDir/config/config.php

		# Replace old MySQL function
		gfnListCountUsers 'normal'
		for seedUser in $gsUsersList; do
			install -v -o root -g root -m 0755 $MySB_InstallDir/templates/init/etc.init.d.rtorrent.tmpl /etc/init.d/rtorrent-$seedUser
			perl -pi -e "s/<username>/$seedUser/g" /etc/init.d/rtorrent-$seedUser
		done

		# Remove old banners
		rm -fv $MySB_InstallDir/files/banner_*
	;;
	"AFTER")
		####################################
		#### To call for every upgrade - BoF
		# Create missing directories and change rights
		gfnManageDirAndFiles 'global'

		# STOP & START services
		gfnManageServices stop "ntp stunnel4 postfix"
		gfnManageServices start "ntp stunnel4 postfix samba nginx dnscrypt-proxy webmin"

		# Update version info
		cmdMySQL 'MySB_db' "UPDATE system SET mysb_version = '$gsCurrentVersion' WHERE id_system='1';" -v
		figlet MySB $gsCurrentVersion > /etc/motd
		echo >> /etc/motd

		# Send mail for each user with new version
		source $MySB_InstallDir/inc/vars
		source $MySB_InstallDir/inc/funcs_by_script/funcs_MySB_CreateUser
		gfnListCountUsers 'normal'
		gsRutorrentDirEscaped="`echo $gsRutorrentDir | sed s,/,\\\\\\\\\\/,g`"
		for seedUser in $gsUsersList; do
			sRequestValues="`cmdMySQL 'MySB_db' "SELECT id_users,users_passwd FROM users WHERE users_ident = '$seedUser';" | sed 's/\t/|/g;'`"
			UserId="`echo $sRequestValues | awk '{split($0,a,"|"); print a[1]}'`"
			UserPassword="`echo $sRequestValues | awk '{split($0,a,"|"); print a[2]}'`"
			install -v -o root -g root -m 0755 $MySB_InstallDir/templates/init/etc.init.d.rtorrent.tmpl /etc/init.d/rtorrent-$seedUser
			perl -pi -e "s/<username>/$seedUser/g" /etc/init.d/rtorrent-$seedUser
			gfnCreateRtorrentConfigFile "$seedUser" 'force'

			if [ "$UserId" == "$gnMainUserId" ] && [ ! -z "$UserPassword" ]; then
				# Remove main user password from database
				cmdMySQL 'MySB_db' "UPDATE users SET users_passwd = '' WHERE admin = '1';" -v
				gfnScriptInvoke 'ScreenSTD' "$MySB_InstallDir/bin/MySB_ChangeUserPassword" "$seedUser" "$UserPassword" 'UPGRADE'
			else
				# Init password required
				cmdMySQL 'MySB_db' "UPDATE users SET init_password = '1' WHERE users_ident = '$seedUser';" -v
				Subject="$Upgrade_SubjectUpgraded $gsCurrentVersion"
				gfnSendMail "$Subject" "$seedUser" "upgrade"
			fi
		done
		#### To call for every upgrade - EoF
		####################################

		# Cleaning
		rm -vf $MySB_InstallDir/db/*.sql
		if [ -d /var/log/dnscrypt-proxy ]; then rm -rfv /var/log/dnscrypt-proxy; fi
		if [ -f /etc/logrotate.d/nginx.dpkg-dist ]; then rm -vf /etc/logrotate.d/nginx.dpkg-dist; fi
		if [ -f /etc/init.d/plexmediaserver.dpkg-bak ]; then rm -vf /etc/init.d/plexmediaserver.dpkg-bak; fi
		if [ -f /etc/samba/smb.conf.ucf-dist ]; then rm -vf /etc/samba/smb.conf.ucf-dist; fi
		if [ -f /etc/php5/cli/php.ini.ucf-dist ]; then rm -vf /etc/php5/cli/php.ini.ucf-dist; fi
		if [ -f /etc/php5/fpm/php.ini.ucf-dist ]; then rm -vf /etc/php5/fpm/php.ini.ucf-dist; fi
		if [ -f $MySB_InstallDir/logs/UpdateGeoIP.bsh.log ]; then rm -vf $MySB_InstallDir/logs/UpdateGeoIP.bsh.log; fi
		for seedUser in $gsUsersList; do
			rm -v /home/$seedUser/logs/*
		done
		# Delete old MySB's backups files
		rm -vf ${MySB_InstallDir}_backup/Backup-*-v1.*.tar.gz
		rm -vf ${MySB_InstallDir}_backup/Backup-*-v2.*.tar.gz
		rm -vf ${MySB_InstallDir}_backup/Backup-*-v3.0.tar.gz
		rm -vf ${MySB_InstallDir}_backup/Backup-*-v3.1.tar.gz
		rm -vf ${MySB_InstallDir}_backup/Backup-*-v3.2.tar.gz
		rm -vf ${MySB_InstallDir}_backup/Backup-*-v3.3.tar.gz
		rm -vf ${MySB_InstallDir}_backup/Backup-*-v3.4.tar.gz

		#### Apply quota for users
		gfnManageQuota

		#### Check actuel quota
		repquota -a
	;;
esac

# -----------------------------------------
source $(dirname $0)/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################