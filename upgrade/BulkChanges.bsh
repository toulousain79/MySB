#!/bin/bash
# -----------------------------------------
source $(dirname $0)/../inc/includes_before
# -----------------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

case "$1" in
	"BEFORE")
		####################################
		#### To call for every upgrade - BoF
		# Create missing directories and change rights
		ManageDirectoriesAndFiles 'global'

		# Upgrade in progress page
		UpgradeInProgress "on"

		# Switching DNS
		SwitchDNS "bind"

		# Forcing NTP update
		ping -c4 0.fr.pool.ntp.org
		/usr/sbin/ntpdate -u 0.fr.pool.ntp.org

		#### MySQL
		mysql --defaults-extra-file=/root/.config.cnf --database=MySB_db < $MySB_InstallDir/templates/Dump_MySQL_MySB_db_Schema_2016-04-03.sql

		if [ -z $funcs_Install ]; then
			source $MySB_InstallDir/inc/funcs_by_script/funcs_Install
		fi
		#### To call for every upgrade - EoF
		####################################

		#### MySQL
		source /etc/MySB/config_db
		mysql -u root -p$MySQL_RootPassword <<-EOF
		DELETE FROM mysql.plugin WHERE name='innodb';
		DELETE FROM mysql.plugin WHERE name='federated';
		DELETE FROM mysql.plugin WHERE name='blackhole';
		DELETE FROM mysql.plugin WHERE name='archive';
		EOF
		rm -v /etc/mysql/conf.d/*.cnf
		perl -pi -e "s/key_buffer/key_buffer_size/g" /etc/mysql/my.cnf
		cp -vf $MySB_InstallDir/templates/etc.mysql.conf.d.mysb.tmpl /etc/mysql/conf.d/MySB.cnf
		# providers_monitoring
		Func_SQL_Command 'INSERT' 'MySB_db' 'providers_monitoring' 'provider,ipv4,hostname' "'OVH', '', 'proxy.p19.ovh.net'" '-echo'
		Func_SQL_Command 'INSERT' 'MySB_db' 'providers_monitoring' 'provider,ipv4,hostname' "'OVH', '', 'proxy.ovh.net'" '-echo'
		Func_SQL_Command 'INSERT' 'MySB_db' 'providers_monitoring' 'provider,ipv4,hostname' "'OVH', '92.222.184.0/24', ''" '-echo'
		Func_SQL_Command 'INSERT' 'MySB_db' 'providers_monitoring' 'provider,ipv4,hostname' "'OVH', '92.222.185.0/24', ''" '-echo'
		Func_SQL_Command 'INSERT' 'MySB_db' 'providers_monitoring' 'provider,ipv4,hostname' "'OVH', '92.222.186.0/24', ''" '-echo'
		Func_SQL_Command 'INSERT' 'MySB_db' 'providers_monitoring' 'provider,ipv4,hostname' "'OVH', '167.114.37.0/24', ''" '-echo'
		Func_SQL_Command 'INSERT' 'MySB_db' 'providers_monitoring' 'provider,ipv4,hostname' "'OVH', '151.80.231.244/32', ''" '-echo'
		Func_SQL_Command 'INSERT' 'MySB_db' 'providers_monitoring' 'provider,ipv4,hostname' "'OVH', '151.80.231.245/32', ''" '-echo'
		Func_SQL_Command 'INSERT' 'MySB_db' 'providers_monitoring' 'provider,ipv4,hostname' "'OVH', '151.80.231.246/32', ''" '-echo'
		# lets_encrypt
		Func_SQL_Command 'UPDATE' 'MySB_db' 'lets_encrypt' "ipv4 = ''" "addresses = 'acme-v01.api.letsencrypt.org'" '-echo'
		Func_SQL_Command 'INSERT' 'MySB_db' 'lets_encrypt' 'addresses,ipv4' "'acme-staging.api.letsencrypt.org', ''" '-echo'
		# repositories	
		Func_SQL_Command 'ALTER' 'MySB_db' 'CHANGE' 'repositories' 'on_boot' "TINYINT( 1 ) NOT NULL DEFAULT '0'" '-echo'
		Func_SQL_Command 'ALTER' 'MySB_db' 'DROP' 'repositories' 'old_file' '-echo'
		Func_SQL_Command 'ALTER' 'MySB_db' 'ADD' 'repositories' 'upgrade' "TINYINT( 1 ) NOT NULL DEFAULT '0' AFTER \`version\`" '-echo'
		Func_SQL_Command 'UPDATE' 'MySB_db' 'repositories' "version = '0.5.0', file= 'LetsEncrypt_v0.5.0.zip'" "name = 'ownCloud'" '-echo'
		Func_SQL_Command 'UPDATE' 'MySB_db' 'repositories' "version = '9.0.1', file= 'owncloud_v9.0.1.zip', upgrade = '1', url = 'https://download.owncloud.org/community/owncloud-9.0.1.zip'" "name = 'ownCloud'" '-echo'
		Func_SQL_Command 'UPDATE' 'MySB_db' 'repositories' "version = '1.0.10', file= 'libsodium_v1.0.10.zip', upgrade = '1'" "name = 'Libsodium'" '-echo'
		Func_SQL_Command 'UPDATE' 'MySB_db' 'repositories' "version = '1.0.2'" "name = 'Composer'" '-echo'
		Func_SQL_Command 'UPDATE' 'MySB_db' 'repositories' "url = 'https://github.com/toulousain79/MySB/raw/v3.4/files/xmlrpc-c_v1.42.0.zip'" "name = 'XMLRPC'" '-echo'
		Func_SQL_Command 'DELETE' 'MySB_db' 'repositories' "name = 'MiniDLNA Webmin Module'"
		# system
		Func_SQL_Command 'ALTER' 'MySB_db' 'ADD' 'system' 'quota_default' "INT( 32 ) NOT NULL" '-echo'
		# users
		Func_SQL_Command 'ALTER' 'MySB_db' 'ADD' 'users' 'quota' "INT( 32 ) NOT NULL" '-echo'
		# services
		Func_SQL_Command 'UPDATE' 'MySB_db' 'services' "port_tcp1 = '8887'" "serv_name = 'CakeBox-Light'" '-echo'

		#### Cakebox-Light cleaning
		if [ -f /etc/nginx/locations/Cakebox-Light.conf ]; then
			rm -f /etc/nginx/locations/Cakebox-Light.conf
		fi
		if [ -f /etc/nginx/proxy/Cakebox-Light.conf ]; then
			rm -f /etc/nginx/proxy/Cakebox-Light.conf
		fi

		#### TMPFS
		# PHP
		sed -i '/PHP TMPFS/d' /etc/fstab
		sed -i '/\/var\/lib\/php5\/sessions/d' /etc/fstab
		echo "# PHP TMPFS" >> /etc/fstab
		echo "tmpfs   /var/lib/php5/sessions tmpfs defaults,nosuid,noatime,mode=1777,size=64M 0 0" >> /etc/fstab
		# MySQL
		sed -i '/MySQL/d' /etc/fstab
		sed -i '/MySQL_TempDir/d' /etc/fstab
		echo "# MySQL Temp Directory" >> /etc/fstab
		echo "tmpfs   /media/MySQL_TempDir      tmpfs   defaults,nosuid,noatime,mode=1777 0 0" >> /etc/fstab
		# NginX
		sed -i '/PageSpeed/d' /etc/fstab
		sed -i '/pagespeed/d' /etc/fstab
		echo "# Nginx PageSpeed" >> /etc/fstab
		echo "tmpfs   /usr/share/nginx/pagespeed      tmpfs   defaults,nosuid,noatime,mode=1777,size=64M 0 0" >> /etc/fstab
	;;
	"AFTER")
		####################################
		#### To call for every upgrade - BoF
		# Create missing directories and change rights
		ManageDirectoriesAndFiles 'global'

		# STOP & START services
		ManageServices stop "ntp stunnel4 postfix"
		ManageServices start "ntp stunnel4 postfix samba nginx dnscrypt-proxy webmin"

		# Upgrade in progress page
		UpgradeInProgress "off"

		# Update version info
		Func_SQL_Command 'UPDATE' 'MySB_db' 'system' "mysb_version = '$MySB_CurrentVersion'" "id_system = '1'"
		if [ -f $MySB_InstallDir/files/current_version ]; then
			rm -f $MySB_InstallDir/files/current_version
		fi
		figlet MySB $MySB_CurrentVersion > /etc/motd
		echo >> /etc/motd

		# Send mail for each user with new version
		if [ -f $MySB_InstallDir/inc/vars ]; then source $MySB_InstallDir/inc/vars; fi
		MainUserId="`Func_SQL_Command 'SELECT' 'MySB_db' 'id_users' 'users' "admin = '1'"`"
		RutorrentDirEscaped="`echo $RutorrentDir | sed s,/,\\\\\\\\\\/,g`"
		for seedUser in $UsersList; do
			UserId="`Func_SQL_Command 'SELECT' 'MySB_db' 'id_users' 'users' "users_ident = '$seedUser'"`"
			UserPassword="`Func_SQL_Command 'SELECT' 'MySB_db' 'users_passwd' 'users' "users_ident = '$seedUser'"`"
			cp $MySB_InstallDir/templates/init/etc.init.rtorrent.tmpl /etc/init.d/rtorrent-$seedUser
			perl -pi -e "s/<username>/$seedUser/g" /etc/init.d/rtorrent-$seedUser
			chmod +x /etc/init.d/rtorrent-$seedUser
			source $MySB_InstallDir/inc/funcs_by_script/funcs_MySB_CreateUser
			CreateRtorrentConfigFile "$seedUser" 'force'

			if [ "$UserId" == "$MainUserId" ] && [ ! -z "$UserPassword" ]; then
				# Remove main user password from database
				Func_SQL_Command 'UPDATE' 'MySB_db' 'users' "users_passwd = ''" "admin = '1'"
				ScriptInvoke 'ScreenSTD' "$MySB_InstallDir/bin/MySB_ChangeUserPassword" "$seedUser" "$UserPassword" 'UPGRADE'
			else
				# Init password required
				Func_SQL_Command 'UPDATE' 'MySB_db' 'users' "init_password = '1'" "users_ident = '$seedUser'"
				Subject="$Upgrade_SubjectUpgraded $MySB_CurrentVersion"
				Case="upgrade"
				SendMail "$Subject" "$seedUser" "$Case"
			fi
		done
		#### To call for every upgrade - EoF
		####################################

		#### Apply quota for current users
		UsersSpaceUsed=0
		for seedUser in $UsersList; do
			if [ -d /home/$seedUser/ ]; then
				HomeTemp="`du -bs /home/$seedUser/ | awk '{ print $1 }'`"
				UsersSpaceUsed=$(($UsersSpaceUsed+$HomeTemp))
			fi
			if [ -d /home/owncloud/$seedUser/ ]; then
				OwncloudTemp="`du -bs /home/owncloud/$seedUser/ | awk '{ print $1 }'`"
				UsersSpaceUsed=$(($UsersSpaceUsed+$OwncloudTemp))
			fi
			unset HomeTemp OwncloudTemp
		done
		FreeSpaceToKeep="`python -c "print 2 * 1024**2"`" # Keep a minimum of 2Go of free space
		FreeSpace="`df --sync /home/ | awk '{ print $4 }' | tail -n 1`"
		FreeSpace=$(($FreeSpace-$FreeSpaceToKeep))
		FreeSpace=$(($FreeSpace+$UsersSpaceUsed))
		Func_SQL_Command 'UPDATE' 'MySB_db' 'system' "quota_default = '$FreeSpace'" "id_system = '1'" '-echo'
		CountingUsers
		SpaceByUser=$(($FreeSpace/$TotalUsers))
		# Apply real space quota for each users
		for seedUser in $UsersList; do
			Func_SQL_Command 'UPDATE' 'MySB_db' 'users' "quota = '$SpaceByUser'" "users_ident = '$seedUser'"
			setquota -u -F vfsv0 $seedUser $SpaceByUser $SpaceByUser 1000000 1000000 /

			# ownCloud Quota
			if [ "$IsInstalled_ownCloud" == "YES" ]; then
				IfExist="`Func_SQL_Command 'SELECT' 'ownCloud_db' 'configvalue' 'oc_preferences' "userid='$seedUser' AND configkey='quota'"`"
				if [ -z $IfExist ]; then
					Func_SQL_Command 'INSERT' 'ownCloud_db' 'oc_preferences' 'userid,appid,configkey,configvalue' "'$seedUser','files','quota','$SpaceByUser KB'" '-echo'
				else
					Func_SQL_Command 'UPDATE' 'ownCloud_db' 'oc_preferences' "configvalue = '$SpaceByUser KB'" "userid='$seedUser' AND configkey='quota'" '-echo'
				fi

				unset IfExist
			fi
		done

		#### Quota, add journaled quotas to the interested partition
		if [ ! -z "`cat /etc/fstab | grep 'noatime,nodiratime,errors=remount-ro'`" ] && [ -z "`cat /etc/fstab | grep 'usrjquota=aquota.user,grpjquota=aquota.group,jqfmt=vfsv0' | grep -v '/boot'`" ]; then
			perl -pi -e "s/noatime,nodiratime,errors=remount-ro/noatime,nodiratime,errors=remount-ro,usrjquota=aquota.user,grpjquota=aquota.group,jqfmt=vfsv0/g" /etc/fstab
		fi
		mount -ov remount /
		quotaoff -av
		quotacheck -vagum
		quotaon -av
		repquota -a
	;;
esac

# -----------------------------------------
source $(dirname $0)/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################