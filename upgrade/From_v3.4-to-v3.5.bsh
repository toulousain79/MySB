#!/bin/bash
# -----------------------------------------
source $(dirname $0)/../inc/includes_before
# -----------------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

#### Upgrade in progress page + Stop Cron service
UpgradeInProgress "on"

#### Count steps
echo
CurrentSTEP=0
TotalSTEP=$(cat $0 | grep 'CurrentSTEP++' | grep -v 'TotalSTEP' | wc -l)

#### Banner
if [ "$BANNER" == "ON" ]; then
	BannerGenerator
fi
echo
echo -e "$Upgrade_Banner"
echo

#### Questions
ScriptInvoke 'source' "$MySB_InstallDir/install/Questions" "$$" 'UPGRADE' "$MySB_InstallDir"
echo

#### Vars
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Upgrade_ReadingDatabaseInfos$CEND..."
source $MySB_InstallDir/inc/vars
ListCountUsers
StatusSTD

#### Bulk changes
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Upgrade_BulkChanges$CEND..."
ScriptInvoke 'ScreenWAIT' "$MySB_InstallDir/upgrade/BulkChanges.bsh" 'BEFORE' 'UPGRADE'
StatusSTD

#### SourcesList
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Upgrade_UpdateDebianSources$CEND..."
ScriptInvoke 'ScreenWAIT' "$MySB_InstallDir/install/SourcesList" 'UPGRADE'
StatusSTD

#### Packages
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Upgrade_AllNeededPackages$CEND..."
ScriptInvoke 'ScreenWAIT' "$MySB_InstallDir/install/Packages" 'UPGRADE'
StatusSTD

#### PHP
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Upgrade_PHP$CEND..."
ScriptInvoke 'ScreenWAIT' "$MySB_InstallDir/install/PHP" 'UPGRADE'
StatusSTD

#### MySQL
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Upgrade_MySQL$CEND..."
ScriptInvoke 'ScreenWAIT' "$MySB_InstallDir/install/MySQL" 'UPGRADE'
StatusSTD

#### DownloadAll
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Upgrade_DownloadAll$CEND..."
ScriptInvoke 'ScreenWAIT' "$MySB_InstallDir/install/DownloadAll" 'UPGRADE'
StatusSTD

#### Certificate
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Upgrade_Certificate$CEND..."
ScriptInvoke 'ScreenWAIT' "$MySB_InstallDir/install/Certificates" 'CreateCACertificate' 'mysb' 'UPGRADE'
StatusSTD

#### Let's Encrypt
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Upgrade_LetsEncrypt$CEND..."
ScriptInvoke 'ScreenWAIT' "$MySB_InstallDir/install/LetsEncrypt" 'UPGRADE'
StatusSTD

#### RKHunter
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Upgrade_RKhunter$CEND..."
ScriptInvoke 'ScreenWAIT' "$MySB_InstallDir/install/RKHunter" 'UPGRADE'
StatusSTD

#### NginX
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Upgrade_NginX$CEND..."
ScriptInvoke 'ScreenWAIT' "$MySB_InstallDir/install/Nginx" 'UPGRADE'
StatusSTD

######################################################################

#### Getting information about OVH monitoring engine
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Upgrade_ProviderInfos$CEND..."
case "$ServerProvider" in
	'OVH')
		ScriptInvoke 'ScreenWAIT' "$MySB_InstallDir/install/Monitoring" 'UPGRADE'
		StatusSTD
	;;
	*)
		echo -e "$Global_NothingToDo"
	;;
esac

#### Quota
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Upgrade_Quota$CEND..."
ScriptInvoke 'ScreenWAIT' "$MySB_InstallDir/install/Quota" 'UPGRADE'
StatusSTD

#### LogWatch
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Upgrade_LogWatch$CEND..."
if [ "$ToInstall_LogWatch" == "YES" ] || [ "$IsInstalled_LogWatch" == "YES" ]; then
	Func_SQL_Command 'UPDATE' 'MySB_db' 'services' "to_install = '1'" "serv_name = 'LogWatch'"
	ScriptInvoke 'ScreenWAIT' "$MySB_InstallDir/install/Logwatch" 'UPGRADE'
	StatusSTD
else
	echo -e "$Global_NothingToDo"
fi

#### Fail2Ban
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Upgrade_Fail2Ban$CEND..."
if [ "$ToInstall_Fail2Ban" == "YES" ] || [ "$IsInstalled_Fail2Ban" == "YES" ]; then
	Func_SQL_Command 'UPDATE' 'MySB_db' 'services' "to_install = '1'" "serv_name = 'Fail2Ban'"
	ScriptInvoke 'ScreenWAIT' "$MySB_InstallDir/install/Fail2Ban" 'UPGRADE'
	StatusSTD
else
	echo -e "$Global_NothingToDo"
fi

#### ownCloud
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Upgrade_ownCloud$CEND..."
if [ "$IsInstalled_ownCloud" == "YES" ]; then
	Func_SQL_Command 'UPDATE' 'MySB_db' 'services' "to_install = '1'" "serv_name = 'ownCloud'"
	ScriptInvoke 'ScreenWAIT' "$MySB_InstallDir/install/ownCloud" 'UPGRADE'
	StatusSTD
else
	echo -e "$Global_NothingToDo"
fi

### DNScrypt-proxy
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Upgrade_DNScrypt$CEND..."
if [ "$ToInstall_DNScrypt" == "YES" ] || [ "$IsInstalled_DNScrypt" == "YES" ]; then
	Func_SQL_Command 'UPDATE' 'MySB_db' 'services' "to_install = '1'" "serv_name = 'DNScrypt-proxy'"
	ScriptInvoke 'ScreenWAIT' "$MySB_InstallDir/install/DNScrypt" 'UPGRADE'
	StatusSTD
else
	echo -e "$Global_NothingToDo"
fi

######################################################################

#### Refresh tools
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Upgrade_RefreshMe$CEND..."
ScriptInvoke 'ScreenWAIT' "$MySB_InstallDir/bin/MySB_RefreshMe" "$Global_ALL" 'UPGRADE'
StatusSTD

#### Security rules
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Global_FinalSecurityRules$CEND..."
ScriptInvoke 'ScreenWAIT' "$MySB_InstallDir/bin/MySB_SecurityRules" 'create' 'UPGRADE'
StatusSTD

#### Cron
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Upgrade_Cron$CEND..."
ScriptInvoke 'ScreenWAIT' "$MySB_InstallDir/install/Cron" 'UPGRADE'
StatusSTD

#### Bulk changes
(( CurrentSTEP++ ))
echo -e -n "${CBLUE}$CurrentSTEP/$TotalSTEP	- $Upgrade_BulkChanges$CEND..."
ScriptInvoke 'ScreenWAIT' "$MySB_InstallDir/upgrade/BulkChanges.bsh" 'AFTER' 'UPGRADE'
StatusSTD

clear
echo -e "$Upgrade_UpgradeFinished"
echo
REBOOT=$Global_YES
REBOOT="`echo $REBOOT | tr '[:lower:]' '[:upper:]'`"

#### Upgrade in progress page + Start Cron service
UpgradeInProgress "off"

# -----------------------------------------
source $(dirname $0)/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################